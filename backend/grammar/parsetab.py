
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftORleftANDleftEQUAL_TONOT_EQUAL_TOleftLESSLESS_EQUALGREATER_EQUALGREATERleftPLUSMINUSleftDIVIDEMODULUSTIMESrightNOTUMINUSleftLEFT_PARENTHESISRIGHT_PARENTHESISLEFT_SQ_BRACKETRIGHT_SQ_BRACKETADITION AND BOOL BOOLEAN BREAK CASE CHAR CHARACTER COLON COMMA CONSOLE CONST CONTINUE DECIMAL DECREASE DEFAULT DIVIDE ELSE EQUAL EQUAL_TO FLOAT FOR FUNCTION GREATER GREATER_EQUAL ID IF INCREASE INDEXOF INTEGER JOIN LEFT_CURLY_BRACKET LEFT_PARENTHESIS LEFT_SQ_BRACKET LENGTH LESS LESS_EQUAL LOG MINUS MODULUS NOT NOT_EQUAL_TO NULL NUMBER OBJECT OF OR PARSEFLOAT PARSEINT PERIOD PLUS POP PUSH RETURN RIGHT_CURLY_BRACKET RIGHT_PARENTHESIS RIGHT_SQ_BRACKET SEMICOLON STRING SUBTRACTION SWITCH TERNARY TEXT TIMES TOLOWERCASE TOSTRING TOUPPERCASE TYPEOF VAR WHILEstart : blockblock : block instruction\n             | instruction instruction : declaration\n                   | declaration_array\n                   | assignment\n                   | if\n                   | switch\n                   | while\n                   | for\n                   | function\n                   | methods SEMICOLON\n                   | call_function SEMICOLON\n                   | break\n                   | continue\n                   | return\n                   | printdeclaration : symbol_type ID COLON data_type EQUAL expression SEMICOLONdeclaration : symbol_type ID COLON data_type SEMICOLONdeclaration : symbol_type ID EQUAL expression SEMICOLONassignment : ID EQUAL expression SEMICOLON\n                  | ID ADITION expression SEMICOLON\n                  | ID SUBTRACTION expression SEMICOLONexpression : expression TERNARY expression COLON expressionif : IF LEFT_PARENTHESIS expression RIGHT_PARENTHESIS LEFT_CURLY_BRACKET block RIGHT_CURLY_BRACKET\n          | IF LEFT_PARENTHESIS expression RIGHT_PARENTHESIS LEFT_CURLY_BRACKET block RIGHT_CURLY_BRACKET ELSE LEFT_CURLY_BRACKET block RIGHT_CURLY_BRACKET\n          | IF LEFT_PARENTHESIS expression RIGHT_PARENTHESIS LEFT_CURLY_BRACKET block RIGHT_CURLY_BRACKET else_if_list\n          | IF LEFT_PARENTHESIS expression RIGHT_PARENTHESIS LEFT_CURLY_BRACKET block RIGHT_CURLY_BRACKET else_if_list ELSE LEFT_CURLY_BRACKET block RIGHT_CURLY_BRACKETelse_if_list : else_if_list else_if\n                    | else_ifelse_if : ELSE IF LEFT_PARENTHESIS expression RIGHT_PARENTHESIS LEFT_CURLY_BRACKET block RIGHT_CURLY_BRACKETswitch : SWITCH LEFT_PARENTHESIS expression RIGHT_PARENTHESIS LEFT_CURLY_BRACKET cases RIGHT_CURLY_BRACKETcases : cases case\n             | casecase : CASE expression COLON block\n            | DEFAULT COLON blockwhile : WHILE LEFT_PARENTHESIS expression RIGHT_PARENTHESIS LEFT_CURLY_BRACKET block RIGHT_CURLY_BRACKETfor : FOR LEFT_PARENTHESIS declaration expression SEMICOLON expression RIGHT_PARENTHESIS LEFT_CURLY_BRACKET block RIGHT_CURLY_BRACKETfor : FOR LEFT_PARENTHESIS symbol_type ID OF ID RIGHT_PARENTHESIS LEFT_CURLY_BRACKET block RIGHT_CURLY_BRACKETbreak : BREAK SEMICOLONcontinue : CONTINUE SEMICOLONfunction : FUNCTION ID LEFT_PARENTHESIS RIGHT_PARENTHESIS LEFT_CURLY_BRACKET block RIGHT_CURLY_BRACKET\n                | FUNCTION ID LEFT_PARENTHESIS RIGHT_PARENTHESIS COLON data_type LEFT_CURLY_BRACKET block RIGHT_CURLY_BRACKET\n                | FUNCTION ID LEFT_PARENTHESIS params RIGHT_PARENTHESIS LEFT_CURLY_BRACKET block RIGHT_CURLY_BRACKET\n                | FUNCTION ID LEFT_PARENTHESIS params RIGHT_PARENTHESIS COLON data_type LEFT_CURLY_BRACKET block RIGHT_CURLY_BRACKETparams : params COMMA param\n              | paramparam : ID COLON data_type\n             | ID COLON data_type LEFT_SQ_BRACKET RIGHT_SQ_BRACKETreturn : RETURN expression SEMICOLON\n              | RETURN SEMICOLONcall_function : ID LEFT_PARENTHESIS expression_list RIGHT_PARENTHESIS\n                     | ID LEFT_PARENTHESIS RIGHT_PARENTHESISmethods : methods PERIOD name_method LEFT_PARENTHESIS RIGHT_PARENTHESIS\n               | methods PERIOD name_method expression\n               | methods PERIOD name_method\n               | access_array\n               | valuename_method : TOSTRING\n                   | TOLOWERCASE\n                   | TOUPPERCASE\n                   | PUSH\n                   | POP\n                   | INDEXOF\n                   | JOIN\n                   | LENGTHprint : CONSOLE PERIOD LOG LEFT_PARENTHESIS expression_list RIGHT_PARENTHESIS SEMICOLONmethods : PARSEINT expressionmethods : PARSEFLOAT expressionmethods : TYPEOF expressiondeclaration_array : symbol_type ID COLON data_type LEFT_SQ_BRACKET RIGHT_SQ_BRACKET EQUAL LEFT_SQ_BRACKET expression_list RIGHT_SQ_BRACKET SEMICOLONassignment : ID LEFT_SQ_BRACKET expression RIGHT_SQ_BRACKET EQUAL expression SEMICOLONaccess_array : ID LEFT_SQ_BRACKET expression RIGHT_SQ_BRACKETexpression_list : expression_list COMMA expression\n                       | expression expression : expression_unary\n                  | expression_binary\n                  | expression_group\n                  | methods\n                  | call_functionexpression_unary : MINUS expression %prec UMINUS\n                        | NOT expression\n                        | expression INCREASE\n                        | expression DECREASEexpression_binary : arithmetic\n                         | relational\n                         | logicalarithmetic : expression PLUS expression\n                  | expression MINUS expression\n                  | expression TIMES expression\n                  | expression DIVIDE expression\n                  | expression MODULUS expressionrelational : expression LESS expression\n                  | expression GREATER expression\n                  | expression EQUAL_TO expression\n                  | expression NOT_EQUAL_TO expression\n                  | expression LESS_EQUAL expression\n                  | expression GREATER_EQUAL expressionlogical : expression AND expression\n               | expression OR expressionexpression_group : LEFT_PARENTHESIS expression RIGHT_PARENTHESISsymbol_type : VAR\n                   | CONSTdata_type : NUMBER\n                 | FLOAT\n                 | STRING\n                 | CHAR\n                 | BOOLEANvalue : INTEGER\n             | DECIMAL\n             | TEXT\n             | CHARACTER\n             | BOOL\n             | NULLvalue : ID'
    
_lr_action_items = {'ID':([0,2,3,4,5,6,7,8,9,10,11,14,15,16,17,18,24,27,28,29,32,34,35,42,43,45,47,48,49,50,51,52,53,54,63,64,68,72,73,75,77,78,79,80,81,82,83,84,85,87,98,99,100,101,104,105,106,107,108,109,110,111,112,113,114,115,116,120,121,123,132,133,134,137,163,165,166,168,169,171,173,174,175,178,181,182,188,191,193,198,200,205,207,208,209,212,213,217,218,219,221,222,224,225,226,227,228,229,231,232,233,236,238,239,240,241,242,243,245,246,247,248,249,250,251,253,254,256,257,258,259,],[19,19,-3,-4,-5,-6,-7,-8,-9,-10,-11,-14,-15,-16,-17,46,56,69,69,69,69,-102,-103,-2,-12,-13,69,69,69,69,69,69,69,69,69,69,69,-40,-41,-51,69,-59,-60,-61,-62,-63,-64,-65,-66,69,69,142,143,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,-50,69,-21,-22,-23,69,69,69,-19,-20,69,19,19,69,195,19,143,69,19,69,19,19,19,-18,-72,-25,-32,19,-37,-42,19,19,-67,69,-27,-30,19,19,19,19,19,-44,19,19,-29,19,19,19,-43,19,69,19,19,-38,-39,-45,-71,-26,19,-28,19,19,-31,]),'IF':([0,2,3,4,5,6,7,8,9,10,11,14,15,16,17,42,43,45,72,73,75,121,132,133,134,166,168,171,173,178,188,193,198,200,205,207,208,209,212,213,217,218,219,221,223,224,225,226,227,228,229,231,232,233,236,237,238,239,240,241,242,243,246,247,248,249,250,251,253,254,256,257,258,259,],[20,20,-3,-4,-5,-6,-7,-8,-9,-10,-11,-14,-15,-16,-17,-2,-12,-13,-40,-41,-51,-50,-21,-22,-23,-19,-20,20,20,20,20,20,20,20,-18,-72,-25,-32,20,-37,-42,20,20,-67,235,-27,-30,20,20,20,20,20,-44,20,20,235,-29,20,20,20,-43,20,20,20,-38,-39,-45,-71,-26,20,-28,20,20,-31,]),'SWITCH':([0,2,3,4,5,6,7,8,9,10,11,14,15,16,17,42,43,45,72,73,75,121,132,133,134,166,168,171,173,178,188,193,198,200,205,207,208,209,212,213,217,218,219,221,224,225,226,227,228,229,231,232,233,236,238,239,240,241,242,243,246,247,248,249,250,251,253,254,256,257,258,259,],[21,21,-3,-4,-5,-6,-7,-8,-9,-10,-11,-14,-15,-16,-17,-2,-12,-13,-40,-41,-51,-50,-21,-22,-23,-19,-20,21,21,21,21,21,21,21,-18,-72,-25,-32,21,-37,-42,21,21,-67,-27,-30,21,21,21,21,21,-44,21,21,-29,21,21,21,-43,21,21,21,-38,-39,-45,-71,-26,21,-28,21,21,-31,]),'WHILE':([0,2,3,4,5,6,7,8,9,10,11,14,15,16,17,42,43,45,72,73,75,121,132,133,134,166,168,171,173,178,188,193,198,200,205,207,208,209,212,213,217,218,219,221,224,225,226,227,228,229,231,232,233,236,238,239,240,241,242,243,246,247,248,249,250,251,253,254,256,257,258,259,],[22,22,-3,-4,-5,-6,-7,-8,-9,-10,-11,-14,-15,-16,-17,-2,-12,-13,-40,-41,-51,-50,-21,-22,-23,-19,-20,22,22,22,22,22,22,22,-18,-72,-25,-32,22,-37,-42,22,22,-67,-27,-30,22,22,22,22,22,-44,22,22,-29,22,22,22,-43,22,22,22,-38,-39,-45,-71,-26,22,-28,22,22,-31,]),'FOR':([0,2,3,4,5,6,7,8,9,10,11,14,15,16,17,42,43,45,72,73,75,121,132,133,134,166,168,171,173,178,188,193,198,200,205,207,208,209,212,213,217,218,219,221,224,225,226,227,228,229,231,232,233,236,238,239,240,241,242,243,246,247,248,249,250,251,253,254,256,257,258,259,],[23,23,-3,-4,-5,-6,-7,-8,-9,-10,-11,-14,-15,-16,-17,-2,-12,-13,-40,-41,-51,-50,-21,-22,-23,-19,-20,23,23,23,23,23,23,23,-18,-72,-25,-32,23,-37,-42,23,23,-67,-27,-30,23,23,23,23,23,-44,23,23,-29,23,23,23,-43,23,23,23,-38,-39,-45,-71,-26,23,-28,23,23,-31,]),'FUNCTION':([0,2,3,4,5,6,7,8,9,10,11,14,15,16,17,42,43,45,72,73,75,121,132,133,134,166,168,171,173,178,188,193,198,200,205,207,208,209,212,213,217,218,219,221,224,225,226,227,228,229,231,232,233,236,238,239,240,241,242,243,246,247,248,249,250,251,253,254,256,257,258,259,],[24,24,-3,-4,-5,-6,-7,-8,-9,-10,-11,-14,-15,-16,-17,-2,-12,-13,-40,-41,-51,-50,-21,-22,-23,-19,-20,24,24,24,24,24,24,24,-18,-72,-25,-32,24,-37,-42,24,24,-67,-27,-30,24,24,24,24,24,-44,24,24,-29,24,24,24,-43,24,24,24,-38,-39,-45,-71,-26,24,-28,24,24,-31,]),'PARSEINT':([0,2,3,4,5,6,7,8,9,10,11,14,15,16,17,27,28,29,32,42,43,45,47,48,49,50,51,52,53,54,63,64,68,72,73,75,77,78,79,80,81,82,83,84,85,87,98,101,104,105,106,107,108,109,110,111,112,113,114,115,116,120,121,123,132,133,134,137,163,165,166,168,169,171,173,174,178,182,188,191,193,198,200,205,207,208,209,212,213,217,218,219,221,222,224,225,226,227,228,229,231,232,233,236,238,239,240,241,242,243,245,246,247,248,249,250,251,253,254,256,257,258,259,],[27,27,-3,-4,-5,-6,-7,-8,-9,-10,-11,-14,-15,-16,-17,27,27,27,27,-2,-12,-13,27,27,27,27,27,27,27,27,27,27,27,-40,-41,-51,27,-59,-60,-61,-62,-63,-64,-65,-66,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,-50,27,-21,-22,-23,27,27,27,-19,-20,27,27,27,27,27,27,27,27,27,27,27,-18,-72,-25,-32,27,-37,-42,27,27,-67,27,-27,-30,27,27,27,27,27,-44,27,27,-29,27,27,27,-43,27,27,27,27,-38,-39,-45,-71,-26,27,-28,27,27,-31,]),'PARSEFLOAT':([0,2,3,4,5,6,7,8,9,10,11,14,15,16,17,27,28,29,32,42,43,45,47,48,49,50,51,52,53,54,63,64,68,72,73,75,77,78,79,80,81,82,83,84,85,87,98,101,104,105,106,107,108,109,110,111,112,113,114,115,116,120,121,123,132,133,134,137,163,165,166,168,169,171,173,174,178,182,188,191,193,198,200,205,207,208,209,212,213,217,218,219,221,222,224,225,226,227,228,229,231,232,233,236,238,239,240,241,242,243,245,246,247,248,249,250,251,253,254,256,257,258,259,],[28,28,-3,-4,-5,-6,-7,-8,-9,-10,-11,-14,-15,-16,-17,28,28,28,28,-2,-12,-13,28,28,28,28,28,28,28,28,28,28,28,-40,-41,-51,28,-59,-60,-61,-62,-63,-64,-65,-66,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,-50,28,-21,-22,-23,28,28,28,-19,-20,28,28,28,28,28,28,28,28,28,28,28,-18,-72,-25,-32,28,-37,-42,28,28,-67,28,-27,-30,28,28,28,28,28,-44,28,28,-29,28,28,28,-43,28,28,28,28,-38,-39,-45,-71,-26,28,-28,28,28,-31,]),'TYPEOF':([0,2,3,4,5,6,7,8,9,10,11,14,15,16,17,27,28,29,32,42,43,45,47,48,49,50,51,52,53,54,63,64,68,72,73,75,77,78,79,80,81,82,83,84,85,87,98,101,104,105,106,107,108,109,110,111,112,113,114,115,116,120,121,123,132,133,134,137,163,165,166,168,169,171,173,174,178,182,188,191,193,198,200,205,207,208,209,212,213,217,218,219,221,222,224,225,226,227,228,229,231,232,233,236,238,239,240,241,242,243,245,246,247,248,249,250,251,253,254,256,257,258,259,],[29,29,-3,-4,-5,-6,-7,-8,-9,-10,-11,-14,-15,-16,-17,29,29,29,29,-2,-12,-13,29,29,29,29,29,29,29,29,29,29,29,-40,-41,-51,29,-59,-60,-61,-62,-63,-64,-65,-66,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,-50,29,-21,-22,-23,29,29,29,-19,-20,29,29,29,29,29,29,29,29,29,29,29,-18,-72,-25,-32,29,-37,-42,29,29,-67,29,-27,-30,29,29,29,29,29,-44,29,29,-29,29,29,29,-43,29,29,29,29,-38,-39,-45,-71,-26,29,-28,29,29,-31,]),'BREAK':([0,2,3,4,5,6,7,8,9,10,11,14,15,16,17,42,43,45,72,73,75,121,132,133,134,166,168,171,173,178,188,193,198,200,205,207,208,209,212,213,217,218,219,221,224,225,226,227,228,229,231,232,233,236,238,239,240,241,242,243,246,247,248,249,250,251,253,254,256,257,258,259,],[30,30,-3,-4,-5,-6,-7,-8,-9,-10,-11,-14,-15,-16,-17,-2,-12,-13,-40,-41,-51,-50,-21,-22,-23,-19,-20,30,30,30,30,30,30,30,-18,-72,-25,-32,30,-37,-42,30,30,-67,-27,-30,30,30,30,30,30,-44,30,30,-29,30,30,30,-43,30,30,30,-38,-39,-45,-71,-26,30,-28,30,30,-31,]),'CONTINUE':([0,2,3,4,5,6,7,8,9,10,11,14,15,16,17,42,43,45,72,73,75,121,132,133,134,166,168,171,173,178,188,193,198,200,205,207,208,209,212,213,217,218,219,221,224,225,226,227,228,229,231,232,233,236,238,239,240,241,242,243,246,247,248,249,250,251,253,254,256,257,258,259,],[31,31,-3,-4,-5,-6,-7,-8,-9,-10,-11,-14,-15,-16,-17,-2,-12,-13,-40,-41,-51,-50,-21,-22,-23,-19,-20,31,31,31,31,31,31,31,-18,-72,-25,-32,31,-37,-42,31,31,-67,-27,-30,31,31,31,31,31,-44,31,31,-29,31,31,31,-43,31,31,31,-38,-39,-45,-71,-26,31,-28,31,31,-31,]),'RETURN':([0,2,3,4,5,6,7,8,9,10,11,14,15,16,17,42,43,45,72,73,75,121,132,133,134,166,168,171,173,178,188,193,198,200,205,207,208,209,212,213,217,218,219,221,224,225,226,227,228,229,231,232,233,236,238,239,240,241,242,243,246,247,248,249,250,251,253,254,256,257,258,259,],[32,32,-3,-4,-5,-6,-7,-8,-9,-10,-11,-14,-15,-16,-17,-2,-12,-13,-40,-41,-51,-50,-21,-22,-23,-19,-20,32,32,32,32,32,32,32,-18,-72,-25,-32,32,-37,-42,32,32,-67,-27,-30,32,32,32,32,32,-44,32,32,-29,32,32,32,-43,32,32,32,-38,-39,-45,-71,-26,32,-28,32,32,-31,]),'CONSOLE':([0,2,3,4,5,6,7,8,9,10,11,14,15,16,17,42,43,45,72,73,75,121,132,133,134,166,168,171,173,178,188,193,198,200,205,207,208,209,212,213,217,218,219,221,224,225,226,227,228,229,231,232,233,236,238,239,240,241,242,243,246,247,248,249,250,251,253,254,256,257,258,259,],[33,33,-3,-4,-5,-6,-7,-8,-9,-10,-11,-14,-15,-16,-17,-2,-12,-13,-40,-41,-51,-50,-21,-22,-23,-19,-20,33,33,33,33,33,33,33,-18,-72,-25,-32,33,-37,-42,33,33,-67,-27,-30,33,33,33,33,33,-44,33,33,-29,33,33,33,-43,33,33,33,-38,-39,-45,-71,-26,33,-28,33,33,-31,]),'VAR':([0,2,3,4,5,6,7,8,9,10,11,14,15,16,17,42,43,45,55,72,73,75,121,132,133,134,166,168,171,173,178,188,193,198,200,205,207,208,209,212,213,217,218,219,221,224,225,226,227,228,229,231,232,233,236,238,239,240,241,242,243,246,247,248,249,250,251,253,254,256,257,258,259,],[34,34,-3,-4,-5,-6,-7,-8,-9,-10,-11,-14,-15,-16,-17,-2,-12,-13,34,-40,-41,-51,-50,-21,-22,-23,-19,-20,34,34,34,34,34,34,34,-18,-72,-25,-32,34,-37,-42,34,34,-67,-27,-30,34,34,34,34,34,-44,34,34,-29,34,34,34,-43,34,34,34,-38,-39,-45,-71,-26,34,-28,34,34,-31,]),'CONST':([0,2,3,4,5,6,7,8,9,10,11,14,15,16,17,42,43,45,55,72,73,75,121,132,133,134,166,168,171,173,178,188,193,198,200,205,207,208,209,212,213,217,218,219,221,224,225,226,227,228,229,231,232,233,236,238,239,240,241,242,243,246,247,248,249,250,251,253,254,256,257,258,259,],[35,35,-3,-4,-5,-6,-7,-8,-9,-10,-11,-14,-15,-16,-17,-2,-12,-13,35,-40,-41,-51,-50,-21,-22,-23,-19,-20,35,35,35,35,35,35,35,-18,-72,-25,-32,35,-37,-42,35,35,-67,-27,-30,35,35,35,35,35,-44,35,35,-29,35,35,35,-43,35,35,35,-38,-39,-45,-71,-26,35,-28,35,35,-31,]),'INTEGER':([0,2,3,4,5,6,7,8,9,10,11,14,15,16,17,27,28,29,32,42,43,45,47,48,49,50,51,52,53,54,63,64,68,72,73,75,77,78,79,80,81,82,83,84,85,87,98,101,104,105,106,107,108,109,110,111,112,113,114,115,116,120,121,123,132,133,134,137,163,165,166,168,169,171,173,174,178,182,188,191,193,198,200,205,207,208,209,212,213,217,218,219,221,222,224,225,226,227,228,229,231,232,233,236,238,239,240,241,242,243,245,246,247,248,249,250,251,253,254,256,257,258,259,],[36,36,-3,-4,-5,-6,-7,-8,-9,-10,-11,-14,-15,-16,-17,36,36,36,36,-2,-12,-13,36,36,36,36,36,36,36,36,36,36,36,-40,-41,-51,36,-59,-60,-61,-62,-63,-64,-65,-66,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,-50,36,-21,-22,-23,36,36,36,-19,-20,36,36,36,36,36,36,36,36,36,36,36,-18,-72,-25,-32,36,-37,-42,36,36,-67,36,-27,-30,36,36,36,36,36,-44,36,36,-29,36,36,36,-43,36,36,36,36,-38,-39,-45,-71,-26,36,-28,36,36,-31,]),'DECIMAL':([0,2,3,4,5,6,7,8,9,10,11,14,15,16,17,27,28,29,32,42,43,45,47,48,49,50,51,52,53,54,63,64,68,72,73,75,77,78,79,80,81,82,83,84,85,87,98,101,104,105,106,107,108,109,110,111,112,113,114,115,116,120,121,123,132,133,134,137,163,165,166,168,169,171,173,174,178,182,188,191,193,198,200,205,207,208,209,212,213,217,218,219,221,222,224,225,226,227,228,229,231,232,233,236,238,239,240,241,242,243,245,246,247,248,249,250,251,253,254,256,257,258,259,],[37,37,-3,-4,-5,-6,-7,-8,-9,-10,-11,-14,-15,-16,-17,37,37,37,37,-2,-12,-13,37,37,37,37,37,37,37,37,37,37,37,-40,-41,-51,37,-59,-60,-61,-62,-63,-64,-65,-66,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,-50,37,-21,-22,-23,37,37,37,-19,-20,37,37,37,37,37,37,37,37,37,37,37,-18,-72,-25,-32,37,-37,-42,37,37,-67,37,-27,-30,37,37,37,37,37,-44,37,37,-29,37,37,37,-43,37,37,37,37,-38,-39,-45,-71,-26,37,-28,37,37,-31,]),'TEXT':([0,2,3,4,5,6,7,8,9,10,11,14,15,16,17,27,28,29,32,42,43,45,47,48,49,50,51,52,53,54,63,64,68,72,73,75,77,78,79,80,81,82,83,84,85,87,98,101,104,105,106,107,108,109,110,111,112,113,114,115,116,120,121,123,132,133,134,137,163,165,166,168,169,171,173,174,178,182,188,191,193,198,200,205,207,208,209,212,213,217,218,219,221,222,224,225,226,227,228,229,231,232,233,236,238,239,240,241,242,243,245,246,247,248,249,250,251,253,254,256,257,258,259,],[38,38,-3,-4,-5,-6,-7,-8,-9,-10,-11,-14,-15,-16,-17,38,38,38,38,-2,-12,-13,38,38,38,38,38,38,38,38,38,38,38,-40,-41,-51,38,-59,-60,-61,-62,-63,-64,-65,-66,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,-50,38,-21,-22,-23,38,38,38,-19,-20,38,38,38,38,38,38,38,38,38,38,38,-18,-72,-25,-32,38,-37,-42,38,38,-67,38,-27,-30,38,38,38,38,38,-44,38,38,-29,38,38,38,-43,38,38,38,38,-38,-39,-45,-71,-26,38,-28,38,38,-31,]),'CHARACTER':([0,2,3,4,5,6,7,8,9,10,11,14,15,16,17,27,28,29,32,42,43,45,47,48,49,50,51,52,53,54,63,64,68,72,73,75,77,78,79,80,81,82,83,84,85,87,98,101,104,105,106,107,108,109,110,111,112,113,114,115,116,120,121,123,132,133,134,137,163,165,166,168,169,171,173,174,178,182,188,191,193,198,200,205,207,208,209,212,213,217,218,219,221,222,224,225,226,227,228,229,231,232,233,236,238,239,240,241,242,243,245,246,247,248,249,250,251,253,254,256,257,258,259,],[39,39,-3,-4,-5,-6,-7,-8,-9,-10,-11,-14,-15,-16,-17,39,39,39,39,-2,-12,-13,39,39,39,39,39,39,39,39,39,39,39,-40,-41,-51,39,-59,-60,-61,-62,-63,-64,-65,-66,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,-50,39,-21,-22,-23,39,39,39,-19,-20,39,39,39,39,39,39,39,39,39,39,39,-18,-72,-25,-32,39,-37,-42,39,39,-67,39,-27,-30,39,39,39,39,39,-44,39,39,-29,39,39,39,-43,39,39,39,39,-38,-39,-45,-71,-26,39,-28,39,39,-31,]),'BOOL':([0,2,3,4,5,6,7,8,9,10,11,14,15,16,17,27,28,29,32,42,43,45,47,48,49,50,51,52,53,54,63,64,68,72,73,75,77,78,79,80,81,82,83,84,85,87,98,101,104,105,106,107,108,109,110,111,112,113,114,115,116,120,121,123,132,133,134,137,163,165,166,168,169,171,173,174,178,182,188,191,193,198,200,205,207,208,209,212,213,217,218,219,221,222,224,225,226,227,228,229,231,232,233,236,238,239,240,241,242,243,245,246,247,248,249,250,251,253,254,256,257,258,259,],[40,40,-3,-4,-5,-6,-7,-8,-9,-10,-11,-14,-15,-16,-17,40,40,40,40,-2,-12,-13,40,40,40,40,40,40,40,40,40,40,40,-40,-41,-51,40,-59,-60,-61,-62,-63,-64,-65,-66,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,-50,40,-21,-22,-23,40,40,40,-19,-20,40,40,40,40,40,40,40,40,40,40,40,-18,-72,-25,-32,40,-37,-42,40,40,-67,40,-27,-30,40,40,40,40,40,-44,40,40,-29,40,40,40,-43,40,40,40,40,-38,-39,-45,-71,-26,40,-28,40,40,-31,]),'NULL':([0,2,3,4,5,6,7,8,9,10,11,14,15,16,17,27,28,29,32,42,43,45,47,48,49,50,51,52,53,54,63,64,68,72,73,75,77,78,79,80,81,82,83,84,85,87,98,101,104,105,106,107,108,109,110,111,112,113,114,115,116,120,121,123,132,133,134,137,163,165,166,168,169,171,173,174,178,182,188,191,193,198,200,205,207,208,209,212,213,217,218,219,221,222,224,225,226,227,228,229,231,232,233,236,238,239,240,241,242,243,245,246,247,248,249,250,251,253,254,256,257,258,259,],[41,41,-3,-4,-5,-6,-7,-8,-9,-10,-11,-14,-15,-16,-17,41,41,41,41,-2,-12,-13,41,41,41,41,41,41,41,41,41,41,41,-40,-41,-51,41,-59,-60,-61,-62,-63,-64,-65,-66,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,-50,41,-21,-22,-23,41,41,41,-19,-20,41,41,41,41,41,41,41,41,41,41,41,-18,-72,-25,-32,41,-37,-42,41,41,-67,41,-27,-30,41,41,41,41,41,-44,41,41,-29,41,41,41,-43,41,41,41,41,-38,-39,-45,-71,-26,41,-28,41,41,-31,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,14,15,16,17,42,43,45,72,73,75,121,132,133,134,166,168,205,207,208,209,213,217,221,224,225,232,238,242,248,249,250,251,253,256,259,],[0,-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-14,-15,-16,-17,-2,-12,-13,-40,-41,-51,-50,-21,-22,-23,-19,-20,-18,-72,-25,-32,-37,-42,-67,-27,-30,-44,-29,-43,-38,-39,-45,-71,-26,-28,-31,]),'RIGHT_CURLY_BRACKET':([3,4,5,6,7,8,9,10,11,14,15,16,17,42,43,45,72,73,75,121,132,133,134,166,168,188,189,190,193,198,205,207,208,209,210,213,217,219,221,224,225,227,231,232,238,239,240,241,242,243,246,248,249,250,251,253,254,256,258,259,],[-3,-4,-5,-6,-7,-8,-9,-10,-11,-14,-15,-16,-17,-2,-12,-13,-40,-41,-51,-50,-21,-22,-23,-19,-20,208,209,-34,213,217,-18,-72,-25,-32,-33,-37,-42,232,-67,-27,-30,-36,242,-44,-29,-35,248,249,-43,250,253,-38,-39,-45,-71,-26,256,-28,259,-31,]),'CASE':([3,4,5,6,7,8,9,10,11,14,15,16,17,42,43,45,72,73,75,121,132,133,134,166,168,172,189,190,205,207,208,209,210,213,217,221,224,225,227,232,238,239,242,248,249,250,251,253,256,259,],[-3,-4,-5,-6,-7,-8,-9,-10,-11,-14,-15,-16,-17,-2,-12,-13,-40,-41,-51,-50,-21,-22,-23,-19,-20,191,191,-34,-18,-72,-25,-32,-33,-37,-42,-67,-27,-30,-36,-44,-29,-35,-43,-38,-39,-45,-71,-26,-28,-31,]),'DEFAULT':([3,4,5,6,7,8,9,10,11,14,15,16,17,42,43,45,72,73,75,121,132,133,134,166,168,172,189,190,205,207,208,209,210,213,217,221,224,225,227,232,238,239,242,248,249,250,251,253,256,259,],[-3,-4,-5,-6,-7,-8,-9,-10,-11,-14,-15,-16,-17,-2,-12,-13,-40,-41,-51,-50,-21,-22,-23,-19,-20,192,192,-34,-18,-72,-25,-32,-33,-37,-42,-67,-27,-30,-36,-44,-29,-35,-43,-38,-39,-45,-71,-26,-28,-31,]),'SEMICOLON':([12,13,19,25,26,30,31,32,36,37,38,39,40,41,57,58,59,60,61,62,65,66,67,69,70,71,74,77,78,79,80,81,82,83,84,85,88,89,90,93,102,103,117,118,124,125,126,127,128,129,130,131,135,136,141,148,149,150,151,152,153,154,155,156,157,158,159,160,161,164,183,185,187,196,203,204,244,],[43,45,-115,-57,-58,72,73,75,-109,-110,-111,-112,-113,-114,-68,-76,-77,-78,-79,-80,-85,-86,-87,-115,-69,-70,121,-56,-59,-60,-61,-62,-63,-64,-65,-66,132,133,134,-53,-83,-84,-81,-82,-55,166,-104,-105,-106,-107,-108,168,-73,-52,174,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-54,-73,205,207,166,-24,221,251,]),'PERIOD':([12,19,25,26,33,36,37,38,39,40,41,57,58,59,60,61,62,65,66,67,69,70,71,77,78,79,80,81,82,83,84,85,93,102,103,117,118,124,135,136,148,149,150,151,152,153,154,155,156,157,158,159,160,161,164,183,203,],[44,-115,-57,-58,76,-109,-110,-111,-112,-113,-114,-68,-76,-77,-78,44,-80,-85,-86,-87,-115,-69,-70,-56,-59,-60,-61,-62,-63,-64,-65,-66,-53,-83,-84,-81,-82,-55,-73,-52,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-54,-73,-24,]),'EQUAL':([19,46,125,126,127,128,129,130,135,142,186,196,],[47,87,165,-104,-105,-106,-107,-108,169,87,206,165,]),'ADITION':([19,],[48,]),'SUBTRACTION':([19,],[49,]),'LEFT_SQ_BRACKET':([19,69,125,126,127,128,129,130,197,206,],[50,120,167,-104,-105,-106,-107,-108,216,222,]),'LEFT_PARENTHESIS':([19,20,21,22,23,27,28,29,32,47,48,49,50,51,52,53,54,56,63,64,68,69,77,78,79,80,81,82,83,84,85,87,98,101,104,105,106,107,108,109,110,111,112,113,114,115,116,120,122,123,137,163,165,166,168,169,174,182,191,205,222,235,245,],[51,52,53,54,55,68,68,68,68,68,68,68,68,68,68,68,68,100,68,68,68,51,123,-59,-60,-61,-62,-63,-64,-65,-66,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,163,68,68,68,68,-19,-20,68,68,68,68,-18,68,245,68,]),'TERNARY':([25,26,36,37,38,39,40,41,57,58,59,60,61,62,65,66,67,69,70,71,74,77,78,79,80,81,82,83,84,85,88,89,90,91,93,94,95,96,97,102,103,117,118,119,124,131,136,141,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,164,170,183,185,187,194,203,211,252,],[-57,-58,-109,-110,-111,-112,-113,-114,101,-76,-77,-78,-79,-80,-85,-86,-87,-115,101,101,101,-56,-59,-60,-61,-62,-63,-64,-65,-66,101,101,101,101,-53,101,101,101,101,-83,-84,-81,-82,101,101,101,-52,101,101,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,101,-54,101,-73,101,101,101,101,101,101,]),'INCREASE':([25,26,36,37,38,39,40,41,57,58,59,60,61,62,65,66,67,69,70,71,74,77,78,79,80,81,82,83,84,85,88,89,90,91,93,94,95,96,97,102,103,117,118,119,124,131,136,141,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,164,170,183,185,187,194,203,211,252,],[-57,-58,-109,-110,-111,-112,-113,-114,102,-76,-77,-78,-79,-80,-85,-86,-87,-115,102,102,102,-56,-59,-60,-61,-62,-63,-64,-65,-66,102,102,102,102,-53,102,102,102,102,-83,-84,-81,-82,102,102,102,-52,102,102,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,102,-54,102,-73,102,102,102,102,102,102,]),'DECREASE':([25,26,36,37,38,39,40,41,57,58,59,60,61,62,65,66,67,69,70,71,74,77,78,79,80,81,82,83,84,85,88,89,90,91,93,94,95,96,97,102,103,117,118,119,124,131,136,141,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,164,170,183,185,187,194,203,211,252,],[-57,-58,-109,-110,-111,-112,-113,-114,103,-76,-77,-78,-79,-80,-85,-86,-87,-115,103,103,103,-56,-59,-60,-61,-62,-63,-64,-65,-66,103,103,103,103,-53,103,103,103,103,-83,-84,-81,-82,103,103,103,-52,103,103,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,103,-54,103,-73,103,103,103,103,103,103,]),'PLUS':([25,26,36,37,38,39,40,41,57,58,59,60,61,62,65,66,67,69,70,71,74,77,78,79,80,81,82,83,84,85,88,89,90,91,93,94,95,96,97,102,103,117,118,119,124,131,136,141,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,164,170,183,185,187,194,203,211,252,],[-57,-58,-109,-110,-111,-112,-113,-114,104,-76,-77,-78,-79,-80,-85,-86,-87,-115,104,104,104,-56,-59,-60,-61,-62,-63,-64,-65,-66,104,104,104,104,-53,104,104,104,104,-83,-84,-81,-82,104,104,104,-52,104,104,-88,-89,-90,-91,-92,104,104,104,104,104,104,104,104,-101,104,-54,104,-73,104,104,104,104,104,104,]),'MINUS':([25,26,27,28,29,32,36,37,38,39,40,41,47,48,49,50,51,52,53,54,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,74,77,78,79,80,81,82,83,84,85,87,88,89,90,91,93,94,95,96,97,98,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,123,124,131,136,137,141,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,168,169,170,174,182,183,185,187,191,194,203,205,211,222,245,252,],[-57,-58,63,63,63,63,-109,-110,-111,-112,-113,-114,63,63,63,63,63,63,63,63,105,-76,-77,-78,-79,-80,63,63,-85,-86,-87,63,-115,105,105,105,63,-59,-60,-61,-62,-63,-64,-65,-66,63,105,105,105,105,-53,105,105,105,105,63,63,-83,-84,63,63,63,63,63,63,63,63,63,63,63,63,63,-81,-82,105,63,63,105,105,-52,63,105,105,-88,-89,-90,-91,-92,105,105,105,105,105,105,105,105,-101,105,63,-54,63,-19,-20,63,105,63,63,-73,105,105,63,105,105,-18,105,63,63,105,]),'TIMES':([25,26,36,37,38,39,40,41,57,58,59,60,61,62,65,66,67,69,70,71,74,77,78,79,80,81,82,83,84,85,88,89,90,91,93,94,95,96,97,102,103,117,118,119,124,131,136,141,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,164,170,183,185,187,194,203,211,252,],[-57,-58,-109,-110,-111,-112,-113,-114,106,-76,-77,-78,-79,-80,-85,-86,-87,-115,106,106,106,-56,-59,-60,-61,-62,-63,-64,-65,-66,106,106,106,106,-53,106,106,106,106,-83,-84,-81,-82,106,106,106,-52,106,106,106,106,-90,-91,-92,106,106,106,106,106,106,106,106,-101,106,-54,106,-73,106,106,106,106,106,106,]),'DIVIDE':([25,26,36,37,38,39,40,41,57,58,59,60,61,62,65,66,67,69,70,71,74,77,78,79,80,81,82,83,84,85,88,89,90,91,93,94,95,96,97,102,103,117,118,119,124,131,136,141,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,164,170,183,185,187,194,203,211,252,],[-57,-58,-109,-110,-111,-112,-113,-114,107,-76,-77,-78,-79,-80,-85,-86,-87,-115,107,107,107,-56,-59,-60,-61,-62,-63,-64,-65,-66,107,107,107,107,-53,107,107,107,107,-83,-84,-81,-82,107,107,107,-52,107,107,107,107,-90,-91,-92,107,107,107,107,107,107,107,107,-101,107,-54,107,-73,107,107,107,107,107,107,]),'MODULUS':([25,26,36,37,38,39,40,41,57,58,59,60,61,62,65,66,67,69,70,71,74,77,78,79,80,81,82,83,84,85,88,89,90,91,93,94,95,96,97,102,103,117,118,119,124,131,136,141,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,164,170,183,185,187,194,203,211,252,],[-57,-58,-109,-110,-111,-112,-113,-114,108,-76,-77,-78,-79,-80,-85,-86,-87,-115,108,108,108,-56,-59,-60,-61,-62,-63,-64,-65,-66,108,108,108,108,-53,108,108,108,108,-83,-84,-81,-82,108,108,108,-52,108,108,108,108,-90,-91,-92,108,108,108,108,108,108,108,108,-101,108,-54,108,-73,108,108,108,108,108,108,]),'LESS':([25,26,36,37,38,39,40,41,57,58,59,60,61,62,65,66,67,69,70,71,74,77,78,79,80,81,82,83,84,85,88,89,90,91,93,94,95,96,97,102,103,117,118,119,124,131,136,141,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,164,170,183,185,187,194,203,211,252,],[-57,-58,-109,-110,-111,-112,-113,-114,109,-76,-77,-78,-79,-80,-85,-86,-87,-115,109,109,109,-56,-59,-60,-61,-62,-63,-64,-65,-66,109,109,109,109,-53,109,109,109,109,-83,-84,-81,-82,109,109,109,-52,109,109,-88,-89,-90,-91,-92,-93,-94,109,109,-97,-98,109,109,-101,109,-54,109,-73,109,109,109,109,109,109,]),'GREATER':([25,26,36,37,38,39,40,41,57,58,59,60,61,62,65,66,67,69,70,71,74,77,78,79,80,81,82,83,84,85,88,89,90,91,93,94,95,96,97,102,103,117,118,119,124,131,136,141,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,164,170,183,185,187,194,203,211,252,],[-57,-58,-109,-110,-111,-112,-113,-114,110,-76,-77,-78,-79,-80,-85,-86,-87,-115,110,110,110,-56,-59,-60,-61,-62,-63,-64,-65,-66,110,110,110,110,-53,110,110,110,110,-83,-84,-81,-82,110,110,110,-52,110,110,-88,-89,-90,-91,-92,-93,-94,110,110,-97,-98,110,110,-101,110,-54,110,-73,110,110,110,110,110,110,]),'EQUAL_TO':([25,26,36,37,38,39,40,41,57,58,59,60,61,62,65,66,67,69,70,71,74,77,78,79,80,81,82,83,84,85,88,89,90,91,93,94,95,96,97,102,103,117,118,119,124,131,136,141,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,164,170,183,185,187,194,203,211,252,],[-57,-58,-109,-110,-111,-112,-113,-114,111,-76,-77,-78,-79,-80,-85,-86,-87,-115,111,111,111,-56,-59,-60,-61,-62,-63,-64,-65,-66,111,111,111,111,-53,111,111,111,111,-83,-84,-81,-82,111,111,111,-52,111,111,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,111,111,-101,111,-54,111,-73,111,111,111,111,111,111,]),'NOT_EQUAL_TO':([25,26,36,37,38,39,40,41,57,58,59,60,61,62,65,66,67,69,70,71,74,77,78,79,80,81,82,83,84,85,88,89,90,91,93,94,95,96,97,102,103,117,118,119,124,131,136,141,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,164,170,183,185,187,194,203,211,252,],[-57,-58,-109,-110,-111,-112,-113,-114,112,-76,-77,-78,-79,-80,-85,-86,-87,-115,112,112,112,-56,-59,-60,-61,-62,-63,-64,-65,-66,112,112,112,112,-53,112,112,112,112,-83,-84,-81,-82,112,112,112,-52,112,112,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,112,112,-101,112,-54,112,-73,112,112,112,112,112,112,]),'LESS_EQUAL':([25,26,36,37,38,39,40,41,57,58,59,60,61,62,65,66,67,69,70,71,74,77,78,79,80,81,82,83,84,85,88,89,90,91,93,94,95,96,97,102,103,117,118,119,124,131,136,141,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,164,170,183,185,187,194,203,211,252,],[-57,-58,-109,-110,-111,-112,-113,-114,113,-76,-77,-78,-79,-80,-85,-86,-87,-115,113,113,113,-56,-59,-60,-61,-62,-63,-64,-65,-66,113,113,113,113,-53,113,113,113,113,-83,-84,-81,-82,113,113,113,-52,113,113,-88,-89,-90,-91,-92,-93,-94,113,113,-97,-98,113,113,-101,113,-54,113,-73,113,113,113,113,113,113,]),'GREATER_EQUAL':([25,26,36,37,38,39,40,41,57,58,59,60,61,62,65,66,67,69,70,71,74,77,78,79,80,81,82,83,84,85,88,89,90,91,93,94,95,96,97,102,103,117,118,119,124,131,136,141,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,164,170,183,185,187,194,203,211,252,],[-57,-58,-109,-110,-111,-112,-113,-114,114,-76,-77,-78,-79,-80,-85,-86,-87,-115,114,114,114,-56,-59,-60,-61,-62,-63,-64,-65,-66,114,114,114,114,-53,114,114,114,114,-83,-84,-81,-82,114,114,114,-52,114,114,-88,-89,-90,-91,-92,-93,-94,114,114,-97,-98,114,114,-101,114,-54,114,-73,114,114,114,114,114,114,]),'AND':([25,26,36,37,38,39,40,41,57,58,59,60,61,62,65,66,67,69,70,71,74,77,78,79,80,81,82,83,84,85,88,89,90,91,93,94,95,96,97,102,103,117,118,119,124,131,136,141,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,164,170,183,185,187,194,203,211,252,],[-57,-58,-109,-110,-111,-112,-113,-114,115,-76,-77,-78,-79,-80,-85,-86,-87,-115,115,115,115,-56,-59,-60,-61,-62,-63,-64,-65,-66,115,115,115,115,-53,115,115,115,115,-83,-84,-81,-82,115,115,115,-52,115,115,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,115,-101,115,-54,115,-73,115,115,115,115,115,115,]),'OR':([25,26,36,37,38,39,40,41,57,58,59,60,61,62,65,66,67,69,70,71,74,77,78,79,80,81,82,83,84,85,88,89,90,91,93,94,95,96,97,102,103,117,118,119,124,131,136,141,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,164,170,183,185,187,194,203,211,252,],[-57,-58,-109,-110,-111,-112,-113,-114,116,-76,-77,-78,-79,-80,-85,-86,-87,-115,116,116,116,-56,-59,-60,-61,-62,-63,-64,-65,-66,116,116,116,116,-53,116,116,116,116,-83,-84,-81,-82,116,116,116,-52,116,116,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,116,-54,116,-73,116,116,116,116,116,116,]),'RIGHT_SQ_BRACKET':([25,26,36,37,38,39,40,41,57,58,59,60,61,62,65,66,67,69,70,71,77,78,79,80,81,82,83,84,85,91,93,94,102,103,117,118,124,136,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,164,167,170,183,203,216,234,],[-57,-58,-109,-110,-111,-112,-113,-114,-68,-76,-77,-78,-79,-80,-85,-86,-87,-115,-69,-70,-56,-59,-60,-61,-62,-63,-64,-65,-66,135,-53,-75,-83,-84,-81,-82,-55,-52,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,183,-54,186,-74,-73,-24,230,244,]),'RIGHT_PARENTHESIS':([25,26,36,37,38,39,40,41,51,57,58,59,60,61,62,65,66,67,69,70,71,77,78,79,80,81,82,83,84,85,92,93,94,95,96,97,100,102,103,117,118,119,123,124,126,127,128,129,130,136,145,146,148,149,150,151,152,153,154,155,156,157,158,159,160,161,164,170,183,184,194,195,197,202,203,230,252,],[-57,-58,-109,-110,-111,-112,-113,-114,93,-68,-76,-77,-78,-79,-80,-85,-86,-87,-115,-69,-70,-56,-59,-60,-61,-62,-63,-64,-65,-66,136,-53,-75,138,139,140,144,-83,-84,-81,-82,161,164,-55,-104,-105,-106,-107,-108,-52,180,-47,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-54,-74,-73,204,214,215,-48,-46,-24,-49,255,]),'COMMA':([25,26,36,37,38,39,40,41,57,58,59,60,61,62,65,66,67,69,70,71,77,78,79,80,81,82,83,84,85,92,93,94,102,103,117,118,124,126,127,128,129,130,136,145,146,148,149,150,151,152,153,154,155,156,157,158,159,160,161,164,170,183,184,197,202,203,230,234,],[-57,-58,-109,-110,-111,-112,-113,-114,-68,-76,-77,-78,-79,-80,-85,-86,-87,-115,-69,-70,-56,-59,-60,-61,-62,-63,-64,-65,-66,137,-53,-75,-83,-84,-81,-82,-55,-104,-105,-106,-107,-108,-52,181,-47,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-54,-74,-73,137,-48,-46,-24,-49,137,]),'COLON':([25,26,36,37,38,39,40,41,46,57,58,59,60,61,62,65,66,67,69,70,71,77,78,79,80,81,82,83,84,85,93,102,103,117,118,124,136,142,143,144,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,164,180,183,192,203,211,],[-57,-58,-109,-110,-111,-112,-113,-114,86,-68,-76,-77,-78,-79,-80,-85,-86,-87,-115,-69,-70,-56,-59,-60,-61,-62,-63,-64,-65,-66,-53,-83,-84,-81,-82,-55,-52,176,177,179,182,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-54,201,-73,212,-24,226,]),'NOT':([27,28,29,32,47,48,49,50,51,52,53,54,63,64,68,77,78,79,80,81,82,83,84,85,87,98,101,104,105,106,107,108,109,110,111,112,113,114,115,116,120,123,137,163,165,166,168,169,174,182,191,205,222,245,],[64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,-59,-60,-61,-62,-63,-64,-65,-66,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,-19,-20,64,64,64,64,-18,64,64,]),'TOSTRING':([44,],[78,]),'TOLOWERCASE':([44,],[79,]),'TOUPPERCASE':([44,],[80,]),'PUSH':([44,],[81,]),'POP':([44,],[82,]),'INDEXOF':([44,],[83,]),'JOIN':([44,],[84,]),'LENGTH':([44,],[85,]),'LOG':([76,],[122,]),'NUMBER':([86,176,177,179,201,],[126,126,126,126,126,]),'FLOAT':([86,176,177,179,201,],[127,127,127,127,127,]),'STRING':([86,176,177,179,201,],[128,128,128,128,128,]),'CHAR':([86,176,177,179,201,],[129,129,129,129,129,]),'BOOLEAN':([86,176,177,179,201,],[130,130,130,130,130,]),'LEFT_CURLY_BRACKET':([126,127,128,129,130,138,139,140,144,180,199,214,215,220,223,237,255,],[-104,-105,-106,-107,-108,171,172,173,178,200,218,228,229,233,236,247,257,]),'OF':([142,],[175,]),'ELSE':([208,224,225,238,259,],[223,237,-30,-29,-31,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'start':([0,],[1,]),'block':([0,171,173,178,200,212,218,226,228,229,233,236,247,257,],[2,188,193,198,219,227,231,239,240,241,243,246,254,258,]),'instruction':([0,2,171,173,178,188,193,198,200,212,218,219,226,227,228,229,231,233,236,239,240,241,243,246,247,254,257,258,],[3,42,3,3,3,42,42,42,3,3,3,42,3,42,3,3,42,3,3,42,42,42,42,42,3,42,3,42,]),'declaration':([0,2,55,171,173,178,188,193,198,200,212,218,219,226,227,228,229,231,233,236,239,240,241,243,246,247,254,257,258,],[4,4,98,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'declaration_array':([0,2,171,173,178,188,193,198,200,212,218,219,226,227,228,229,231,233,236,239,240,241,243,246,247,254,257,258,],[5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'assignment':([0,2,171,173,178,188,193,198,200,212,218,219,226,227,228,229,231,233,236,239,240,241,243,246,247,254,257,258,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'if':([0,2,171,173,178,188,193,198,200,212,218,219,226,227,228,229,231,233,236,239,240,241,243,246,247,254,257,258,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'switch':([0,2,171,173,178,188,193,198,200,212,218,219,226,227,228,229,231,233,236,239,240,241,243,246,247,254,257,258,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'while':([0,2,171,173,178,188,193,198,200,212,218,219,226,227,228,229,231,233,236,239,240,241,243,246,247,254,257,258,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'for':([0,2,171,173,178,188,193,198,200,212,218,219,226,227,228,229,231,233,236,239,240,241,243,246,247,254,257,258,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'function':([0,2,171,173,178,188,193,198,200,212,218,219,226,227,228,229,231,233,236,239,240,241,243,246,247,254,257,258,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'methods':([0,2,27,28,29,32,47,48,49,50,51,52,53,54,63,64,68,77,87,98,101,104,105,106,107,108,109,110,111,112,113,114,115,116,120,123,137,163,165,169,171,173,174,178,182,188,191,193,198,200,212,218,219,222,226,227,228,229,231,233,236,239,240,241,243,245,246,247,254,257,258,],[12,12,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,12,12,61,12,61,12,61,12,12,12,12,12,12,61,12,12,12,12,12,12,12,12,12,12,12,61,12,12,12,12,12,]),'call_function':([0,2,27,28,29,32,47,48,49,50,51,52,53,54,63,64,68,77,87,98,101,104,105,106,107,108,109,110,111,112,113,114,115,116,120,123,137,163,165,169,171,173,174,178,182,188,191,193,198,200,212,218,219,222,226,227,228,229,231,233,236,239,240,241,243,245,246,247,254,257,258,],[13,13,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,13,13,62,13,62,13,62,13,13,13,13,13,13,62,13,13,13,13,13,13,13,13,13,13,13,62,13,13,13,13,13,]),'break':([0,2,171,173,178,188,193,198,200,212,218,219,226,227,228,229,231,233,236,239,240,241,243,246,247,254,257,258,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'continue':([0,2,171,173,178,188,193,198,200,212,218,219,226,227,228,229,231,233,236,239,240,241,243,246,247,254,257,258,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'return':([0,2,171,173,178,188,193,198,200,212,218,219,226,227,228,229,231,233,236,239,240,241,243,246,247,254,257,258,],[16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'print':([0,2,171,173,178,188,193,198,200,212,218,219,226,227,228,229,231,233,236,239,240,241,243,246,247,254,257,258,],[17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'symbol_type':([0,2,55,171,173,178,188,193,198,200,212,218,219,226,227,228,229,231,233,236,239,240,241,243,246,247,254,257,258,],[18,18,99,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'access_array':([0,2,27,28,29,32,47,48,49,50,51,52,53,54,63,64,68,77,87,98,101,104,105,106,107,108,109,110,111,112,113,114,115,116,120,123,137,163,165,169,171,173,174,178,182,188,191,193,198,200,212,218,219,222,226,227,228,229,231,233,236,239,240,241,243,245,246,247,254,257,258,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'value':([0,2,27,28,29,32,47,48,49,50,51,52,53,54,63,64,68,77,87,98,101,104,105,106,107,108,109,110,111,112,113,114,115,116,120,123,137,163,165,169,171,173,174,178,182,188,191,193,198,200,212,218,219,222,226,227,228,229,231,233,236,239,240,241,243,245,246,247,254,257,258,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'expression':([27,28,29,32,47,48,49,50,51,52,53,54,63,64,68,77,87,98,101,104,105,106,107,108,109,110,111,112,113,114,115,116,120,123,137,163,165,169,174,182,191,222,245,],[57,70,71,74,88,89,90,91,94,95,96,97,117,118,119,124,131,141,147,148,149,150,151,152,153,154,155,156,157,158,159,160,162,119,170,94,185,187,194,203,211,94,252,]),'expression_unary':([27,28,29,32,47,48,49,50,51,52,53,54,63,64,68,77,87,98,101,104,105,106,107,108,109,110,111,112,113,114,115,116,120,123,137,163,165,169,174,182,191,222,245,],[58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,]),'expression_binary':([27,28,29,32,47,48,49,50,51,52,53,54,63,64,68,77,87,98,101,104,105,106,107,108,109,110,111,112,113,114,115,116,120,123,137,163,165,169,174,182,191,222,245,],[59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,]),'expression_group':([27,28,29,32,47,48,49,50,51,52,53,54,63,64,68,77,87,98,101,104,105,106,107,108,109,110,111,112,113,114,115,116,120,123,137,163,165,169,174,182,191,222,245,],[60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,]),'arithmetic':([27,28,29,32,47,48,49,50,51,52,53,54,63,64,68,77,87,98,101,104,105,106,107,108,109,110,111,112,113,114,115,116,120,123,137,163,165,169,174,182,191,222,245,],[65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,]),'relational':([27,28,29,32,47,48,49,50,51,52,53,54,63,64,68,77,87,98,101,104,105,106,107,108,109,110,111,112,113,114,115,116,120,123,137,163,165,169,174,182,191,222,245,],[66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,]),'logical':([27,28,29,32,47,48,49,50,51,52,53,54,63,64,68,77,87,98,101,104,105,106,107,108,109,110,111,112,113,114,115,116,120,123,137,163,165,169,174,182,191,222,245,],[67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,]),'name_method':([44,],[77,]),'expression_list':([51,163,222,],[92,184,234,]),'data_type':([86,176,177,179,201,],[125,196,197,199,220,]),'params':([100,],[145,]),'param':([100,181,],[146,202,]),'cases':([172,],[189,]),'case':([172,189,],[190,210,]),'else_if_list':([208,],[224,]),'else_if':([208,224,],[225,238,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> start","S'",1,None,None,None),
  ('start -> block','start',1,'p_start','grammar.py',256),
  ('block -> block instruction','block',2,'p_block','grammar.py',260),
  ('block -> instruction','block',1,'p_block','grammar.py',261),
  ('instruction -> declaration','instruction',1,'p_instruction','grammar.py',269),
  ('instruction -> declaration_array','instruction',1,'p_instruction','grammar.py',270),
  ('instruction -> assignment','instruction',1,'p_instruction','grammar.py',271),
  ('instruction -> if','instruction',1,'p_instruction','grammar.py',272),
  ('instruction -> switch','instruction',1,'p_instruction','grammar.py',273),
  ('instruction -> while','instruction',1,'p_instruction','grammar.py',274),
  ('instruction -> for','instruction',1,'p_instruction','grammar.py',275),
  ('instruction -> function','instruction',1,'p_instruction','grammar.py',276),
  ('instruction -> methods SEMICOLON','instruction',2,'p_instruction','grammar.py',277),
  ('instruction -> call_function SEMICOLON','instruction',2,'p_instruction','grammar.py',278),
  ('instruction -> break','instruction',1,'p_instruction','grammar.py',279),
  ('instruction -> continue','instruction',1,'p_instruction','grammar.py',280),
  ('instruction -> return','instruction',1,'p_instruction','grammar.py',281),
  ('instruction -> print','instruction',1,'p_instruction','grammar.py',282),
  ('declaration -> symbol_type ID COLON data_type EQUAL expression SEMICOLON','declaration',7,'p_declaration_type_value','grammar.py',286),
  ('declaration -> symbol_type ID COLON data_type SEMICOLON','declaration',5,'p_declaration_type','grammar.py',291),
  ('declaration -> symbol_type ID EQUAL expression SEMICOLON','declaration',5,'p_declaration_value','grammar.py',296),
  ('assignment -> ID EQUAL expression SEMICOLON','assignment',4,'p_assignment','grammar.py',301),
  ('assignment -> ID ADITION expression SEMICOLON','assignment',4,'p_assignment','grammar.py',302),
  ('assignment -> ID SUBTRACTION expression SEMICOLON','assignment',4,'p_assignment','grammar.py',303),
  ('expression -> expression TERNARY expression COLON expression','expression',5,'p_ternary','grammar.py',308),
  ('if -> IF LEFT_PARENTHESIS expression RIGHT_PARENTHESIS LEFT_CURLY_BRACKET block RIGHT_CURLY_BRACKET','if',7,'p_if','grammar.py',313),
  ('if -> IF LEFT_PARENTHESIS expression RIGHT_PARENTHESIS LEFT_CURLY_BRACKET block RIGHT_CURLY_BRACKET ELSE LEFT_CURLY_BRACKET block RIGHT_CURLY_BRACKET','if',11,'p_if','grammar.py',314),
  ('if -> IF LEFT_PARENTHESIS expression RIGHT_PARENTHESIS LEFT_CURLY_BRACKET block RIGHT_CURLY_BRACKET else_if_list','if',8,'p_if','grammar.py',315),
  ('if -> IF LEFT_PARENTHESIS expression RIGHT_PARENTHESIS LEFT_CURLY_BRACKET block RIGHT_CURLY_BRACKET else_if_list ELSE LEFT_CURLY_BRACKET block RIGHT_CURLY_BRACKET','if',12,'p_if','grammar.py',316),
  ('else_if_list -> else_if_list else_if','else_if_list',2,'p_else_if_list','grammar.py',331),
  ('else_if_list -> else_if','else_if_list',1,'p_else_if_list','grammar.py',332),
  ('else_if -> ELSE IF LEFT_PARENTHESIS expression RIGHT_PARENTHESIS LEFT_CURLY_BRACKET block RIGHT_CURLY_BRACKET','else_if',8,'p_else_if','grammar.py',340),
  ('switch -> SWITCH LEFT_PARENTHESIS expression RIGHT_PARENTHESIS LEFT_CURLY_BRACKET cases RIGHT_CURLY_BRACKET','switch',7,'p_switch','grammar.py',345),
  ('cases -> cases case','cases',2,'p_cases','grammar.py',350),
  ('cases -> case','cases',1,'p_cases','grammar.py',351),
  ('case -> CASE expression COLON block','case',4,'p_case','grammar.py',359),
  ('case -> DEFAULT COLON block','case',3,'p_case','grammar.py',360),
  ('while -> WHILE LEFT_PARENTHESIS expression RIGHT_PARENTHESIS LEFT_CURLY_BRACKET block RIGHT_CURLY_BRACKET','while',7,'p_while','grammar.py',368),
  ('for -> FOR LEFT_PARENTHESIS declaration expression SEMICOLON expression RIGHT_PARENTHESIS LEFT_CURLY_BRACKET block RIGHT_CURLY_BRACKET','for',10,'p_for','grammar.py',373),
  ('for -> FOR LEFT_PARENTHESIS symbol_type ID OF ID RIGHT_PARENTHESIS LEFT_CURLY_BRACKET block RIGHT_CURLY_BRACKET','for',10,'p_for_array','grammar.py',378),
  ('break -> BREAK SEMICOLON','break',2,'p_break','grammar.py',383),
  ('continue -> CONTINUE SEMICOLON','continue',2,'p_continue','grammar.py',388),
  ('function -> FUNCTION ID LEFT_PARENTHESIS RIGHT_PARENTHESIS LEFT_CURLY_BRACKET block RIGHT_CURLY_BRACKET','function',7,'p_function','grammar.py',393),
  ('function -> FUNCTION ID LEFT_PARENTHESIS RIGHT_PARENTHESIS COLON data_type LEFT_CURLY_BRACKET block RIGHT_CURLY_BRACKET','function',9,'p_function','grammar.py',394),
  ('function -> FUNCTION ID LEFT_PARENTHESIS params RIGHT_PARENTHESIS LEFT_CURLY_BRACKET block RIGHT_CURLY_BRACKET','function',8,'p_function','grammar.py',395),
  ('function -> FUNCTION ID LEFT_PARENTHESIS params RIGHT_PARENTHESIS COLON data_type LEFT_CURLY_BRACKET block RIGHT_CURLY_BRACKET','function',10,'p_function','grammar.py',396),
  ('params -> params COMMA param','params',3,'p_params','grammar.py',411),
  ('params -> param','params',1,'p_params','grammar.py',412),
  ('param -> ID COLON data_type','param',3,'p_param','grammar.py',421),
  ('param -> ID COLON data_type LEFT_SQ_BRACKET RIGHT_SQ_BRACKET','param',5,'p_param','grammar.py',422),
  ('return -> RETURN expression SEMICOLON','return',3,'p_return','grammar.py',431),
  ('return -> RETURN SEMICOLON','return',2,'p_return','grammar.py',432),
  ('call_function -> ID LEFT_PARENTHESIS expression_list RIGHT_PARENTHESIS','call_function',4,'p_call_function','grammar.py',440),
  ('call_function -> ID LEFT_PARENTHESIS RIGHT_PARENTHESIS','call_function',3,'p_call_function','grammar.py',441),
  ('methods -> methods PERIOD name_method LEFT_PARENTHESIS RIGHT_PARENTHESIS','methods',5,'p_embedded_functions','grammar.py',449),
  ('methods -> methods PERIOD name_method expression','methods',4,'p_embedded_functions','grammar.py',450),
  ('methods -> methods PERIOD name_method','methods',3,'p_embedded_functions','grammar.py',451),
  ('methods -> access_array','methods',1,'p_embedded_functions','grammar.py',452),
  ('methods -> value','methods',1,'p_embedded_functions','grammar.py',453),
  ('name_method -> TOSTRING','name_method',1,'p_name_method','grammar.py',478),
  ('name_method -> TOLOWERCASE','name_method',1,'p_name_method','grammar.py',479),
  ('name_method -> TOUPPERCASE','name_method',1,'p_name_method','grammar.py',480),
  ('name_method -> PUSH','name_method',1,'p_name_method','grammar.py',481),
  ('name_method -> POP','name_method',1,'p_name_method','grammar.py',482),
  ('name_method -> INDEXOF','name_method',1,'p_name_method','grammar.py',483),
  ('name_method -> JOIN','name_method',1,'p_name_method','grammar.py',484),
  ('name_method -> LENGTH','name_method',1,'p_name_method','grammar.py',485),
  ('print -> CONSOLE PERIOD LOG LEFT_PARENTHESIS expression_list RIGHT_PARENTHESIS SEMICOLON','print',7,'p_print','grammar.py',489),
  ('methods -> PARSEINT expression','methods',2,'p_parseint','grammar.py',494),
  ('methods -> PARSEFLOAT expression','methods',2,'p_parsefloat','grammar.py',499),
  ('methods -> TYPEOF expression','methods',2,'p_typeof','grammar.py',504),
  ('declaration_array -> symbol_type ID COLON data_type LEFT_SQ_BRACKET RIGHT_SQ_BRACKET EQUAL LEFT_SQ_BRACKET expression_list RIGHT_SQ_BRACKET SEMICOLON','declaration_array',11,'p_declaration_array','grammar.py',509),
  ('assignment -> ID LEFT_SQ_BRACKET expression RIGHT_SQ_BRACKET EQUAL expression SEMICOLON','assignment',7,'p_assignment_array','grammar.py',515),
  ('access_array -> ID LEFT_SQ_BRACKET expression RIGHT_SQ_BRACKET','access_array',4,'p_access_array','grammar.py',521),
  ('expression_list -> expression_list COMMA expression','expression_list',3,'p_expression_list','grammar.py',526),
  ('expression_list -> expression','expression_list',1,'p_expression_list','grammar.py',527),
  ('expression -> expression_unary','expression',1,'p_expression','grammar.py',536),
  ('expression -> expression_binary','expression',1,'p_expression','grammar.py',537),
  ('expression -> expression_group','expression',1,'p_expression','grammar.py',538),
  ('expression -> methods','expression',1,'p_expression','grammar.py',539),
  ('expression -> call_function','expression',1,'p_expression','grammar.py',540),
  ('expression_unary -> MINUS expression','expression_unary',2,'p_expression_unary','grammar.py',544),
  ('expression_unary -> NOT expression','expression_unary',2,'p_expression_unary','grammar.py',545),
  ('expression_unary -> expression INCREASE','expression_unary',2,'p_expression_unary','grammar.py',546),
  ('expression_unary -> expression DECREASE','expression_unary',2,'p_expression_unary','grammar.py',547),
  ('expression_binary -> arithmetic','expression_binary',1,'p_expression_binary','grammar.py',556),
  ('expression_binary -> relational','expression_binary',1,'p_expression_binary','grammar.py',557),
  ('expression_binary -> logical','expression_binary',1,'p_expression_binary','grammar.py',558),
  ('arithmetic -> expression PLUS expression','arithmetic',3,'p_arithmetic','grammar.py',562),
  ('arithmetic -> expression MINUS expression','arithmetic',3,'p_arithmetic','grammar.py',563),
  ('arithmetic -> expression TIMES expression','arithmetic',3,'p_arithmetic','grammar.py',564),
  ('arithmetic -> expression DIVIDE expression','arithmetic',3,'p_arithmetic','grammar.py',565),
  ('arithmetic -> expression MODULUS expression','arithmetic',3,'p_arithmetic','grammar.py',566),
  ('relational -> expression LESS expression','relational',3,'p_relational','grammar.py',571),
  ('relational -> expression GREATER expression','relational',3,'p_relational','grammar.py',572),
  ('relational -> expression EQUAL_TO expression','relational',3,'p_relational','grammar.py',573),
  ('relational -> expression NOT_EQUAL_TO expression','relational',3,'p_relational','grammar.py',574),
  ('relational -> expression LESS_EQUAL expression','relational',3,'p_relational','grammar.py',575),
  ('relational -> expression GREATER_EQUAL expression','relational',3,'p_relational','grammar.py',576),
  ('logical -> expression AND expression','logical',3,'p_logical','grammar.py',581),
  ('logical -> expression OR expression','logical',3,'p_logical','grammar.py',582),
  ('expression_group -> LEFT_PARENTHESIS expression RIGHT_PARENTHESIS','expression_group',3,'p_expression_group','grammar.py',587),
  ('symbol_type -> VAR','symbol_type',1,'p_data_symbol','grammar.py',591),
  ('symbol_type -> CONST','symbol_type',1,'p_data_symbol','grammar.py',592),
  ('data_type -> NUMBER','data_type',1,'p_data_type','grammar.py',596),
  ('data_type -> FLOAT','data_type',1,'p_data_type','grammar.py',597),
  ('data_type -> STRING','data_type',1,'p_data_type','grammar.py',598),
  ('data_type -> CHAR','data_type',1,'p_data_type','grammar.py',599),
  ('data_type -> BOOLEAN','data_type',1,'p_data_type','grammar.py',600),
  ('value -> INTEGER','value',1,'p_value','grammar.py',613),
  ('value -> DECIMAL','value',1,'p_value','grammar.py',614),
  ('value -> TEXT','value',1,'p_value','grammar.py',615),
  ('value -> CHARACTER','value',1,'p_value','grammar.py',616),
  ('value -> BOOL','value',1,'p_value','grammar.py',617),
  ('value -> NULL','value',1,'p_value','grammar.py',618),
  ('value -> ID','value',1,'p_value_id','grammar.py',622),
]
