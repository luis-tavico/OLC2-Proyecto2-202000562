
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftORleftANDleftEQUAL_TONOT_EQUAL_TOleftLESSLESS_EQUALGREATER_EQUALGREATERleftPLUSMINUSleftDIVIDEMODULUSTIMESrightNOTUMINUSleftLEFT_PARENTHESISRIGHT_PARENTHESISLEFT_SQ_BRACKETRIGHT_SQ_BRACKETADITION AND BOOL BOOLEAN BREAK CASE CHAR CHARACTER COLON COMMA CONSOLE CONST CONTINUE DECIMAL DECREASE DEFAULT DIVIDE ELSE EQUAL EQUAL_TO FLOAT FOR FUNCTION GREATER GREATER_EQUAL ID IF INCREASE INDEXOF INTEGER LEFT_CURLY_BRACKET LEFT_PARENTHESIS LEFT_SQ_BRACKET LENGTH LESS LESS_EQUAL LOG MINUS MODULUS NOT NOT_EQUAL_TO NULL NUMBER OBJECT OF OR PARSEFLOAT PARSEINT PERIOD PLUS POP PUSH RETURN RIGHT_CURLY_BRACKET RIGHT_PARENTHESIS RIGHT_SQ_BRACKET SEMICOLON STRING SUBTRACTION SWITCH TEXT TIMES TOLOWERCASE TOSTRING TOUPPERCASE TYPEOF VAR WHILEstart : blockblock : block instruction\n             | instruction instruction : declaration\n                   | declaration_array\n                   | assignment\n                   | if\n                   | switch\n                   | while\n                   | for\n                   | function\n                   | methods SEMICOLON\n                   | call_function SEMICOLON\n                   | break\n                   | continue\n                   | return\n                   | printdeclaration : symbol_type ID COLON data_type EQUAL expression SEMICOLONdeclaration : symbol_type ID COLON data_type SEMICOLONdeclaration : symbol_type ID EQUAL expression SEMICOLONassignment : ID EQUAL expression SEMICOLON\n                  | ID ADITION expression SEMICOLON\n                  | ID SUBTRACTION expression SEMICOLONif : IF LEFT_PARENTHESIS expression RIGHT_PARENTHESIS LEFT_CURLY_BRACKET block RIGHT_CURLY_BRACKET\n          | IF LEFT_PARENTHESIS expression RIGHT_PARENTHESIS LEFT_CURLY_BRACKET block RIGHT_CURLY_BRACKET ELSE LEFT_CURLY_BRACKET block RIGHT_CURLY_BRACKET\n          | IF LEFT_PARENTHESIS expression RIGHT_PARENTHESIS LEFT_CURLY_BRACKET block RIGHT_CURLY_BRACKET else_if_list\n          | IF LEFT_PARENTHESIS expression RIGHT_PARENTHESIS LEFT_CURLY_BRACKET block RIGHT_CURLY_BRACKET else_if_list ELSE LEFT_CURLY_BRACKET block RIGHT_CURLY_BRACKETelse_if_list : else_if_list else_if\n                    | else_ifelse_if : ELSE IF LEFT_PARENTHESIS expression RIGHT_PARENTHESIS LEFT_CURLY_BRACKET block RIGHT_CURLY_BRACKETswitch : SWITCH LEFT_PARENTHESIS expression RIGHT_PARENTHESIS LEFT_CURLY_BRACKET cases RIGHT_CURLY_BRACKETcases : cases case\n             | casecase : CASE expression COLON block\n            | DEFAULT COLON blockwhile : WHILE LEFT_PARENTHESIS expression RIGHT_PARENTHESIS LEFT_CURLY_BRACKET block RIGHT_CURLY_BRACKETfor : FOR LEFT_PARENTHESIS declaration expression SEMICOLON expression RIGHT_PARENTHESIS LEFT_CURLY_BRACKET block RIGHT_CURLY_BRACKETfor : FOR LEFT_PARENTHESIS symbol_type ID OF ID RIGHT_PARENTHESIS LEFT_CURLY_BRACKET block RIGHT_CURLY_BRACKETbreak : BREAK SEMICOLONcontinue : CONTINUE SEMICOLONfunction : FUNCTION ID LEFT_PARENTHESIS RIGHT_PARENTHESIS LEFT_CURLY_BRACKET block RIGHT_CURLY_BRACKET\n                | FUNCTION ID LEFT_PARENTHESIS RIGHT_PARENTHESIS COLON data_type LEFT_CURLY_BRACKET block RIGHT_CURLY_BRACKET\n                | FUNCTION ID LEFT_PARENTHESIS params RIGHT_PARENTHESIS LEFT_CURLY_BRACKET block RIGHT_CURLY_BRACKET\n                | FUNCTION ID LEFT_PARENTHESIS params RIGHT_PARENTHESIS COLON data_type LEFT_CURLY_BRACKET block RIGHT_CURLY_BRACKETparams : params COMMA param\n              | paramparam : ID COLON data_type\n             | ID COLON data_type LEFT_SQ_BRACKET RIGHT_SQ_BRACKETreturn : RETURN expression SEMICOLON\n              | RETURN SEMICOLONcall_function : ID LEFT_PARENTHESIS expression_list RIGHT_PARENTHESIS\n                     | ID LEFT_PARENTHESIS RIGHT_PARENTHESISmethods : methods PERIOD name_method LEFT_PARENTHESIS RIGHT_PARENTHESIS\n               | methods PERIOD name_method expression\n               | methods PERIOD name_method\n               | access_array\n               | valuename_method : TOSTRING\n                   | TOLOWERCASE\n                   | TOUPPERCASE\n                   | PUSH\n                   | POP\n                   | INDEXOF\n                   | LENGTHprint : CONSOLE PERIOD LOG LEFT_PARENTHESIS expression_list RIGHT_PARENTHESIS SEMICOLONmethods : PARSEINT expressionmethods : PARSEFLOAT expressionmethods : TYPEOF expressiondeclaration_array : symbol_type ID COLON data_type LEFT_SQ_BRACKET RIGHT_SQ_BRACKET EQUAL LEFT_SQ_BRACKET expression_list RIGHT_SQ_BRACKET SEMICOLONassignment : ID LEFT_SQ_BRACKET expression RIGHT_SQ_BRACKET EQUAL expression SEMICOLONaccess_array : ID LEFT_SQ_BRACKET expression RIGHT_SQ_BRACKETexpression_list : expression_list COMMA expression\n                       | expression expression : expression_unary\n                  | expression_binary\n                  | expression_group\n                  | methods\n                  | call_functionexpression_unary : MINUS expression %prec UMINUS\n                        | NOT expression\n                        | expression INCREASE\n                        | expression DECREASEexpression_binary : arithmetic\n                         | relational\n                         | logicalarithmetic : expression PLUS expression\n                  | expression MINUS expression\n                  | expression TIMES expression\n                  | expression DIVIDE expression\n                  | expression MODULUS expressionrelational : expression LESS expression\n                  | expression GREATER expression\n                  | expression EQUAL_TO expression\n                  | expression NOT_EQUAL_TO expression\n                  | expression LESS_EQUAL expression\n                  | expression GREATER_EQUAL expressionlogical : expression AND expression\n               | expression OR expressionexpression_group : LEFT_PARENTHESIS expression RIGHT_PARENTHESISsymbol_type : VAR\n                   | CONSTdata_type : NUMBER\n                 | FLOAT\n                 | STRING\n                 | CHAR\n                 | BOOLEANvalue : INTEGER\n             | DECIMAL\n             | TEXT\n             | CHARACTER\n             | BOOL\n             | NULLvalue : ID'
    
_lr_action_items = {'ID':([0,2,3,4,5,6,7,8,9,10,11,14,15,16,17,18,24,27,28,29,32,34,35,42,43,45,47,48,49,50,51,52,53,54,63,64,68,72,73,75,77,78,79,80,81,82,83,84,86,97,98,99,102,103,104,105,106,107,108,109,110,111,112,113,114,118,119,121,130,131,132,135,160,162,163,165,166,168,170,171,172,175,178,184,187,189,194,196,200,202,203,204,207,208,212,213,214,216,217,219,220,221,222,223,224,226,227,228,231,233,234,235,236,237,238,240,241,242,243,244,245,246,248,249,251,252,253,254,],[19,19,-3,-4,-5,-6,-7,-8,-9,-10,-11,-14,-15,-16,-17,46,56,69,69,69,69,-100,-101,-2,-12,-13,69,69,69,69,69,69,69,69,69,69,69,-39,-40,-50,69,-58,-59,-60,-61,-62,-63,-64,69,69,140,141,69,69,69,69,69,69,69,69,69,69,69,69,69,69,-49,69,-21,-22,-23,69,69,69,-19,-20,69,19,19,69,191,19,141,19,69,19,19,19,-18,-70,-24,-31,19,-36,-41,19,19,-65,69,-26,-29,19,19,19,19,19,-43,19,19,-28,19,19,19,-42,19,69,19,19,-37,-38,-44,-69,-25,19,-27,19,19,-30,]),'IF':([0,2,3,4,5,6,7,8,9,10,11,14,15,16,17,42,43,45,72,73,75,119,130,131,132,163,165,168,170,175,184,189,194,196,200,202,203,204,207,208,212,213,214,216,218,219,220,221,222,223,224,226,227,228,231,232,233,234,235,236,237,238,241,242,243,244,245,246,248,249,251,252,253,254,],[20,20,-3,-4,-5,-6,-7,-8,-9,-10,-11,-14,-15,-16,-17,-2,-12,-13,-39,-40,-50,-49,-21,-22,-23,-19,-20,20,20,20,20,20,20,20,-18,-70,-24,-31,20,-36,-41,20,20,-65,230,-26,-29,20,20,20,20,20,-43,20,20,230,-28,20,20,20,-42,20,20,20,-37,-38,-44,-69,-25,20,-27,20,20,-30,]),'SWITCH':([0,2,3,4,5,6,7,8,9,10,11,14,15,16,17,42,43,45,72,73,75,119,130,131,132,163,165,168,170,175,184,189,194,196,200,202,203,204,207,208,212,213,214,216,219,220,221,222,223,224,226,227,228,231,233,234,235,236,237,238,241,242,243,244,245,246,248,249,251,252,253,254,],[21,21,-3,-4,-5,-6,-7,-8,-9,-10,-11,-14,-15,-16,-17,-2,-12,-13,-39,-40,-50,-49,-21,-22,-23,-19,-20,21,21,21,21,21,21,21,-18,-70,-24,-31,21,-36,-41,21,21,-65,-26,-29,21,21,21,21,21,-43,21,21,-28,21,21,21,-42,21,21,21,-37,-38,-44,-69,-25,21,-27,21,21,-30,]),'WHILE':([0,2,3,4,5,6,7,8,9,10,11,14,15,16,17,42,43,45,72,73,75,119,130,131,132,163,165,168,170,175,184,189,194,196,200,202,203,204,207,208,212,213,214,216,219,220,221,222,223,224,226,227,228,231,233,234,235,236,237,238,241,242,243,244,245,246,248,249,251,252,253,254,],[22,22,-3,-4,-5,-6,-7,-8,-9,-10,-11,-14,-15,-16,-17,-2,-12,-13,-39,-40,-50,-49,-21,-22,-23,-19,-20,22,22,22,22,22,22,22,-18,-70,-24,-31,22,-36,-41,22,22,-65,-26,-29,22,22,22,22,22,-43,22,22,-28,22,22,22,-42,22,22,22,-37,-38,-44,-69,-25,22,-27,22,22,-30,]),'FOR':([0,2,3,4,5,6,7,8,9,10,11,14,15,16,17,42,43,45,72,73,75,119,130,131,132,163,165,168,170,175,184,189,194,196,200,202,203,204,207,208,212,213,214,216,219,220,221,222,223,224,226,227,228,231,233,234,235,236,237,238,241,242,243,244,245,246,248,249,251,252,253,254,],[23,23,-3,-4,-5,-6,-7,-8,-9,-10,-11,-14,-15,-16,-17,-2,-12,-13,-39,-40,-50,-49,-21,-22,-23,-19,-20,23,23,23,23,23,23,23,-18,-70,-24,-31,23,-36,-41,23,23,-65,-26,-29,23,23,23,23,23,-43,23,23,-28,23,23,23,-42,23,23,23,-37,-38,-44,-69,-25,23,-27,23,23,-30,]),'FUNCTION':([0,2,3,4,5,6,7,8,9,10,11,14,15,16,17,42,43,45,72,73,75,119,130,131,132,163,165,168,170,175,184,189,194,196,200,202,203,204,207,208,212,213,214,216,219,220,221,222,223,224,226,227,228,231,233,234,235,236,237,238,241,242,243,244,245,246,248,249,251,252,253,254,],[24,24,-3,-4,-5,-6,-7,-8,-9,-10,-11,-14,-15,-16,-17,-2,-12,-13,-39,-40,-50,-49,-21,-22,-23,-19,-20,24,24,24,24,24,24,24,-18,-70,-24,-31,24,-36,-41,24,24,-65,-26,-29,24,24,24,24,24,-43,24,24,-28,24,24,24,-42,24,24,24,-37,-38,-44,-69,-25,24,-27,24,24,-30,]),'PARSEINT':([0,2,3,4,5,6,7,8,9,10,11,14,15,16,17,27,28,29,32,42,43,45,47,48,49,50,51,52,53,54,63,64,68,72,73,75,77,78,79,80,81,82,83,84,86,97,102,103,104,105,106,107,108,109,110,111,112,113,114,118,119,121,130,131,132,135,160,162,163,165,166,168,170,171,175,184,187,189,194,196,200,202,203,204,207,208,212,213,214,216,217,219,220,221,222,223,224,226,227,228,231,233,234,235,236,237,238,240,241,242,243,244,245,246,248,249,251,252,253,254,],[27,27,-3,-4,-5,-6,-7,-8,-9,-10,-11,-14,-15,-16,-17,27,27,27,27,-2,-12,-13,27,27,27,27,27,27,27,27,27,27,27,-39,-40,-50,27,-58,-59,-60,-61,-62,-63,-64,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,-49,27,-21,-22,-23,27,27,27,-19,-20,27,27,27,27,27,27,27,27,27,27,-18,-70,-24,-31,27,-36,-41,27,27,-65,27,-26,-29,27,27,27,27,27,-43,27,27,-28,27,27,27,-42,27,27,27,27,-37,-38,-44,-69,-25,27,-27,27,27,-30,]),'PARSEFLOAT':([0,2,3,4,5,6,7,8,9,10,11,14,15,16,17,27,28,29,32,42,43,45,47,48,49,50,51,52,53,54,63,64,68,72,73,75,77,78,79,80,81,82,83,84,86,97,102,103,104,105,106,107,108,109,110,111,112,113,114,118,119,121,130,131,132,135,160,162,163,165,166,168,170,171,175,184,187,189,194,196,200,202,203,204,207,208,212,213,214,216,217,219,220,221,222,223,224,226,227,228,231,233,234,235,236,237,238,240,241,242,243,244,245,246,248,249,251,252,253,254,],[28,28,-3,-4,-5,-6,-7,-8,-9,-10,-11,-14,-15,-16,-17,28,28,28,28,-2,-12,-13,28,28,28,28,28,28,28,28,28,28,28,-39,-40,-50,28,-58,-59,-60,-61,-62,-63,-64,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,-49,28,-21,-22,-23,28,28,28,-19,-20,28,28,28,28,28,28,28,28,28,28,-18,-70,-24,-31,28,-36,-41,28,28,-65,28,-26,-29,28,28,28,28,28,-43,28,28,-28,28,28,28,-42,28,28,28,28,-37,-38,-44,-69,-25,28,-27,28,28,-30,]),'TYPEOF':([0,2,3,4,5,6,7,8,9,10,11,14,15,16,17,27,28,29,32,42,43,45,47,48,49,50,51,52,53,54,63,64,68,72,73,75,77,78,79,80,81,82,83,84,86,97,102,103,104,105,106,107,108,109,110,111,112,113,114,118,119,121,130,131,132,135,160,162,163,165,166,168,170,171,175,184,187,189,194,196,200,202,203,204,207,208,212,213,214,216,217,219,220,221,222,223,224,226,227,228,231,233,234,235,236,237,238,240,241,242,243,244,245,246,248,249,251,252,253,254,],[29,29,-3,-4,-5,-6,-7,-8,-9,-10,-11,-14,-15,-16,-17,29,29,29,29,-2,-12,-13,29,29,29,29,29,29,29,29,29,29,29,-39,-40,-50,29,-58,-59,-60,-61,-62,-63,-64,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,-49,29,-21,-22,-23,29,29,29,-19,-20,29,29,29,29,29,29,29,29,29,29,-18,-70,-24,-31,29,-36,-41,29,29,-65,29,-26,-29,29,29,29,29,29,-43,29,29,-28,29,29,29,-42,29,29,29,29,-37,-38,-44,-69,-25,29,-27,29,29,-30,]),'BREAK':([0,2,3,4,5,6,7,8,9,10,11,14,15,16,17,42,43,45,72,73,75,119,130,131,132,163,165,168,170,175,184,189,194,196,200,202,203,204,207,208,212,213,214,216,219,220,221,222,223,224,226,227,228,231,233,234,235,236,237,238,241,242,243,244,245,246,248,249,251,252,253,254,],[30,30,-3,-4,-5,-6,-7,-8,-9,-10,-11,-14,-15,-16,-17,-2,-12,-13,-39,-40,-50,-49,-21,-22,-23,-19,-20,30,30,30,30,30,30,30,-18,-70,-24,-31,30,-36,-41,30,30,-65,-26,-29,30,30,30,30,30,-43,30,30,-28,30,30,30,-42,30,30,30,-37,-38,-44,-69,-25,30,-27,30,30,-30,]),'CONTINUE':([0,2,3,4,5,6,7,8,9,10,11,14,15,16,17,42,43,45,72,73,75,119,130,131,132,163,165,168,170,175,184,189,194,196,200,202,203,204,207,208,212,213,214,216,219,220,221,222,223,224,226,227,228,231,233,234,235,236,237,238,241,242,243,244,245,246,248,249,251,252,253,254,],[31,31,-3,-4,-5,-6,-7,-8,-9,-10,-11,-14,-15,-16,-17,-2,-12,-13,-39,-40,-50,-49,-21,-22,-23,-19,-20,31,31,31,31,31,31,31,-18,-70,-24,-31,31,-36,-41,31,31,-65,-26,-29,31,31,31,31,31,-43,31,31,-28,31,31,31,-42,31,31,31,-37,-38,-44,-69,-25,31,-27,31,31,-30,]),'RETURN':([0,2,3,4,5,6,7,8,9,10,11,14,15,16,17,42,43,45,72,73,75,119,130,131,132,163,165,168,170,175,184,189,194,196,200,202,203,204,207,208,212,213,214,216,219,220,221,222,223,224,226,227,228,231,233,234,235,236,237,238,241,242,243,244,245,246,248,249,251,252,253,254,],[32,32,-3,-4,-5,-6,-7,-8,-9,-10,-11,-14,-15,-16,-17,-2,-12,-13,-39,-40,-50,-49,-21,-22,-23,-19,-20,32,32,32,32,32,32,32,-18,-70,-24,-31,32,-36,-41,32,32,-65,-26,-29,32,32,32,32,32,-43,32,32,-28,32,32,32,-42,32,32,32,-37,-38,-44,-69,-25,32,-27,32,32,-30,]),'CONSOLE':([0,2,3,4,5,6,7,8,9,10,11,14,15,16,17,42,43,45,72,73,75,119,130,131,132,163,165,168,170,175,184,189,194,196,200,202,203,204,207,208,212,213,214,216,219,220,221,222,223,224,226,227,228,231,233,234,235,236,237,238,241,242,243,244,245,246,248,249,251,252,253,254,],[33,33,-3,-4,-5,-6,-7,-8,-9,-10,-11,-14,-15,-16,-17,-2,-12,-13,-39,-40,-50,-49,-21,-22,-23,-19,-20,33,33,33,33,33,33,33,-18,-70,-24,-31,33,-36,-41,33,33,-65,-26,-29,33,33,33,33,33,-43,33,33,-28,33,33,33,-42,33,33,33,-37,-38,-44,-69,-25,33,-27,33,33,-30,]),'VAR':([0,2,3,4,5,6,7,8,9,10,11,14,15,16,17,42,43,45,55,72,73,75,119,130,131,132,163,165,168,170,175,184,189,194,196,200,202,203,204,207,208,212,213,214,216,219,220,221,222,223,224,226,227,228,231,233,234,235,236,237,238,241,242,243,244,245,246,248,249,251,252,253,254,],[34,34,-3,-4,-5,-6,-7,-8,-9,-10,-11,-14,-15,-16,-17,-2,-12,-13,34,-39,-40,-50,-49,-21,-22,-23,-19,-20,34,34,34,34,34,34,34,-18,-70,-24,-31,34,-36,-41,34,34,-65,-26,-29,34,34,34,34,34,-43,34,34,-28,34,34,34,-42,34,34,34,-37,-38,-44,-69,-25,34,-27,34,34,-30,]),'CONST':([0,2,3,4,5,6,7,8,9,10,11,14,15,16,17,42,43,45,55,72,73,75,119,130,131,132,163,165,168,170,175,184,189,194,196,200,202,203,204,207,208,212,213,214,216,219,220,221,222,223,224,226,227,228,231,233,234,235,236,237,238,241,242,243,244,245,246,248,249,251,252,253,254,],[35,35,-3,-4,-5,-6,-7,-8,-9,-10,-11,-14,-15,-16,-17,-2,-12,-13,35,-39,-40,-50,-49,-21,-22,-23,-19,-20,35,35,35,35,35,35,35,-18,-70,-24,-31,35,-36,-41,35,35,-65,-26,-29,35,35,35,35,35,-43,35,35,-28,35,35,35,-42,35,35,35,-37,-38,-44,-69,-25,35,-27,35,35,-30,]),'INTEGER':([0,2,3,4,5,6,7,8,9,10,11,14,15,16,17,27,28,29,32,42,43,45,47,48,49,50,51,52,53,54,63,64,68,72,73,75,77,78,79,80,81,82,83,84,86,97,102,103,104,105,106,107,108,109,110,111,112,113,114,118,119,121,130,131,132,135,160,162,163,165,166,168,170,171,175,184,187,189,194,196,200,202,203,204,207,208,212,213,214,216,217,219,220,221,222,223,224,226,227,228,231,233,234,235,236,237,238,240,241,242,243,244,245,246,248,249,251,252,253,254,],[36,36,-3,-4,-5,-6,-7,-8,-9,-10,-11,-14,-15,-16,-17,36,36,36,36,-2,-12,-13,36,36,36,36,36,36,36,36,36,36,36,-39,-40,-50,36,-58,-59,-60,-61,-62,-63,-64,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,-49,36,-21,-22,-23,36,36,36,-19,-20,36,36,36,36,36,36,36,36,36,36,-18,-70,-24,-31,36,-36,-41,36,36,-65,36,-26,-29,36,36,36,36,36,-43,36,36,-28,36,36,36,-42,36,36,36,36,-37,-38,-44,-69,-25,36,-27,36,36,-30,]),'DECIMAL':([0,2,3,4,5,6,7,8,9,10,11,14,15,16,17,27,28,29,32,42,43,45,47,48,49,50,51,52,53,54,63,64,68,72,73,75,77,78,79,80,81,82,83,84,86,97,102,103,104,105,106,107,108,109,110,111,112,113,114,118,119,121,130,131,132,135,160,162,163,165,166,168,170,171,175,184,187,189,194,196,200,202,203,204,207,208,212,213,214,216,217,219,220,221,222,223,224,226,227,228,231,233,234,235,236,237,238,240,241,242,243,244,245,246,248,249,251,252,253,254,],[37,37,-3,-4,-5,-6,-7,-8,-9,-10,-11,-14,-15,-16,-17,37,37,37,37,-2,-12,-13,37,37,37,37,37,37,37,37,37,37,37,-39,-40,-50,37,-58,-59,-60,-61,-62,-63,-64,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,-49,37,-21,-22,-23,37,37,37,-19,-20,37,37,37,37,37,37,37,37,37,37,-18,-70,-24,-31,37,-36,-41,37,37,-65,37,-26,-29,37,37,37,37,37,-43,37,37,-28,37,37,37,-42,37,37,37,37,-37,-38,-44,-69,-25,37,-27,37,37,-30,]),'TEXT':([0,2,3,4,5,6,7,8,9,10,11,14,15,16,17,27,28,29,32,42,43,45,47,48,49,50,51,52,53,54,63,64,68,72,73,75,77,78,79,80,81,82,83,84,86,97,102,103,104,105,106,107,108,109,110,111,112,113,114,118,119,121,130,131,132,135,160,162,163,165,166,168,170,171,175,184,187,189,194,196,200,202,203,204,207,208,212,213,214,216,217,219,220,221,222,223,224,226,227,228,231,233,234,235,236,237,238,240,241,242,243,244,245,246,248,249,251,252,253,254,],[38,38,-3,-4,-5,-6,-7,-8,-9,-10,-11,-14,-15,-16,-17,38,38,38,38,-2,-12,-13,38,38,38,38,38,38,38,38,38,38,38,-39,-40,-50,38,-58,-59,-60,-61,-62,-63,-64,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,-49,38,-21,-22,-23,38,38,38,-19,-20,38,38,38,38,38,38,38,38,38,38,-18,-70,-24,-31,38,-36,-41,38,38,-65,38,-26,-29,38,38,38,38,38,-43,38,38,-28,38,38,38,-42,38,38,38,38,-37,-38,-44,-69,-25,38,-27,38,38,-30,]),'CHARACTER':([0,2,3,4,5,6,7,8,9,10,11,14,15,16,17,27,28,29,32,42,43,45,47,48,49,50,51,52,53,54,63,64,68,72,73,75,77,78,79,80,81,82,83,84,86,97,102,103,104,105,106,107,108,109,110,111,112,113,114,118,119,121,130,131,132,135,160,162,163,165,166,168,170,171,175,184,187,189,194,196,200,202,203,204,207,208,212,213,214,216,217,219,220,221,222,223,224,226,227,228,231,233,234,235,236,237,238,240,241,242,243,244,245,246,248,249,251,252,253,254,],[39,39,-3,-4,-5,-6,-7,-8,-9,-10,-11,-14,-15,-16,-17,39,39,39,39,-2,-12,-13,39,39,39,39,39,39,39,39,39,39,39,-39,-40,-50,39,-58,-59,-60,-61,-62,-63,-64,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,-49,39,-21,-22,-23,39,39,39,-19,-20,39,39,39,39,39,39,39,39,39,39,-18,-70,-24,-31,39,-36,-41,39,39,-65,39,-26,-29,39,39,39,39,39,-43,39,39,-28,39,39,39,-42,39,39,39,39,-37,-38,-44,-69,-25,39,-27,39,39,-30,]),'BOOL':([0,2,3,4,5,6,7,8,9,10,11,14,15,16,17,27,28,29,32,42,43,45,47,48,49,50,51,52,53,54,63,64,68,72,73,75,77,78,79,80,81,82,83,84,86,97,102,103,104,105,106,107,108,109,110,111,112,113,114,118,119,121,130,131,132,135,160,162,163,165,166,168,170,171,175,184,187,189,194,196,200,202,203,204,207,208,212,213,214,216,217,219,220,221,222,223,224,226,227,228,231,233,234,235,236,237,238,240,241,242,243,244,245,246,248,249,251,252,253,254,],[40,40,-3,-4,-5,-6,-7,-8,-9,-10,-11,-14,-15,-16,-17,40,40,40,40,-2,-12,-13,40,40,40,40,40,40,40,40,40,40,40,-39,-40,-50,40,-58,-59,-60,-61,-62,-63,-64,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,-49,40,-21,-22,-23,40,40,40,-19,-20,40,40,40,40,40,40,40,40,40,40,-18,-70,-24,-31,40,-36,-41,40,40,-65,40,-26,-29,40,40,40,40,40,-43,40,40,-28,40,40,40,-42,40,40,40,40,-37,-38,-44,-69,-25,40,-27,40,40,-30,]),'NULL':([0,2,3,4,5,6,7,8,9,10,11,14,15,16,17,27,28,29,32,42,43,45,47,48,49,50,51,52,53,54,63,64,68,72,73,75,77,78,79,80,81,82,83,84,86,97,102,103,104,105,106,107,108,109,110,111,112,113,114,118,119,121,130,131,132,135,160,162,163,165,166,168,170,171,175,184,187,189,194,196,200,202,203,204,207,208,212,213,214,216,217,219,220,221,222,223,224,226,227,228,231,233,234,235,236,237,238,240,241,242,243,244,245,246,248,249,251,252,253,254,],[41,41,-3,-4,-5,-6,-7,-8,-9,-10,-11,-14,-15,-16,-17,41,41,41,41,-2,-12,-13,41,41,41,41,41,41,41,41,41,41,41,-39,-40,-50,41,-58,-59,-60,-61,-62,-63,-64,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,-49,41,-21,-22,-23,41,41,41,-19,-20,41,41,41,41,41,41,41,41,41,41,-18,-70,-24,-31,41,-36,-41,41,41,-65,41,-26,-29,41,41,41,41,41,-43,41,41,-28,41,41,41,-42,41,41,41,41,-37,-38,-44,-69,-25,41,-27,41,41,-30,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,14,15,16,17,42,43,45,72,73,75,119,130,131,132,163,165,200,202,203,204,208,212,216,219,220,227,233,237,243,244,245,246,248,251,254,],[0,-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-14,-15,-16,-17,-2,-12,-13,-39,-40,-50,-49,-21,-22,-23,-19,-20,-18,-70,-24,-31,-36,-41,-65,-26,-29,-43,-28,-42,-37,-38,-44,-69,-25,-27,-30,]),'RIGHT_CURLY_BRACKET':([3,4,5,6,7,8,9,10,11,14,15,16,17,42,43,45,72,73,75,119,130,131,132,163,165,184,185,186,189,194,200,202,203,204,205,208,212,214,216,219,220,222,226,227,233,234,235,236,237,238,241,243,244,245,246,248,249,251,253,254,],[-3,-4,-5,-6,-7,-8,-9,-10,-11,-14,-15,-16,-17,-2,-12,-13,-39,-40,-50,-49,-21,-22,-23,-19,-20,203,204,-33,208,212,-18,-70,-24,-31,-32,-36,-41,227,-65,-26,-29,-35,237,-43,-28,-34,243,244,-42,245,248,-37,-38,-44,-69,-25,251,-27,254,-30,]),'CASE':([3,4,5,6,7,8,9,10,11,14,15,16,17,42,43,45,72,73,75,119,130,131,132,163,165,169,185,186,200,202,203,204,205,208,212,216,219,220,222,227,233,234,237,243,244,245,246,248,251,254,],[-3,-4,-5,-6,-7,-8,-9,-10,-11,-14,-15,-16,-17,-2,-12,-13,-39,-40,-50,-49,-21,-22,-23,-19,-20,187,187,-33,-18,-70,-24,-31,-32,-36,-41,-65,-26,-29,-35,-43,-28,-34,-42,-37,-38,-44,-69,-25,-27,-30,]),'DEFAULT':([3,4,5,6,7,8,9,10,11,14,15,16,17,42,43,45,72,73,75,119,130,131,132,163,165,169,185,186,200,202,203,204,205,208,212,216,219,220,222,227,233,234,237,243,244,245,246,248,251,254,],[-3,-4,-5,-6,-7,-8,-9,-10,-11,-14,-15,-16,-17,-2,-12,-13,-39,-40,-50,-49,-21,-22,-23,-19,-20,188,188,-33,-18,-70,-24,-31,-32,-36,-41,-65,-26,-29,-35,-43,-28,-34,-42,-37,-38,-44,-69,-25,-27,-30,]),'SEMICOLON':([12,13,19,25,26,30,31,32,36,37,38,39,40,41,57,58,59,60,61,62,65,66,67,69,70,71,74,77,78,79,80,81,82,83,84,87,88,89,92,100,101,115,116,122,123,124,125,126,127,128,129,133,134,139,145,146,147,148,149,150,151,152,153,154,155,156,157,158,161,179,181,183,192,199,239,],[43,45,-113,-56,-57,72,73,75,-107,-108,-109,-110,-111,-112,-66,-74,-75,-76,-77,-78,-83,-84,-85,-113,-67,-68,119,-55,-58,-59,-60,-61,-62,-63,-64,130,131,132,-52,-81,-82,-79,-80,-54,163,-102,-103,-104,-105,-106,165,-71,-51,171,-86,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,-53,-71,200,202,163,216,246,]),'PERIOD':([12,19,25,26,33,36,37,38,39,40,41,57,58,59,60,61,62,65,66,67,69,70,71,77,78,79,80,81,82,83,84,92,100,101,115,116,122,133,134,145,146,147,148,149,150,151,152,153,154,155,156,157,158,161,179,],[44,-113,-56,-57,76,-107,-108,-109,-110,-111,-112,-66,-74,-75,-76,44,-78,-83,-84,-85,-113,-67,-68,-55,-58,-59,-60,-61,-62,-63,-64,-52,-81,-82,-79,-80,-54,-71,-51,-86,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,-53,-71,]),'EQUAL':([19,46,123,124,125,126,127,128,133,140,182,192,],[47,86,162,-102,-103,-104,-105,-106,166,86,201,162,]),'ADITION':([19,],[48,]),'SUBTRACTION':([19,],[49,]),'LEFT_SQ_BRACKET':([19,69,123,124,125,126,127,128,193,201,],[50,118,164,-102,-103,-104,-105,-106,211,217,]),'LEFT_PARENTHESIS':([19,20,21,22,23,27,28,29,32,47,48,49,50,51,52,53,54,56,63,64,68,69,77,78,79,80,81,82,83,84,86,97,102,103,104,105,106,107,108,109,110,111,112,113,114,118,120,121,135,160,162,163,165,166,171,187,200,217,230,240,],[51,52,53,54,55,68,68,68,68,68,68,68,68,68,68,68,68,99,68,68,68,51,121,-58,-59,-60,-61,-62,-63,-64,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,160,68,68,68,68,-19,-20,68,68,68,-18,68,240,68,]),'INCREASE':([25,26,36,37,38,39,40,41,57,58,59,60,61,62,65,66,67,69,70,71,74,77,78,79,80,81,82,83,84,87,88,89,90,92,93,94,95,96,100,101,115,116,117,122,129,134,139,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,161,167,179,181,183,190,206,247,],[-56,-57,-107,-108,-109,-110,-111,-112,100,-74,-75,-76,-77,-78,-83,-84,-85,-113,100,100,100,-55,-58,-59,-60,-61,-62,-63,-64,100,100,100,100,-52,100,100,100,100,-81,-82,-79,-80,100,100,100,-51,100,-86,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,100,-53,100,-71,100,100,100,100,100,]),'DECREASE':([25,26,36,37,38,39,40,41,57,58,59,60,61,62,65,66,67,69,70,71,74,77,78,79,80,81,82,83,84,87,88,89,90,92,93,94,95,96,100,101,115,116,117,122,129,134,139,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,161,167,179,181,183,190,206,247,],[-56,-57,-107,-108,-109,-110,-111,-112,101,-74,-75,-76,-77,-78,-83,-84,-85,-113,101,101,101,-55,-58,-59,-60,-61,-62,-63,-64,101,101,101,101,-52,101,101,101,101,-81,-82,-79,-80,101,101,101,-51,101,-86,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,101,-53,101,-71,101,101,101,101,101,]),'PLUS':([25,26,36,37,38,39,40,41,57,58,59,60,61,62,65,66,67,69,70,71,74,77,78,79,80,81,82,83,84,87,88,89,90,92,93,94,95,96,100,101,115,116,117,122,129,134,139,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,161,167,179,181,183,190,206,247,],[-56,-57,-107,-108,-109,-110,-111,-112,102,-74,-75,-76,-77,-78,-83,-84,-85,-113,102,102,102,-55,-58,-59,-60,-61,-62,-63,-64,102,102,102,102,-52,102,102,102,102,-81,-82,-79,-80,102,102,102,-51,102,-86,-87,-88,-89,-90,102,102,102,102,102,102,102,102,-99,102,-53,102,-71,102,102,102,102,102,]),'MINUS':([25,26,27,28,29,32,36,37,38,39,40,41,47,48,49,50,51,52,53,54,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,74,77,78,79,80,81,82,83,84,86,87,88,89,90,92,93,94,95,96,97,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,121,122,129,134,135,139,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,165,166,167,171,179,181,183,187,190,200,206,217,240,247,],[-56,-57,63,63,63,63,-107,-108,-109,-110,-111,-112,63,63,63,63,63,63,63,63,103,-74,-75,-76,-77,-78,63,63,-83,-84,-85,63,-113,103,103,103,63,-58,-59,-60,-61,-62,-63,-64,63,103,103,103,103,-52,103,103,103,103,63,-81,-82,63,63,63,63,63,63,63,63,63,63,63,63,63,-79,-80,103,63,63,103,103,-51,63,103,-86,-87,-88,-89,-90,103,103,103,103,103,103,103,103,-99,103,63,-53,63,-19,-20,63,103,63,-71,103,103,63,103,-18,103,63,63,103,]),'TIMES':([25,26,36,37,38,39,40,41,57,58,59,60,61,62,65,66,67,69,70,71,74,77,78,79,80,81,82,83,84,87,88,89,90,92,93,94,95,96,100,101,115,116,117,122,129,134,139,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,161,167,179,181,183,190,206,247,],[-56,-57,-107,-108,-109,-110,-111,-112,104,-74,-75,-76,-77,-78,-83,-84,-85,-113,104,104,104,-55,-58,-59,-60,-61,-62,-63,-64,104,104,104,104,-52,104,104,104,104,-81,-82,-79,-80,104,104,104,-51,104,104,104,-88,-89,-90,104,104,104,104,104,104,104,104,-99,104,-53,104,-71,104,104,104,104,104,]),'DIVIDE':([25,26,36,37,38,39,40,41,57,58,59,60,61,62,65,66,67,69,70,71,74,77,78,79,80,81,82,83,84,87,88,89,90,92,93,94,95,96,100,101,115,116,117,122,129,134,139,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,161,167,179,181,183,190,206,247,],[-56,-57,-107,-108,-109,-110,-111,-112,105,-74,-75,-76,-77,-78,-83,-84,-85,-113,105,105,105,-55,-58,-59,-60,-61,-62,-63,-64,105,105,105,105,-52,105,105,105,105,-81,-82,-79,-80,105,105,105,-51,105,105,105,-88,-89,-90,105,105,105,105,105,105,105,105,-99,105,-53,105,-71,105,105,105,105,105,]),'MODULUS':([25,26,36,37,38,39,40,41,57,58,59,60,61,62,65,66,67,69,70,71,74,77,78,79,80,81,82,83,84,87,88,89,90,92,93,94,95,96,100,101,115,116,117,122,129,134,139,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,161,167,179,181,183,190,206,247,],[-56,-57,-107,-108,-109,-110,-111,-112,106,-74,-75,-76,-77,-78,-83,-84,-85,-113,106,106,106,-55,-58,-59,-60,-61,-62,-63,-64,106,106,106,106,-52,106,106,106,106,-81,-82,-79,-80,106,106,106,-51,106,106,106,-88,-89,-90,106,106,106,106,106,106,106,106,-99,106,-53,106,-71,106,106,106,106,106,]),'LESS':([25,26,36,37,38,39,40,41,57,58,59,60,61,62,65,66,67,69,70,71,74,77,78,79,80,81,82,83,84,87,88,89,90,92,93,94,95,96,100,101,115,116,117,122,129,134,139,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,161,167,179,181,183,190,206,247,],[-56,-57,-107,-108,-109,-110,-111,-112,107,-74,-75,-76,-77,-78,-83,-84,-85,-113,107,107,107,-55,-58,-59,-60,-61,-62,-63,-64,107,107,107,107,-52,107,107,107,107,-81,-82,-79,-80,107,107,107,-51,107,-86,-87,-88,-89,-90,-91,-92,107,107,-95,-96,107,107,-99,107,-53,107,-71,107,107,107,107,107,]),'GREATER':([25,26,36,37,38,39,40,41,57,58,59,60,61,62,65,66,67,69,70,71,74,77,78,79,80,81,82,83,84,87,88,89,90,92,93,94,95,96,100,101,115,116,117,122,129,134,139,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,161,167,179,181,183,190,206,247,],[-56,-57,-107,-108,-109,-110,-111,-112,108,-74,-75,-76,-77,-78,-83,-84,-85,-113,108,108,108,-55,-58,-59,-60,-61,-62,-63,-64,108,108,108,108,-52,108,108,108,108,-81,-82,-79,-80,108,108,108,-51,108,-86,-87,-88,-89,-90,-91,-92,108,108,-95,-96,108,108,-99,108,-53,108,-71,108,108,108,108,108,]),'EQUAL_TO':([25,26,36,37,38,39,40,41,57,58,59,60,61,62,65,66,67,69,70,71,74,77,78,79,80,81,82,83,84,87,88,89,90,92,93,94,95,96,100,101,115,116,117,122,129,134,139,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,161,167,179,181,183,190,206,247,],[-56,-57,-107,-108,-109,-110,-111,-112,109,-74,-75,-76,-77,-78,-83,-84,-85,-113,109,109,109,-55,-58,-59,-60,-61,-62,-63,-64,109,109,109,109,-52,109,109,109,109,-81,-82,-79,-80,109,109,109,-51,109,-86,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,109,109,-99,109,-53,109,-71,109,109,109,109,109,]),'NOT_EQUAL_TO':([25,26,36,37,38,39,40,41,57,58,59,60,61,62,65,66,67,69,70,71,74,77,78,79,80,81,82,83,84,87,88,89,90,92,93,94,95,96,100,101,115,116,117,122,129,134,139,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,161,167,179,181,183,190,206,247,],[-56,-57,-107,-108,-109,-110,-111,-112,110,-74,-75,-76,-77,-78,-83,-84,-85,-113,110,110,110,-55,-58,-59,-60,-61,-62,-63,-64,110,110,110,110,-52,110,110,110,110,-81,-82,-79,-80,110,110,110,-51,110,-86,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,110,110,-99,110,-53,110,-71,110,110,110,110,110,]),'LESS_EQUAL':([25,26,36,37,38,39,40,41,57,58,59,60,61,62,65,66,67,69,70,71,74,77,78,79,80,81,82,83,84,87,88,89,90,92,93,94,95,96,100,101,115,116,117,122,129,134,139,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,161,167,179,181,183,190,206,247,],[-56,-57,-107,-108,-109,-110,-111,-112,111,-74,-75,-76,-77,-78,-83,-84,-85,-113,111,111,111,-55,-58,-59,-60,-61,-62,-63,-64,111,111,111,111,-52,111,111,111,111,-81,-82,-79,-80,111,111,111,-51,111,-86,-87,-88,-89,-90,-91,-92,111,111,-95,-96,111,111,-99,111,-53,111,-71,111,111,111,111,111,]),'GREATER_EQUAL':([25,26,36,37,38,39,40,41,57,58,59,60,61,62,65,66,67,69,70,71,74,77,78,79,80,81,82,83,84,87,88,89,90,92,93,94,95,96,100,101,115,116,117,122,129,134,139,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,161,167,179,181,183,190,206,247,],[-56,-57,-107,-108,-109,-110,-111,-112,112,-74,-75,-76,-77,-78,-83,-84,-85,-113,112,112,112,-55,-58,-59,-60,-61,-62,-63,-64,112,112,112,112,-52,112,112,112,112,-81,-82,-79,-80,112,112,112,-51,112,-86,-87,-88,-89,-90,-91,-92,112,112,-95,-96,112,112,-99,112,-53,112,-71,112,112,112,112,112,]),'AND':([25,26,36,37,38,39,40,41,57,58,59,60,61,62,65,66,67,69,70,71,74,77,78,79,80,81,82,83,84,87,88,89,90,92,93,94,95,96,100,101,115,116,117,122,129,134,139,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,161,167,179,181,183,190,206,247,],[-56,-57,-107,-108,-109,-110,-111,-112,113,-74,-75,-76,-77,-78,-83,-84,-85,-113,113,113,113,-55,-58,-59,-60,-61,-62,-63,-64,113,113,113,113,-52,113,113,113,113,-81,-82,-79,-80,113,113,113,-51,113,-86,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,113,-99,113,-53,113,-71,113,113,113,113,113,]),'OR':([25,26,36,37,38,39,40,41,57,58,59,60,61,62,65,66,67,69,70,71,74,77,78,79,80,81,82,83,84,87,88,89,90,92,93,94,95,96,100,101,115,116,117,122,129,134,139,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,161,167,179,181,183,190,206,247,],[-56,-57,-107,-108,-109,-110,-111,-112,114,-74,-75,-76,-77,-78,-83,-84,-85,-113,114,114,114,-55,-58,-59,-60,-61,-62,-63,-64,114,114,114,114,-52,114,114,114,114,-81,-82,-79,-80,114,114,114,-51,114,-86,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,114,-53,114,-71,114,114,114,114,114,]),'RIGHT_SQ_BRACKET':([25,26,36,37,38,39,40,41,57,58,59,60,61,62,65,66,67,69,70,71,77,78,79,80,81,82,83,84,90,92,93,100,101,115,116,122,134,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,161,164,167,179,211,229,],[-56,-57,-107,-108,-109,-110,-111,-112,-66,-74,-75,-76,-77,-78,-83,-84,-85,-113,-67,-68,-55,-58,-59,-60,-61,-62,-63,-64,133,-52,-73,-81,-82,-79,-80,-54,-51,-86,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,179,-53,182,-72,-71,225,239,]),'RIGHT_PARENTHESIS':([25,26,36,37,38,39,40,41,51,57,58,59,60,61,62,65,66,67,69,70,71,77,78,79,80,81,82,83,84,91,92,93,94,95,96,99,100,101,115,116,117,121,122,124,125,126,127,128,134,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,161,167,179,180,190,191,193,198,225,247,],[-56,-57,-107,-108,-109,-110,-111,-112,92,-66,-74,-75,-76,-77,-78,-83,-84,-85,-113,-67,-68,-55,-58,-59,-60,-61,-62,-63,-64,134,-52,-73,136,137,138,142,-81,-82,-79,-80,158,161,-54,-102,-103,-104,-105,-106,-51,177,-46,-86,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,-53,-72,-71,199,209,210,-47,-45,-48,250,]),'COMMA':([25,26,36,37,38,39,40,41,57,58,59,60,61,62,65,66,67,69,70,71,77,78,79,80,81,82,83,84,91,92,93,100,101,115,116,122,124,125,126,127,128,134,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,161,167,179,180,193,198,225,229,],[-56,-57,-107,-108,-109,-110,-111,-112,-66,-74,-75,-76,-77,-78,-83,-84,-85,-113,-67,-68,-55,-58,-59,-60,-61,-62,-63,-64,135,-52,-73,-81,-82,-79,-80,-54,-102,-103,-104,-105,-106,-51,178,-46,-86,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,-53,-72,-71,135,-47,-45,-48,135,]),'COLON':([25,26,36,37,38,39,40,41,46,57,58,59,60,61,62,65,66,67,69,70,71,77,78,79,80,81,82,83,84,92,100,101,115,116,122,134,140,141,142,145,146,147,148,149,150,151,152,153,154,155,156,157,158,161,177,179,188,206,],[-56,-57,-107,-108,-109,-110,-111,-112,85,-66,-74,-75,-76,-77,-78,-83,-84,-85,-113,-67,-68,-55,-58,-59,-60,-61,-62,-63,-64,-52,-81,-82,-79,-80,-54,-51,173,174,176,-86,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,-53,197,-71,207,221,]),'NOT':([27,28,29,32,47,48,49,50,51,52,53,54,63,64,68,77,78,79,80,81,82,83,84,86,97,102,103,104,105,106,107,108,109,110,111,112,113,114,118,121,135,160,162,163,165,166,171,187,200,217,240,],[64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,-58,-59,-60,-61,-62,-63,-64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,-19,-20,64,64,64,-18,64,64,]),'TOSTRING':([44,],[78,]),'TOLOWERCASE':([44,],[79,]),'TOUPPERCASE':([44,],[80,]),'PUSH':([44,],[81,]),'POP':([44,],[82,]),'INDEXOF':([44,],[83,]),'LENGTH':([44,],[84,]),'LOG':([76,],[120,]),'NUMBER':([85,173,174,176,197,],[124,124,124,124,124,]),'FLOAT':([85,173,174,176,197,],[125,125,125,125,125,]),'STRING':([85,173,174,176,197,],[126,126,126,126,126,]),'CHAR':([85,173,174,176,197,],[127,127,127,127,127,]),'BOOLEAN':([85,173,174,176,197,],[128,128,128,128,128,]),'LEFT_CURLY_BRACKET':([124,125,126,127,128,136,137,138,142,177,195,209,210,215,218,232,250,],[-102,-103,-104,-105,-106,168,169,170,175,196,213,223,224,228,231,242,252,]),'OF':([140,],[172,]),'ELSE':([203,219,220,233,254,],[218,232,-29,-28,-30,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'start':([0,],[1,]),'block':([0,168,170,175,196,207,213,221,223,224,228,231,242,252,],[2,184,189,194,214,222,226,234,235,236,238,241,249,253,]),'instruction':([0,2,168,170,175,184,189,194,196,207,213,214,221,222,223,224,226,228,231,234,235,236,238,241,242,249,252,253,],[3,42,3,3,3,42,42,42,3,3,3,42,3,42,3,3,42,3,3,42,42,42,42,42,3,42,3,42,]),'declaration':([0,2,55,168,170,175,184,189,194,196,207,213,214,221,222,223,224,226,228,231,234,235,236,238,241,242,249,252,253,],[4,4,97,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'declaration_array':([0,2,168,170,175,184,189,194,196,207,213,214,221,222,223,224,226,228,231,234,235,236,238,241,242,249,252,253,],[5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'assignment':([0,2,168,170,175,184,189,194,196,207,213,214,221,222,223,224,226,228,231,234,235,236,238,241,242,249,252,253,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'if':([0,2,168,170,175,184,189,194,196,207,213,214,221,222,223,224,226,228,231,234,235,236,238,241,242,249,252,253,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'switch':([0,2,168,170,175,184,189,194,196,207,213,214,221,222,223,224,226,228,231,234,235,236,238,241,242,249,252,253,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'while':([0,2,168,170,175,184,189,194,196,207,213,214,221,222,223,224,226,228,231,234,235,236,238,241,242,249,252,253,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'for':([0,2,168,170,175,184,189,194,196,207,213,214,221,222,223,224,226,228,231,234,235,236,238,241,242,249,252,253,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'function':([0,2,168,170,175,184,189,194,196,207,213,214,221,222,223,224,226,228,231,234,235,236,238,241,242,249,252,253,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'methods':([0,2,27,28,29,32,47,48,49,50,51,52,53,54,63,64,68,77,86,97,102,103,104,105,106,107,108,109,110,111,112,113,114,118,121,135,160,162,166,168,170,171,175,184,187,189,194,196,207,213,214,217,221,222,223,224,226,228,231,234,235,236,238,240,241,242,249,252,253,],[12,12,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,12,12,61,12,12,61,12,12,12,12,12,12,61,12,12,12,12,12,12,12,12,12,12,12,61,12,12,12,12,12,]),'call_function':([0,2,27,28,29,32,47,48,49,50,51,52,53,54,63,64,68,77,86,97,102,103,104,105,106,107,108,109,110,111,112,113,114,118,121,135,160,162,166,168,170,171,175,184,187,189,194,196,207,213,214,217,221,222,223,224,226,228,231,234,235,236,238,240,241,242,249,252,253,],[13,13,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,13,13,62,13,13,62,13,13,13,13,13,13,62,13,13,13,13,13,13,13,13,13,13,13,62,13,13,13,13,13,]),'break':([0,2,168,170,175,184,189,194,196,207,213,214,221,222,223,224,226,228,231,234,235,236,238,241,242,249,252,253,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'continue':([0,2,168,170,175,184,189,194,196,207,213,214,221,222,223,224,226,228,231,234,235,236,238,241,242,249,252,253,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'return':([0,2,168,170,175,184,189,194,196,207,213,214,221,222,223,224,226,228,231,234,235,236,238,241,242,249,252,253,],[16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'print':([0,2,168,170,175,184,189,194,196,207,213,214,221,222,223,224,226,228,231,234,235,236,238,241,242,249,252,253,],[17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'symbol_type':([0,2,55,168,170,175,184,189,194,196,207,213,214,221,222,223,224,226,228,231,234,235,236,238,241,242,249,252,253,],[18,18,98,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'access_array':([0,2,27,28,29,32,47,48,49,50,51,52,53,54,63,64,68,77,86,97,102,103,104,105,106,107,108,109,110,111,112,113,114,118,121,135,160,162,166,168,170,171,175,184,187,189,194,196,207,213,214,217,221,222,223,224,226,228,231,234,235,236,238,240,241,242,249,252,253,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'value':([0,2,27,28,29,32,47,48,49,50,51,52,53,54,63,64,68,77,86,97,102,103,104,105,106,107,108,109,110,111,112,113,114,118,121,135,160,162,166,168,170,171,175,184,187,189,194,196,207,213,214,217,221,222,223,224,226,228,231,234,235,236,238,240,241,242,249,252,253,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'expression':([27,28,29,32,47,48,49,50,51,52,53,54,63,64,68,77,86,97,102,103,104,105,106,107,108,109,110,111,112,113,114,118,121,135,160,162,166,171,187,217,240,],[57,70,71,74,87,88,89,90,93,94,95,96,115,116,117,122,129,139,145,146,147,148,149,150,151,152,153,154,155,156,157,159,117,167,93,181,183,190,206,93,247,]),'expression_unary':([27,28,29,32,47,48,49,50,51,52,53,54,63,64,68,77,86,97,102,103,104,105,106,107,108,109,110,111,112,113,114,118,121,135,160,162,166,171,187,217,240,],[58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,]),'expression_binary':([27,28,29,32,47,48,49,50,51,52,53,54,63,64,68,77,86,97,102,103,104,105,106,107,108,109,110,111,112,113,114,118,121,135,160,162,166,171,187,217,240,],[59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,]),'expression_group':([27,28,29,32,47,48,49,50,51,52,53,54,63,64,68,77,86,97,102,103,104,105,106,107,108,109,110,111,112,113,114,118,121,135,160,162,166,171,187,217,240,],[60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,]),'arithmetic':([27,28,29,32,47,48,49,50,51,52,53,54,63,64,68,77,86,97,102,103,104,105,106,107,108,109,110,111,112,113,114,118,121,135,160,162,166,171,187,217,240,],[65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,]),'relational':([27,28,29,32,47,48,49,50,51,52,53,54,63,64,68,77,86,97,102,103,104,105,106,107,108,109,110,111,112,113,114,118,121,135,160,162,166,171,187,217,240,],[66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,]),'logical':([27,28,29,32,47,48,49,50,51,52,53,54,63,64,68,77,86,97,102,103,104,105,106,107,108,109,110,111,112,113,114,118,121,135,160,162,166,171,187,217,240,],[67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,]),'name_method':([44,],[77,]),'expression_list':([51,160,217,],[91,180,229,]),'data_type':([85,173,174,176,197,],[123,192,193,195,215,]),'params':([99,],[143,]),'param':([99,178,],[144,198,]),'cases':([169,],[185,]),'case':([169,185,],[186,205,]),'else_if_list':([203,],[219,]),'else_if':([203,219,],[220,233,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> start","S'",1,None,None,None),
  ('start -> block','start',1,'p_start','grammar.py',251),
  ('block -> block instruction','block',2,'p_block','grammar.py',255),
  ('block -> instruction','block',1,'p_block','grammar.py',256),
  ('instruction -> declaration','instruction',1,'p_instruction','grammar.py',264),
  ('instruction -> declaration_array','instruction',1,'p_instruction','grammar.py',265),
  ('instruction -> assignment','instruction',1,'p_instruction','grammar.py',266),
  ('instruction -> if','instruction',1,'p_instruction','grammar.py',267),
  ('instruction -> switch','instruction',1,'p_instruction','grammar.py',268),
  ('instruction -> while','instruction',1,'p_instruction','grammar.py',269),
  ('instruction -> for','instruction',1,'p_instruction','grammar.py',270),
  ('instruction -> function','instruction',1,'p_instruction','grammar.py',271),
  ('instruction -> methods SEMICOLON','instruction',2,'p_instruction','grammar.py',272),
  ('instruction -> call_function SEMICOLON','instruction',2,'p_instruction','grammar.py',273),
  ('instruction -> break','instruction',1,'p_instruction','grammar.py',274),
  ('instruction -> continue','instruction',1,'p_instruction','grammar.py',275),
  ('instruction -> return','instruction',1,'p_instruction','grammar.py',276),
  ('instruction -> print','instruction',1,'p_instruction','grammar.py',277),
  ('declaration -> symbol_type ID COLON data_type EQUAL expression SEMICOLON','declaration',7,'p_declaration_type_value','grammar.py',281),
  ('declaration -> symbol_type ID COLON data_type SEMICOLON','declaration',5,'p_declaration_type','grammar.py',286),
  ('declaration -> symbol_type ID EQUAL expression SEMICOLON','declaration',5,'p_declaration_value','grammar.py',291),
  ('assignment -> ID EQUAL expression SEMICOLON','assignment',4,'p_assignment','grammar.py',296),
  ('assignment -> ID ADITION expression SEMICOLON','assignment',4,'p_assignment','grammar.py',297),
  ('assignment -> ID SUBTRACTION expression SEMICOLON','assignment',4,'p_assignment','grammar.py',298),
  ('if -> IF LEFT_PARENTHESIS expression RIGHT_PARENTHESIS LEFT_CURLY_BRACKET block RIGHT_CURLY_BRACKET','if',7,'p_if','grammar.py',303),
  ('if -> IF LEFT_PARENTHESIS expression RIGHT_PARENTHESIS LEFT_CURLY_BRACKET block RIGHT_CURLY_BRACKET ELSE LEFT_CURLY_BRACKET block RIGHT_CURLY_BRACKET','if',11,'p_if','grammar.py',304),
  ('if -> IF LEFT_PARENTHESIS expression RIGHT_PARENTHESIS LEFT_CURLY_BRACKET block RIGHT_CURLY_BRACKET else_if_list','if',8,'p_if','grammar.py',305),
  ('if -> IF LEFT_PARENTHESIS expression RIGHT_PARENTHESIS LEFT_CURLY_BRACKET block RIGHT_CURLY_BRACKET else_if_list ELSE LEFT_CURLY_BRACKET block RIGHT_CURLY_BRACKET','if',12,'p_if','grammar.py',306),
  ('else_if_list -> else_if_list else_if','else_if_list',2,'p_else_if_list','grammar.py',321),
  ('else_if_list -> else_if','else_if_list',1,'p_else_if_list','grammar.py',322),
  ('else_if -> ELSE IF LEFT_PARENTHESIS expression RIGHT_PARENTHESIS LEFT_CURLY_BRACKET block RIGHT_CURLY_BRACKET','else_if',8,'p_else_if','grammar.py',330),
  ('switch -> SWITCH LEFT_PARENTHESIS expression RIGHT_PARENTHESIS LEFT_CURLY_BRACKET cases RIGHT_CURLY_BRACKET','switch',7,'p_switch','grammar.py',335),
  ('cases -> cases case','cases',2,'p_cases','grammar.py',340),
  ('cases -> case','cases',1,'p_cases','grammar.py',341),
  ('case -> CASE expression COLON block','case',4,'p_case','grammar.py',349),
  ('case -> DEFAULT COLON block','case',3,'p_case','grammar.py',350),
  ('while -> WHILE LEFT_PARENTHESIS expression RIGHT_PARENTHESIS LEFT_CURLY_BRACKET block RIGHT_CURLY_BRACKET','while',7,'p_while','grammar.py',358),
  ('for -> FOR LEFT_PARENTHESIS declaration expression SEMICOLON expression RIGHT_PARENTHESIS LEFT_CURLY_BRACKET block RIGHT_CURLY_BRACKET','for',10,'p_for','grammar.py',363),
  ('for -> FOR LEFT_PARENTHESIS symbol_type ID OF ID RIGHT_PARENTHESIS LEFT_CURLY_BRACKET block RIGHT_CURLY_BRACKET','for',10,'p_for_array','grammar.py',368),
  ('break -> BREAK SEMICOLON','break',2,'p_break','grammar.py',373),
  ('continue -> CONTINUE SEMICOLON','continue',2,'p_continue','grammar.py',378),
  ('function -> FUNCTION ID LEFT_PARENTHESIS RIGHT_PARENTHESIS LEFT_CURLY_BRACKET block RIGHT_CURLY_BRACKET','function',7,'p_function','grammar.py',383),
  ('function -> FUNCTION ID LEFT_PARENTHESIS RIGHT_PARENTHESIS COLON data_type LEFT_CURLY_BRACKET block RIGHT_CURLY_BRACKET','function',9,'p_function','grammar.py',384),
  ('function -> FUNCTION ID LEFT_PARENTHESIS params RIGHT_PARENTHESIS LEFT_CURLY_BRACKET block RIGHT_CURLY_BRACKET','function',8,'p_function','grammar.py',385),
  ('function -> FUNCTION ID LEFT_PARENTHESIS params RIGHT_PARENTHESIS COLON data_type LEFT_CURLY_BRACKET block RIGHT_CURLY_BRACKET','function',10,'p_function','grammar.py',386),
  ('params -> params COMMA param','params',3,'p_params','grammar.py',401),
  ('params -> param','params',1,'p_params','grammar.py',402),
  ('param -> ID COLON data_type','param',3,'p_param','grammar.py',411),
  ('param -> ID COLON data_type LEFT_SQ_BRACKET RIGHT_SQ_BRACKET','param',5,'p_param','grammar.py',412),
  ('return -> RETURN expression SEMICOLON','return',3,'p_return','grammar.py',421),
  ('return -> RETURN SEMICOLON','return',2,'p_return','grammar.py',422),
  ('call_function -> ID LEFT_PARENTHESIS expression_list RIGHT_PARENTHESIS','call_function',4,'p_call_function','grammar.py',430),
  ('call_function -> ID LEFT_PARENTHESIS RIGHT_PARENTHESIS','call_function',3,'p_call_function','grammar.py',431),
  ('methods -> methods PERIOD name_method LEFT_PARENTHESIS RIGHT_PARENTHESIS','methods',5,'p_embedded_functions','grammar.py',439),
  ('methods -> methods PERIOD name_method expression','methods',4,'p_embedded_functions','grammar.py',440),
  ('methods -> methods PERIOD name_method','methods',3,'p_embedded_functions','grammar.py',441),
  ('methods -> access_array','methods',1,'p_embedded_functions','grammar.py',442),
  ('methods -> value','methods',1,'p_embedded_functions','grammar.py',443),
  ('name_method -> TOSTRING','name_method',1,'p_name_method','grammar.py',466),
  ('name_method -> TOLOWERCASE','name_method',1,'p_name_method','grammar.py',467),
  ('name_method -> TOUPPERCASE','name_method',1,'p_name_method','grammar.py',468),
  ('name_method -> PUSH','name_method',1,'p_name_method','grammar.py',469),
  ('name_method -> POP','name_method',1,'p_name_method','grammar.py',470),
  ('name_method -> INDEXOF','name_method',1,'p_name_method','grammar.py',471),
  ('name_method -> LENGTH','name_method',1,'p_name_method','grammar.py',472),
  ('print -> CONSOLE PERIOD LOG LEFT_PARENTHESIS expression_list RIGHT_PARENTHESIS SEMICOLON','print',7,'p_print','grammar.py',476),
  ('methods -> PARSEINT expression','methods',2,'p_parseint','grammar.py',481),
  ('methods -> PARSEFLOAT expression','methods',2,'p_parsefloat','grammar.py',486),
  ('methods -> TYPEOF expression','methods',2,'p_typeof','grammar.py',491),
  ('declaration_array -> symbol_type ID COLON data_type LEFT_SQ_BRACKET RIGHT_SQ_BRACKET EQUAL LEFT_SQ_BRACKET expression_list RIGHT_SQ_BRACKET SEMICOLON','declaration_array',11,'p_declaration_array','grammar.py',496),
  ('assignment -> ID LEFT_SQ_BRACKET expression RIGHT_SQ_BRACKET EQUAL expression SEMICOLON','assignment',7,'p_assignment_array','grammar.py',502),
  ('access_array -> ID LEFT_SQ_BRACKET expression RIGHT_SQ_BRACKET','access_array',4,'p_access_array','grammar.py',508),
  ('expression_list -> expression_list COMMA expression','expression_list',3,'p_expression_list','grammar.py',513),
  ('expression_list -> expression','expression_list',1,'p_expression_list','grammar.py',514),
  ('expression -> expression_unary','expression',1,'p_expression','grammar.py',523),
  ('expression -> expression_binary','expression',1,'p_expression','grammar.py',524),
  ('expression -> expression_group','expression',1,'p_expression','grammar.py',525),
  ('expression -> methods','expression',1,'p_expression','grammar.py',526),
  ('expression -> call_function','expression',1,'p_expression','grammar.py',527),
  ('expression_unary -> MINUS expression','expression_unary',2,'p_expression_unary','grammar.py',531),
  ('expression_unary -> NOT expression','expression_unary',2,'p_expression_unary','grammar.py',532),
  ('expression_unary -> expression INCREASE','expression_unary',2,'p_expression_unary','grammar.py',533),
  ('expression_unary -> expression DECREASE','expression_unary',2,'p_expression_unary','grammar.py',534),
  ('expression_binary -> arithmetic','expression_binary',1,'p_expression_binary','grammar.py',546),
  ('expression_binary -> relational','expression_binary',1,'p_expression_binary','grammar.py',547),
  ('expression_binary -> logical','expression_binary',1,'p_expression_binary','grammar.py',548),
  ('arithmetic -> expression PLUS expression','arithmetic',3,'p_arithmetic','grammar.py',552),
  ('arithmetic -> expression MINUS expression','arithmetic',3,'p_arithmetic','grammar.py',553),
  ('arithmetic -> expression TIMES expression','arithmetic',3,'p_arithmetic','grammar.py',554),
  ('arithmetic -> expression DIVIDE expression','arithmetic',3,'p_arithmetic','grammar.py',555),
  ('arithmetic -> expression MODULUS expression','arithmetic',3,'p_arithmetic','grammar.py',556),
  ('relational -> expression LESS expression','relational',3,'p_relational','grammar.py',561),
  ('relational -> expression GREATER expression','relational',3,'p_relational','grammar.py',562),
  ('relational -> expression EQUAL_TO expression','relational',3,'p_relational','grammar.py',563),
  ('relational -> expression NOT_EQUAL_TO expression','relational',3,'p_relational','grammar.py',564),
  ('relational -> expression LESS_EQUAL expression','relational',3,'p_relational','grammar.py',565),
  ('relational -> expression GREATER_EQUAL expression','relational',3,'p_relational','grammar.py',566),
  ('logical -> expression AND expression','logical',3,'p_logical','grammar.py',571),
  ('logical -> expression OR expression','logical',3,'p_logical','grammar.py',572),
  ('expression_group -> LEFT_PARENTHESIS expression RIGHT_PARENTHESIS','expression_group',3,'p_expression_group','grammar.py',577),
  ('symbol_type -> VAR','symbol_type',1,'p_data_symbol','grammar.py',581),
  ('symbol_type -> CONST','symbol_type',1,'p_data_symbol','grammar.py',582),
  ('data_type -> NUMBER','data_type',1,'p_data_type','grammar.py',586),
  ('data_type -> FLOAT','data_type',1,'p_data_type','grammar.py',587),
  ('data_type -> STRING','data_type',1,'p_data_type','grammar.py',588),
  ('data_type -> CHAR','data_type',1,'p_data_type','grammar.py',589),
  ('data_type -> BOOLEAN','data_type',1,'p_data_type','grammar.py',590),
  ('value -> INTEGER','value',1,'p_value','grammar.py',603),
  ('value -> DECIMAL','value',1,'p_value','grammar.py',604),
  ('value -> TEXT','value',1,'p_value','grammar.py',605),
  ('value -> CHARACTER','value',1,'p_value','grammar.py',606),
  ('value -> BOOL','value',1,'p_value','grammar.py',607),
  ('value -> NULL','value',1,'p_value','grammar.py',608),
  ('value -> ID','value',1,'p_value_id','grammar.py',612),
]
