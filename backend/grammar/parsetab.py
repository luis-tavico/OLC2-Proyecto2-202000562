
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftORleftANDleftEQUAL_TONOT_EQUAL_TOleftLESSLESS_EQUALGREATER_EQUALGREATERleftPLUSMINUSleftDIVIDEMODULUSTIMESrightNOTUMINUSleftLEFT_PARENTHESISRIGHT_PARENTHESISLEFT_SQ_BRACKETRIGHT_SQ_BRACKETADITION AND BOOL BOOLEAN BREAK CASE CHAR CHARACTER COLON COMMA CONSOLE CONST CONTINUE DECIMAL DECREASE DEFAULT DIVIDE ELSE EQUAL EQUAL_TO FLOAT FOR FUNCTION GREATER GREATER_EQUAL ID IF INCREASE INDEXOF INTEGER JOIN LEFT_CURLY_BRACKET LEFT_PARENTHESIS LEFT_SQ_BRACKET LENGTH LESS LESS_EQUAL LOG MINUS MODULUS NOT NOT_EQUAL_TO NULL NUMBER OBJECT OF OR PARSEFLOAT PARSEINT PERIOD PLUS POP PUSH RETURN RIGHT_CURLY_BRACKET RIGHT_PARENTHESIS RIGHT_SQ_BRACKET SEMICOLON STRING SUBTRACTION SWITCH TERNARY TEXT TIMES TOLOWERCASE TOSTRING TOUPPERCASE TYPEOF VAR WHILEstart : blockblock : block instruction\n             | instruction instruction : declaration\n                   | declaration_array\n                   | assignment\n                   | if\n                   | switch\n                   | while\n                   | for\n                   | function\n                   | methods SEMICOLON\n                   | call_function SEMICOLON\n                   | break\n                   | continue\n                   | return\n                   | printdeclaration : data_symbol ID COLON data_type EQUAL expression SEMICOLONdeclaration : data_symbol ID COLON data_type SEMICOLONdeclaration : data_symbol ID EQUAL expression SEMICOLONassignment : ID EQUAL expression SEMICOLON\n                  | ID ADITION expression SEMICOLON\n                  | ID SUBTRACTION expression SEMICOLONexpression : expression TERNARY expression COLON expressionif : IF LEFT_PARENTHESIS expression RIGHT_PARENTHESIS LEFT_CURLY_BRACKET block RIGHT_CURLY_BRACKET\n          | IF LEFT_PARENTHESIS expression RIGHT_PARENTHESIS LEFT_CURLY_BRACKET block RIGHT_CURLY_BRACKET ELSE LEFT_CURLY_BRACKET block RIGHT_CURLY_BRACKET\n          | IF LEFT_PARENTHESIS expression RIGHT_PARENTHESIS LEFT_CURLY_BRACKET block RIGHT_CURLY_BRACKET else_if_list\n          | IF LEFT_PARENTHESIS expression RIGHT_PARENTHESIS LEFT_CURLY_BRACKET block RIGHT_CURLY_BRACKET else_if_list ELSE LEFT_CURLY_BRACKET block RIGHT_CURLY_BRACKETelse_if_list : else_if_list else_if\n                    | else_ifelse_if : ELSE IF LEFT_PARENTHESIS expression RIGHT_PARENTHESIS LEFT_CURLY_BRACKET block RIGHT_CURLY_BRACKETswitch : SWITCH LEFT_PARENTHESIS expression RIGHT_PARENTHESIS LEFT_CURLY_BRACKET cases RIGHT_CURLY_BRACKETcases : cases case\n             | casecase : CASE expression COLON block\n            | DEFAULT COLON blockwhile : WHILE LEFT_PARENTHESIS expression RIGHT_PARENTHESIS LEFT_CURLY_BRACKET block RIGHT_CURLY_BRACKETfor : FOR LEFT_PARENTHESIS declaration expression SEMICOLON expression RIGHT_PARENTHESIS LEFT_CURLY_BRACKET block RIGHT_CURLY_BRACKETfor : FOR LEFT_PARENTHESIS data_symbol ID OF ID RIGHT_PARENTHESIS LEFT_CURLY_BRACKET block RIGHT_CURLY_BRACKETbreak : BREAK SEMICOLONcontinue : CONTINUE SEMICOLONfunction : FUNCTION ID LEFT_PARENTHESIS RIGHT_PARENTHESIS LEFT_CURLY_BRACKET block RIGHT_CURLY_BRACKET\n                | FUNCTION ID LEFT_PARENTHESIS RIGHT_PARENTHESIS COLON data_type LEFT_CURLY_BRACKET block RIGHT_CURLY_BRACKET\n                | FUNCTION ID LEFT_PARENTHESIS params RIGHT_PARENTHESIS LEFT_CURLY_BRACKET block RIGHT_CURLY_BRACKET\n                | FUNCTION ID LEFT_PARENTHESIS params RIGHT_PARENTHESIS COLON data_type LEFT_CURLY_BRACKET block RIGHT_CURLY_BRACKETparams : params COMMA param\n              | paramparam : ID COLON data_type\n             | ID COLON data_type LEFT_SQ_BRACKET RIGHT_SQ_BRACKETreturn : RETURN expression SEMICOLON\n              | RETURN SEMICOLONcall_function : ID LEFT_PARENTHESIS expression_list RIGHT_PARENTHESIS\n                     | ID LEFT_PARENTHESIS RIGHT_PARENTHESISmethods : methods PERIOD name_method LEFT_PARENTHESIS RIGHT_PARENTHESIS\n               | methods PERIOD name_method expression\n               | methods PERIOD name_method\n               | access_array\n               | valuename_method : TOSTRING\n                   | TOLOWERCASE\n                   | TOUPPERCASE\n                   | PUSH\n                   | POP\n                   | INDEXOF\n                   | JOIN\n                   | LENGTHprint : CONSOLE PERIOD LOG LEFT_PARENTHESIS expression_list RIGHT_PARENTHESIS SEMICOLONmethods : PARSEINT expressionmethods : PARSEFLOAT expressionmethods : TYPEOF expressiondeclaration_array : data_symbol ID COLON data_type dimension_array EQUAL expression SEMICOLONdimension_array : dimension_array LEFT_SQ_BRACKET RIGHT_SQ_BRACKET\n                       | LEFT_SQ_BRACKET RIGHT_SQ_BRACKETexpression : LEFT_SQ_BRACKET expression_list RIGHT_SQ_BRACKETassignment : ID indexes_array EQUAL expression SEMICOLONaccess_array : ID indexes_arrayindexes_array : indexes_array LEFT_SQ_BRACKET expression RIGHT_SQ_BRACKET\n                     | LEFT_SQ_BRACKET expression RIGHT_SQ_BRACKETexpression_list : expression_list COMMA expression\n                       | expression expression : expression_unary\n                  | expression_binary\n                  | expression_group\n                  | methods\n                  | call_functionexpression_unary : MINUS expression %prec UMINUS\n                        | NOT expression\n                        | expression INCREASE\n                        | expression DECREASEexpression_binary : arithmetic\n                         | relational\n                         | logicalarithmetic : expression PLUS expression\n                  | expression MINUS expression\n                  | expression TIMES expression\n                  | expression DIVIDE expression\n                  | expression MODULUS expressionrelational : expression LESS expression\n                  | expression GREATER expression\n                  | expression EQUAL_TO expression\n                  | expression NOT_EQUAL_TO expression\n                  | expression LESS_EQUAL expression\n                  | expression GREATER_EQUAL expressionlogical : expression AND expression\n               | expression OR expressionexpression_group : LEFT_PARENTHESIS expression RIGHT_PARENTHESISdata_symbol : VAR\n                   | CONSTdata_type : NUMBER\n                 | FLOAT\n                 | STRING\n                 | CHAR\n                 | BOOLEAN\n                 | IDvalue : INTEGER\n             | DECIMAL\n             | TEXT\n             | CHARACTER\n             | BOOL\n             | NULLvalue : ID'
    
_lr_action_items = {'ID':([0,2,3,4,5,6,7,8,9,10,11,14,15,16,17,18,24,27,28,29,32,34,35,42,43,45,47,48,49,51,52,53,54,55,59,65,66,70,74,75,77,79,80,81,82,83,84,85,86,87,88,89,93,94,102,103,104,105,108,109,110,111,112,113,114,115,116,117,118,119,120,126,128,138,139,140,144,171,173,174,177,178,181,183,184,185,186,187,188,189,191,192,195,198,201,203,208,210,211,215,218,219,222,223,227,228,229,231,232,234,235,236,237,238,239,241,242,243,245,247,248,249,250,251,252,253,254,255,256,257,258,260,261,263,264,265,266,],[19,19,-3,-4,-5,-6,-7,-8,-9,-10,-11,-14,-15,-16,-17,46,57,71,71,71,71,-107,-108,-2,-12,-13,71,71,71,71,71,71,71,71,71,71,71,71,-40,-41,-51,71,-59,-60,-61,-62,-63,-64,-65,-66,130,71,71,71,71,150,151,71,71,71,71,71,71,71,71,71,71,71,71,71,71,-50,71,-21,-22,-23,71,71,71,-19,-20,-75,19,19,71,205,130,130,19,130,151,71,71,19,71,19,19,19,130,-18,-25,-32,19,-37,-42,19,19,-67,-71,-27,-30,19,19,19,19,19,-44,19,19,-29,19,19,19,-43,19,71,19,19,-38,-39,-45,-26,19,-28,19,19,-31,]),'IF':([0,2,3,4,5,6,7,8,9,10,11,14,15,16,17,42,43,45,74,75,77,126,138,139,140,174,177,178,181,183,188,198,203,208,210,215,218,219,222,223,227,228,229,231,232,233,234,235,236,237,238,239,241,242,243,245,246,247,248,249,250,251,252,254,255,256,257,258,260,261,263,264,265,266,],[20,20,-3,-4,-5,-6,-7,-8,-9,-10,-11,-14,-15,-16,-17,-2,-12,-13,-40,-41,-51,-50,-21,-22,-23,-19,-20,-75,20,20,20,20,20,20,20,-18,-25,-32,20,-37,-42,20,20,-67,-71,244,-27,-30,20,20,20,20,20,-44,20,20,244,-29,20,20,20,-43,20,20,20,-38,-39,-45,-26,20,-28,20,20,-31,]),'SWITCH':([0,2,3,4,5,6,7,8,9,10,11,14,15,16,17,42,43,45,74,75,77,126,138,139,140,174,177,178,181,183,188,198,203,208,210,215,218,219,222,223,227,228,229,231,232,234,235,236,237,238,239,241,242,243,245,247,248,249,250,251,252,254,255,256,257,258,260,261,263,264,265,266,],[21,21,-3,-4,-5,-6,-7,-8,-9,-10,-11,-14,-15,-16,-17,-2,-12,-13,-40,-41,-51,-50,-21,-22,-23,-19,-20,-75,21,21,21,21,21,21,21,-18,-25,-32,21,-37,-42,21,21,-67,-71,-27,-30,21,21,21,21,21,-44,21,21,-29,21,21,21,-43,21,21,21,-38,-39,-45,-26,21,-28,21,21,-31,]),'WHILE':([0,2,3,4,5,6,7,8,9,10,11,14,15,16,17,42,43,45,74,75,77,126,138,139,140,174,177,178,181,183,188,198,203,208,210,215,218,219,222,223,227,228,229,231,232,234,235,236,237,238,239,241,242,243,245,247,248,249,250,251,252,254,255,256,257,258,260,261,263,264,265,266,],[22,22,-3,-4,-5,-6,-7,-8,-9,-10,-11,-14,-15,-16,-17,-2,-12,-13,-40,-41,-51,-50,-21,-22,-23,-19,-20,-75,22,22,22,22,22,22,22,-18,-25,-32,22,-37,-42,22,22,-67,-71,-27,-30,22,22,22,22,22,-44,22,22,-29,22,22,22,-43,22,22,22,-38,-39,-45,-26,22,-28,22,22,-31,]),'FOR':([0,2,3,4,5,6,7,8,9,10,11,14,15,16,17,42,43,45,74,75,77,126,138,139,140,174,177,178,181,183,188,198,203,208,210,215,218,219,222,223,227,228,229,231,232,234,235,236,237,238,239,241,242,243,245,247,248,249,250,251,252,254,255,256,257,258,260,261,263,264,265,266,],[23,23,-3,-4,-5,-6,-7,-8,-9,-10,-11,-14,-15,-16,-17,-2,-12,-13,-40,-41,-51,-50,-21,-22,-23,-19,-20,-75,23,23,23,23,23,23,23,-18,-25,-32,23,-37,-42,23,23,-67,-71,-27,-30,23,23,23,23,23,-44,23,23,-29,23,23,23,-43,23,23,23,-38,-39,-45,-26,23,-28,23,23,-31,]),'FUNCTION':([0,2,3,4,5,6,7,8,9,10,11,14,15,16,17,42,43,45,74,75,77,126,138,139,140,174,177,178,181,183,188,198,203,208,210,215,218,219,222,223,227,228,229,231,232,234,235,236,237,238,239,241,242,243,245,247,248,249,250,251,252,254,255,256,257,258,260,261,263,264,265,266,],[24,24,-3,-4,-5,-6,-7,-8,-9,-10,-11,-14,-15,-16,-17,-2,-12,-13,-40,-41,-51,-50,-21,-22,-23,-19,-20,-75,24,24,24,24,24,24,24,-18,-25,-32,24,-37,-42,24,24,-67,-71,-27,-30,24,24,24,24,24,-44,24,24,-29,24,24,24,-43,24,24,24,-38,-39,-45,-26,24,-28,24,24,-31,]),'PARSEINT':([0,2,3,4,5,6,7,8,9,10,11,14,15,16,17,27,28,29,32,42,43,45,47,48,49,51,52,53,54,55,59,65,66,70,74,75,77,79,80,81,82,83,84,85,86,87,89,93,94,102,105,108,109,110,111,112,113,114,115,116,117,118,119,120,126,128,138,139,140,144,171,173,174,177,178,181,183,184,188,192,195,198,201,203,208,210,215,218,219,222,223,227,228,229,231,232,234,235,236,237,238,239,241,242,243,245,247,248,249,250,251,252,253,254,255,256,257,258,260,261,263,264,265,266,],[27,27,-3,-4,-5,-6,-7,-8,-9,-10,-11,-14,-15,-16,-17,27,27,27,27,-2,-12,-13,27,27,27,27,27,27,27,27,27,27,27,27,-40,-41,-51,27,-59,-60,-61,-62,-63,-64,-65,-66,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,-50,27,-21,-22,-23,27,27,27,-19,-20,-75,27,27,27,27,27,27,27,27,27,27,27,-18,-25,-32,27,-37,-42,27,27,-67,-71,-27,-30,27,27,27,27,27,-44,27,27,-29,27,27,27,-43,27,27,27,27,-38,-39,-45,-26,27,-28,27,27,-31,]),'PARSEFLOAT':([0,2,3,4,5,6,7,8,9,10,11,14,15,16,17,27,28,29,32,42,43,45,47,48,49,51,52,53,54,55,59,65,66,70,74,75,77,79,80,81,82,83,84,85,86,87,89,93,94,102,105,108,109,110,111,112,113,114,115,116,117,118,119,120,126,128,138,139,140,144,171,173,174,177,178,181,183,184,188,192,195,198,201,203,208,210,215,218,219,222,223,227,228,229,231,232,234,235,236,237,238,239,241,242,243,245,247,248,249,250,251,252,253,254,255,256,257,258,260,261,263,264,265,266,],[28,28,-3,-4,-5,-6,-7,-8,-9,-10,-11,-14,-15,-16,-17,28,28,28,28,-2,-12,-13,28,28,28,28,28,28,28,28,28,28,28,28,-40,-41,-51,28,-59,-60,-61,-62,-63,-64,-65,-66,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,-50,28,-21,-22,-23,28,28,28,-19,-20,-75,28,28,28,28,28,28,28,28,28,28,28,-18,-25,-32,28,-37,-42,28,28,-67,-71,-27,-30,28,28,28,28,28,-44,28,28,-29,28,28,28,-43,28,28,28,28,-38,-39,-45,-26,28,-28,28,28,-31,]),'TYPEOF':([0,2,3,4,5,6,7,8,9,10,11,14,15,16,17,27,28,29,32,42,43,45,47,48,49,51,52,53,54,55,59,65,66,70,74,75,77,79,80,81,82,83,84,85,86,87,89,93,94,102,105,108,109,110,111,112,113,114,115,116,117,118,119,120,126,128,138,139,140,144,171,173,174,177,178,181,183,184,188,192,195,198,201,203,208,210,215,218,219,222,223,227,228,229,231,232,234,235,236,237,238,239,241,242,243,245,247,248,249,250,251,252,253,254,255,256,257,258,260,261,263,264,265,266,],[29,29,-3,-4,-5,-6,-7,-8,-9,-10,-11,-14,-15,-16,-17,29,29,29,29,-2,-12,-13,29,29,29,29,29,29,29,29,29,29,29,29,-40,-41,-51,29,-59,-60,-61,-62,-63,-64,-65,-66,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,-50,29,-21,-22,-23,29,29,29,-19,-20,-75,29,29,29,29,29,29,29,29,29,29,29,-18,-25,-32,29,-37,-42,29,29,-67,-71,-27,-30,29,29,29,29,29,-44,29,29,-29,29,29,29,-43,29,29,29,29,-38,-39,-45,-26,29,-28,29,29,-31,]),'BREAK':([0,2,3,4,5,6,7,8,9,10,11,14,15,16,17,42,43,45,74,75,77,126,138,139,140,174,177,178,181,183,188,198,203,208,210,215,218,219,222,223,227,228,229,231,232,234,235,236,237,238,239,241,242,243,245,247,248,249,250,251,252,254,255,256,257,258,260,261,263,264,265,266,],[30,30,-3,-4,-5,-6,-7,-8,-9,-10,-11,-14,-15,-16,-17,-2,-12,-13,-40,-41,-51,-50,-21,-22,-23,-19,-20,-75,30,30,30,30,30,30,30,-18,-25,-32,30,-37,-42,30,30,-67,-71,-27,-30,30,30,30,30,30,-44,30,30,-29,30,30,30,-43,30,30,30,-38,-39,-45,-26,30,-28,30,30,-31,]),'CONTINUE':([0,2,3,4,5,6,7,8,9,10,11,14,15,16,17,42,43,45,74,75,77,126,138,139,140,174,177,178,181,183,188,198,203,208,210,215,218,219,222,223,227,228,229,231,232,234,235,236,237,238,239,241,242,243,245,247,248,249,250,251,252,254,255,256,257,258,260,261,263,264,265,266,],[31,31,-3,-4,-5,-6,-7,-8,-9,-10,-11,-14,-15,-16,-17,-2,-12,-13,-40,-41,-51,-50,-21,-22,-23,-19,-20,-75,31,31,31,31,31,31,31,-18,-25,-32,31,-37,-42,31,31,-67,-71,-27,-30,31,31,31,31,31,-44,31,31,-29,31,31,31,-43,31,31,31,-38,-39,-45,-26,31,-28,31,31,-31,]),'RETURN':([0,2,3,4,5,6,7,8,9,10,11,14,15,16,17,42,43,45,74,75,77,126,138,139,140,174,177,178,181,183,188,198,203,208,210,215,218,219,222,223,227,228,229,231,232,234,235,236,237,238,239,241,242,243,245,247,248,249,250,251,252,254,255,256,257,258,260,261,263,264,265,266,],[32,32,-3,-4,-5,-6,-7,-8,-9,-10,-11,-14,-15,-16,-17,-2,-12,-13,-40,-41,-51,-50,-21,-22,-23,-19,-20,-75,32,32,32,32,32,32,32,-18,-25,-32,32,-37,-42,32,32,-67,-71,-27,-30,32,32,32,32,32,-44,32,32,-29,32,32,32,-43,32,32,32,-38,-39,-45,-26,32,-28,32,32,-31,]),'CONSOLE':([0,2,3,4,5,6,7,8,9,10,11,14,15,16,17,42,43,45,74,75,77,126,138,139,140,174,177,178,181,183,188,198,203,208,210,215,218,219,222,223,227,228,229,231,232,234,235,236,237,238,239,241,242,243,245,247,248,249,250,251,252,254,255,256,257,258,260,261,263,264,265,266,],[33,33,-3,-4,-5,-6,-7,-8,-9,-10,-11,-14,-15,-16,-17,-2,-12,-13,-40,-41,-51,-50,-21,-22,-23,-19,-20,-75,33,33,33,33,33,33,33,-18,-25,-32,33,-37,-42,33,33,-67,-71,-27,-30,33,33,33,33,33,-44,33,33,-29,33,33,33,-43,33,33,33,-38,-39,-45,-26,33,-28,33,33,-31,]),'VAR':([0,2,3,4,5,6,7,8,9,10,11,14,15,16,17,42,43,45,56,74,75,77,126,138,139,140,174,177,178,181,183,188,198,203,208,210,215,218,219,222,223,227,228,229,231,232,234,235,236,237,238,239,241,242,243,245,247,248,249,250,251,252,254,255,256,257,258,260,261,263,264,265,266,],[34,34,-3,-4,-5,-6,-7,-8,-9,-10,-11,-14,-15,-16,-17,-2,-12,-13,34,-40,-41,-51,-50,-21,-22,-23,-19,-20,-75,34,34,34,34,34,34,34,-18,-25,-32,34,-37,-42,34,34,-67,-71,-27,-30,34,34,34,34,34,-44,34,34,-29,34,34,34,-43,34,34,34,-38,-39,-45,-26,34,-28,34,34,-31,]),'CONST':([0,2,3,4,5,6,7,8,9,10,11,14,15,16,17,42,43,45,56,74,75,77,126,138,139,140,174,177,178,181,183,188,198,203,208,210,215,218,219,222,223,227,228,229,231,232,234,235,236,237,238,239,241,242,243,245,247,248,249,250,251,252,254,255,256,257,258,260,261,263,264,265,266,],[35,35,-3,-4,-5,-6,-7,-8,-9,-10,-11,-14,-15,-16,-17,-2,-12,-13,35,-40,-41,-51,-50,-21,-22,-23,-19,-20,-75,35,35,35,35,35,35,35,-18,-25,-32,35,-37,-42,35,35,-67,-71,-27,-30,35,35,35,35,35,-44,35,35,-29,35,35,35,-43,35,35,35,-38,-39,-45,-26,35,-28,35,35,-31,]),'INTEGER':([0,2,3,4,5,6,7,8,9,10,11,14,15,16,17,27,28,29,32,42,43,45,47,48,49,51,52,53,54,55,59,65,66,70,74,75,77,79,80,81,82,83,84,85,86,87,89,93,94,102,105,108,109,110,111,112,113,114,115,116,117,118,119,120,126,128,138,139,140,144,171,173,174,177,178,181,183,184,188,192,195,198,201,203,208,210,215,218,219,222,223,227,228,229,231,232,234,235,236,237,238,239,241,242,243,245,247,248,249,250,251,252,253,254,255,256,257,258,260,261,263,264,265,266,],[36,36,-3,-4,-5,-6,-7,-8,-9,-10,-11,-14,-15,-16,-17,36,36,36,36,-2,-12,-13,36,36,36,36,36,36,36,36,36,36,36,36,-40,-41,-51,36,-59,-60,-61,-62,-63,-64,-65,-66,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,-50,36,-21,-22,-23,36,36,36,-19,-20,-75,36,36,36,36,36,36,36,36,36,36,36,-18,-25,-32,36,-37,-42,36,36,-67,-71,-27,-30,36,36,36,36,36,-44,36,36,-29,36,36,36,-43,36,36,36,36,-38,-39,-45,-26,36,-28,36,36,-31,]),'DECIMAL':([0,2,3,4,5,6,7,8,9,10,11,14,15,16,17,27,28,29,32,42,43,45,47,48,49,51,52,53,54,55,59,65,66,70,74,75,77,79,80,81,82,83,84,85,86,87,89,93,94,102,105,108,109,110,111,112,113,114,115,116,117,118,119,120,126,128,138,139,140,144,171,173,174,177,178,181,183,184,188,192,195,198,201,203,208,210,215,218,219,222,223,227,228,229,231,232,234,235,236,237,238,239,241,242,243,245,247,248,249,250,251,252,253,254,255,256,257,258,260,261,263,264,265,266,],[37,37,-3,-4,-5,-6,-7,-8,-9,-10,-11,-14,-15,-16,-17,37,37,37,37,-2,-12,-13,37,37,37,37,37,37,37,37,37,37,37,37,-40,-41,-51,37,-59,-60,-61,-62,-63,-64,-65,-66,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,-50,37,-21,-22,-23,37,37,37,-19,-20,-75,37,37,37,37,37,37,37,37,37,37,37,-18,-25,-32,37,-37,-42,37,37,-67,-71,-27,-30,37,37,37,37,37,-44,37,37,-29,37,37,37,-43,37,37,37,37,-38,-39,-45,-26,37,-28,37,37,-31,]),'TEXT':([0,2,3,4,5,6,7,8,9,10,11,14,15,16,17,27,28,29,32,42,43,45,47,48,49,51,52,53,54,55,59,65,66,70,74,75,77,79,80,81,82,83,84,85,86,87,89,93,94,102,105,108,109,110,111,112,113,114,115,116,117,118,119,120,126,128,138,139,140,144,171,173,174,177,178,181,183,184,188,192,195,198,201,203,208,210,215,218,219,222,223,227,228,229,231,232,234,235,236,237,238,239,241,242,243,245,247,248,249,250,251,252,253,254,255,256,257,258,260,261,263,264,265,266,],[38,38,-3,-4,-5,-6,-7,-8,-9,-10,-11,-14,-15,-16,-17,38,38,38,38,-2,-12,-13,38,38,38,38,38,38,38,38,38,38,38,38,-40,-41,-51,38,-59,-60,-61,-62,-63,-64,-65,-66,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,-50,38,-21,-22,-23,38,38,38,-19,-20,-75,38,38,38,38,38,38,38,38,38,38,38,-18,-25,-32,38,-37,-42,38,38,-67,-71,-27,-30,38,38,38,38,38,-44,38,38,-29,38,38,38,-43,38,38,38,38,-38,-39,-45,-26,38,-28,38,38,-31,]),'CHARACTER':([0,2,3,4,5,6,7,8,9,10,11,14,15,16,17,27,28,29,32,42,43,45,47,48,49,51,52,53,54,55,59,65,66,70,74,75,77,79,80,81,82,83,84,85,86,87,89,93,94,102,105,108,109,110,111,112,113,114,115,116,117,118,119,120,126,128,138,139,140,144,171,173,174,177,178,181,183,184,188,192,195,198,201,203,208,210,215,218,219,222,223,227,228,229,231,232,234,235,236,237,238,239,241,242,243,245,247,248,249,250,251,252,253,254,255,256,257,258,260,261,263,264,265,266,],[39,39,-3,-4,-5,-6,-7,-8,-9,-10,-11,-14,-15,-16,-17,39,39,39,39,-2,-12,-13,39,39,39,39,39,39,39,39,39,39,39,39,-40,-41,-51,39,-59,-60,-61,-62,-63,-64,-65,-66,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,-50,39,-21,-22,-23,39,39,39,-19,-20,-75,39,39,39,39,39,39,39,39,39,39,39,-18,-25,-32,39,-37,-42,39,39,-67,-71,-27,-30,39,39,39,39,39,-44,39,39,-29,39,39,39,-43,39,39,39,39,-38,-39,-45,-26,39,-28,39,39,-31,]),'BOOL':([0,2,3,4,5,6,7,8,9,10,11,14,15,16,17,27,28,29,32,42,43,45,47,48,49,51,52,53,54,55,59,65,66,70,74,75,77,79,80,81,82,83,84,85,86,87,89,93,94,102,105,108,109,110,111,112,113,114,115,116,117,118,119,120,126,128,138,139,140,144,171,173,174,177,178,181,183,184,188,192,195,198,201,203,208,210,215,218,219,222,223,227,228,229,231,232,234,235,236,237,238,239,241,242,243,245,247,248,249,250,251,252,253,254,255,256,257,258,260,261,263,264,265,266,],[40,40,-3,-4,-5,-6,-7,-8,-9,-10,-11,-14,-15,-16,-17,40,40,40,40,-2,-12,-13,40,40,40,40,40,40,40,40,40,40,40,40,-40,-41,-51,40,-59,-60,-61,-62,-63,-64,-65,-66,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,-50,40,-21,-22,-23,40,40,40,-19,-20,-75,40,40,40,40,40,40,40,40,40,40,40,-18,-25,-32,40,-37,-42,40,40,-67,-71,-27,-30,40,40,40,40,40,-44,40,40,-29,40,40,40,-43,40,40,40,40,-38,-39,-45,-26,40,-28,40,40,-31,]),'NULL':([0,2,3,4,5,6,7,8,9,10,11,14,15,16,17,27,28,29,32,42,43,45,47,48,49,51,52,53,54,55,59,65,66,70,74,75,77,79,80,81,82,83,84,85,86,87,89,93,94,102,105,108,109,110,111,112,113,114,115,116,117,118,119,120,126,128,138,139,140,144,171,173,174,177,178,181,183,184,188,192,195,198,201,203,208,210,215,218,219,222,223,227,228,229,231,232,234,235,236,237,238,239,241,242,243,245,247,248,249,250,251,252,253,254,255,256,257,258,260,261,263,264,265,266,],[41,41,-3,-4,-5,-6,-7,-8,-9,-10,-11,-14,-15,-16,-17,41,41,41,41,-2,-12,-13,41,41,41,41,41,41,41,41,41,41,41,41,-40,-41,-51,41,-59,-60,-61,-62,-63,-64,-65,-66,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,-50,41,-21,-22,-23,41,41,41,-19,-20,-75,41,41,41,41,41,41,41,41,41,41,41,-18,-25,-32,41,-37,-42,41,41,-67,-71,-27,-30,41,41,41,41,41,-44,41,41,-29,41,41,41,-43,41,41,41,41,-38,-39,-45,-26,41,-28,41,41,-31,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,14,15,16,17,42,43,45,74,75,77,126,138,139,140,174,177,178,215,218,219,223,227,231,232,234,235,242,247,251,256,257,258,260,263,266,],[0,-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-14,-15,-16,-17,-2,-12,-13,-40,-41,-51,-50,-21,-22,-23,-19,-20,-75,-18,-25,-32,-37,-42,-67,-71,-27,-30,-44,-29,-43,-38,-39,-45,-26,-28,-31,]),'RIGHT_CURLY_BRACKET':([3,4,5,6,7,8,9,10,11,14,15,16,17,42,43,45,74,75,77,126,138,139,140,174,177,178,198,199,200,203,208,215,218,219,220,223,227,229,231,232,234,235,237,241,242,247,248,249,250,251,252,254,256,257,258,260,261,263,265,266,],[-3,-4,-5,-6,-7,-8,-9,-10,-11,-14,-15,-16,-17,-2,-12,-13,-40,-41,-51,-50,-21,-22,-23,-19,-20,-75,218,219,-34,223,227,-18,-25,-32,-33,-37,-42,242,-67,-71,-27,-30,-36,251,-44,-29,-35,256,257,-43,258,260,-38,-39,-45,-26,263,-28,266,-31,]),'CASE':([3,4,5,6,7,8,9,10,11,14,15,16,17,42,43,45,74,75,77,126,138,139,140,174,177,178,182,199,200,215,218,219,220,223,227,231,232,234,235,237,242,247,248,251,256,257,258,260,263,266,],[-3,-4,-5,-6,-7,-8,-9,-10,-11,-14,-15,-16,-17,-2,-12,-13,-40,-41,-51,-50,-21,-22,-23,-19,-20,-75,201,201,-34,-18,-25,-32,-33,-37,-42,-67,-71,-27,-30,-36,-44,-29,-35,-43,-38,-39,-45,-26,-28,-31,]),'DEFAULT':([3,4,5,6,7,8,9,10,11,14,15,16,17,42,43,45,74,75,77,126,138,139,140,174,177,178,182,199,200,215,218,219,220,223,227,231,232,234,235,237,242,247,248,251,256,257,258,260,263,266,],[-3,-4,-5,-6,-7,-8,-9,-10,-11,-14,-15,-16,-17,-2,-12,-13,-40,-41,-51,-50,-21,-22,-23,-19,-20,-75,202,202,-34,-18,-25,-32,-33,-37,-42,-67,-71,-27,-30,-36,-44,-29,-35,-43,-38,-39,-45,-26,-28,-31,]),'SEMICOLON':([12,13,19,25,26,30,31,32,36,37,38,39,40,41,50,58,60,61,62,63,64,67,68,69,71,72,73,76,79,80,81,82,83,84,85,86,87,90,91,92,96,106,107,122,123,125,129,130,131,132,133,134,135,136,137,141,143,145,149,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,172,179,194,206,213,214,216,],[43,45,-121,-57,-58,74,75,77,-115,-116,-117,-118,-119,-120,-76,-68,-81,-82,-83,-84,-85,-90,-91,-92,-121,-69,-70,126,-56,-59,-60,-61,-62,-63,-64,-65,-66,138,139,140,-53,-88,-89,-86,-87,-76,-55,-114,174,-109,-110,-111,-112,-113,177,178,-52,-78,184,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-74,-106,-54,-77,215,174,-24,231,232,]),'PERIOD':([12,19,25,26,33,36,37,38,39,40,41,50,58,60,61,62,63,64,67,68,69,71,72,73,79,80,81,82,83,84,85,86,87,96,106,107,122,123,125,129,143,145,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,172,179,213,],[44,-121,-57,-58,78,-115,-116,-117,-118,-119,-120,-76,-68,-81,-82,-83,44,-85,-90,-91,-92,-121,-69,-70,-56,-59,-60,-61,-62,-63,-64,-65,-66,-53,-88,-89,-86,-87,-76,-55,-52,-78,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-74,-106,-54,-77,-24,]),'EQUAL':([19,46,50,130,131,132,133,134,135,136,145,150,175,179,197,206,217,],[47,89,93,-114,173,-109,-110,-111,-112,-113,-78,89,195,-77,-73,173,-72,]),'ADITION':([19,],[48,]),'SUBTRACTION':([19,],[49,]),'LEFT_PARENTHESIS':([19,20,21,22,23,27,28,29,32,47,48,49,51,52,53,54,55,57,59,65,66,70,71,79,80,81,82,83,84,85,86,87,89,93,94,102,105,108,109,110,111,112,113,114,115,116,117,118,119,120,127,128,144,171,173,174,177,184,192,195,201,215,244,253,],[51,53,54,55,56,70,70,70,70,70,70,70,70,70,70,70,70,104,70,70,70,70,51,128,-59,-60,-61,-62,-63,-64,-65,-66,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,171,70,70,70,70,-19,-20,70,70,70,70,-18,253,70,]),'LEFT_SQ_BRACKET':([19,27,28,29,32,47,48,49,50,51,52,53,54,55,59,65,66,70,71,79,80,81,82,83,84,85,86,87,89,93,94,102,105,108,109,110,111,112,113,114,115,116,117,118,119,120,125,128,130,131,132,133,134,135,136,144,145,171,173,174,175,177,179,184,192,195,197,201,207,215,217,253,],[52,59,59,59,59,59,59,59,94,59,59,59,59,59,59,59,59,59,52,59,-59,-60,-61,-62,-63,-64,-65,-66,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,94,59,-114,176,-109,-110,-111,-112,-113,59,-78,59,59,-19,196,-20,-77,59,59,59,-73,59,226,-18,-72,59,]),'TERNARY':([25,26,36,37,38,39,40,41,58,60,61,62,63,64,67,68,69,71,72,73,76,79,80,81,82,83,84,85,86,87,90,91,92,96,97,98,99,100,101,106,107,122,123,124,125,129,137,141,142,143,145,149,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,172,179,180,194,204,213,216,221,259,],[-57,-58,-115,-116,-117,-118,-119,-120,105,-81,-82,-83,-84,-85,-90,-91,-92,-121,105,105,105,-56,-59,-60,-61,-62,-63,-64,-65,-66,105,105,105,-53,105,105,105,105,105,-88,-89,-86,-87,105,-76,105,105,105,105,-52,-78,105,105,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-74,-106,-54,-77,105,105,105,105,105,105,105,]),'INCREASE':([25,26,36,37,38,39,40,41,58,60,61,62,63,64,67,68,69,71,72,73,76,79,80,81,82,83,84,85,86,87,90,91,92,96,97,98,99,100,101,106,107,122,123,124,125,129,137,141,142,143,145,149,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,172,179,180,194,204,213,216,221,259,],[-57,-58,-115,-116,-117,-118,-119,-120,106,-81,-82,-83,-84,-85,-90,-91,-92,-121,106,106,106,-56,-59,-60,-61,-62,-63,-64,-65,-66,106,106,106,-53,106,106,106,106,106,-88,-89,-86,-87,106,-76,106,106,106,106,-52,-78,106,106,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-74,-106,-54,-77,106,106,106,106,106,106,106,]),'DECREASE':([25,26,36,37,38,39,40,41,58,60,61,62,63,64,67,68,69,71,72,73,76,79,80,81,82,83,84,85,86,87,90,91,92,96,97,98,99,100,101,106,107,122,123,124,125,129,137,141,142,143,145,149,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,172,179,180,194,204,213,216,221,259,],[-57,-58,-115,-116,-117,-118,-119,-120,107,-81,-82,-83,-84,-85,-90,-91,-92,-121,107,107,107,-56,-59,-60,-61,-62,-63,-64,-65,-66,107,107,107,-53,107,107,107,107,107,-88,-89,-86,-87,107,-76,107,107,107,107,-52,-78,107,107,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-74,-106,-54,-77,107,107,107,107,107,107,107,]),'PLUS':([25,26,36,37,38,39,40,41,58,60,61,62,63,64,67,68,69,71,72,73,76,79,80,81,82,83,84,85,86,87,90,91,92,96,97,98,99,100,101,106,107,122,123,124,125,129,137,141,142,143,145,149,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,172,179,180,194,204,213,216,221,259,],[-57,-58,-115,-116,-117,-118,-119,-120,108,-81,-82,-83,-84,-85,-90,-91,-92,-121,108,108,108,-56,-59,-60,-61,-62,-63,-64,-65,-66,108,108,108,-53,108,108,108,108,108,-88,-89,-86,-87,108,-76,108,108,108,108,-52,-78,108,108,-93,-94,-95,-96,-97,108,108,108,108,108,108,108,108,-74,-106,-54,-77,108,108,108,108,108,108,108,]),'MINUS':([25,26,27,28,29,32,36,37,38,39,40,41,47,48,49,51,52,53,54,55,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,76,79,80,81,82,83,84,85,86,87,89,90,91,92,93,94,96,97,98,99,100,101,102,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,122,123,124,125,128,129,137,141,142,143,144,145,149,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,177,179,180,184,192,194,195,201,204,213,215,216,221,253,259,],[-57,-58,65,65,65,65,-115,-116,-117,-118,-119,-120,65,65,65,65,65,65,65,65,109,65,-81,-82,-83,-84,-85,65,65,-90,-91,-92,65,-121,109,109,109,65,-59,-60,-61,-62,-63,-64,-65,-66,65,109,109,109,65,65,-53,109,109,109,109,109,65,65,-88,-89,65,65,65,65,65,65,65,65,65,65,65,65,65,-86,-87,109,-76,65,109,109,109,109,-52,65,-78,109,109,-93,-94,-95,-96,-97,109,109,109,109,109,109,109,109,-74,-106,65,-54,65,-19,-20,-77,109,65,65,109,65,65,109,109,-18,109,109,65,109,]),'TIMES':([25,26,36,37,38,39,40,41,58,60,61,62,63,64,67,68,69,71,72,73,76,79,80,81,82,83,84,85,86,87,90,91,92,96,97,98,99,100,101,106,107,122,123,124,125,129,137,141,142,143,145,149,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,172,179,180,194,204,213,216,221,259,],[-57,-58,-115,-116,-117,-118,-119,-120,110,-81,-82,-83,-84,-85,-90,-91,-92,-121,110,110,110,-56,-59,-60,-61,-62,-63,-64,-65,-66,110,110,110,-53,110,110,110,110,110,-88,-89,-86,-87,110,-76,110,110,110,110,-52,-78,110,110,110,110,-95,-96,-97,110,110,110,110,110,110,110,110,-74,-106,-54,-77,110,110,110,110,110,110,110,]),'DIVIDE':([25,26,36,37,38,39,40,41,58,60,61,62,63,64,67,68,69,71,72,73,76,79,80,81,82,83,84,85,86,87,90,91,92,96,97,98,99,100,101,106,107,122,123,124,125,129,137,141,142,143,145,149,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,172,179,180,194,204,213,216,221,259,],[-57,-58,-115,-116,-117,-118,-119,-120,111,-81,-82,-83,-84,-85,-90,-91,-92,-121,111,111,111,-56,-59,-60,-61,-62,-63,-64,-65,-66,111,111,111,-53,111,111,111,111,111,-88,-89,-86,-87,111,-76,111,111,111,111,-52,-78,111,111,111,111,-95,-96,-97,111,111,111,111,111,111,111,111,-74,-106,-54,-77,111,111,111,111,111,111,111,]),'MODULUS':([25,26,36,37,38,39,40,41,58,60,61,62,63,64,67,68,69,71,72,73,76,79,80,81,82,83,84,85,86,87,90,91,92,96,97,98,99,100,101,106,107,122,123,124,125,129,137,141,142,143,145,149,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,172,179,180,194,204,213,216,221,259,],[-57,-58,-115,-116,-117,-118,-119,-120,112,-81,-82,-83,-84,-85,-90,-91,-92,-121,112,112,112,-56,-59,-60,-61,-62,-63,-64,-65,-66,112,112,112,-53,112,112,112,112,112,-88,-89,-86,-87,112,-76,112,112,112,112,-52,-78,112,112,112,112,-95,-96,-97,112,112,112,112,112,112,112,112,-74,-106,-54,-77,112,112,112,112,112,112,112,]),'LESS':([25,26,36,37,38,39,40,41,58,60,61,62,63,64,67,68,69,71,72,73,76,79,80,81,82,83,84,85,86,87,90,91,92,96,97,98,99,100,101,106,107,122,123,124,125,129,137,141,142,143,145,149,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,172,179,180,194,204,213,216,221,259,],[-57,-58,-115,-116,-117,-118,-119,-120,113,-81,-82,-83,-84,-85,-90,-91,-92,-121,113,113,113,-56,-59,-60,-61,-62,-63,-64,-65,-66,113,113,113,-53,113,113,113,113,113,-88,-89,-86,-87,113,-76,113,113,113,113,-52,-78,113,113,-93,-94,-95,-96,-97,-98,-99,113,113,-102,-103,113,113,-74,-106,-54,-77,113,113,113,113,113,113,113,]),'GREATER':([25,26,36,37,38,39,40,41,58,60,61,62,63,64,67,68,69,71,72,73,76,79,80,81,82,83,84,85,86,87,90,91,92,96,97,98,99,100,101,106,107,122,123,124,125,129,137,141,142,143,145,149,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,172,179,180,194,204,213,216,221,259,],[-57,-58,-115,-116,-117,-118,-119,-120,114,-81,-82,-83,-84,-85,-90,-91,-92,-121,114,114,114,-56,-59,-60,-61,-62,-63,-64,-65,-66,114,114,114,-53,114,114,114,114,114,-88,-89,-86,-87,114,-76,114,114,114,114,-52,-78,114,114,-93,-94,-95,-96,-97,-98,-99,114,114,-102,-103,114,114,-74,-106,-54,-77,114,114,114,114,114,114,114,]),'EQUAL_TO':([25,26,36,37,38,39,40,41,58,60,61,62,63,64,67,68,69,71,72,73,76,79,80,81,82,83,84,85,86,87,90,91,92,96,97,98,99,100,101,106,107,122,123,124,125,129,137,141,142,143,145,149,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,172,179,180,194,204,213,216,221,259,],[-57,-58,-115,-116,-117,-118,-119,-120,115,-81,-82,-83,-84,-85,-90,-91,-92,-121,115,115,115,-56,-59,-60,-61,-62,-63,-64,-65,-66,115,115,115,-53,115,115,115,115,115,-88,-89,-86,-87,115,-76,115,115,115,115,-52,-78,115,115,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,115,115,-74,-106,-54,-77,115,115,115,115,115,115,115,]),'NOT_EQUAL_TO':([25,26,36,37,38,39,40,41,58,60,61,62,63,64,67,68,69,71,72,73,76,79,80,81,82,83,84,85,86,87,90,91,92,96,97,98,99,100,101,106,107,122,123,124,125,129,137,141,142,143,145,149,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,172,179,180,194,204,213,216,221,259,],[-57,-58,-115,-116,-117,-118,-119,-120,116,-81,-82,-83,-84,-85,-90,-91,-92,-121,116,116,116,-56,-59,-60,-61,-62,-63,-64,-65,-66,116,116,116,-53,116,116,116,116,116,-88,-89,-86,-87,116,-76,116,116,116,116,-52,-78,116,116,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,116,116,-74,-106,-54,-77,116,116,116,116,116,116,116,]),'LESS_EQUAL':([25,26,36,37,38,39,40,41,58,60,61,62,63,64,67,68,69,71,72,73,76,79,80,81,82,83,84,85,86,87,90,91,92,96,97,98,99,100,101,106,107,122,123,124,125,129,137,141,142,143,145,149,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,172,179,180,194,204,213,216,221,259,],[-57,-58,-115,-116,-117,-118,-119,-120,117,-81,-82,-83,-84,-85,-90,-91,-92,-121,117,117,117,-56,-59,-60,-61,-62,-63,-64,-65,-66,117,117,117,-53,117,117,117,117,117,-88,-89,-86,-87,117,-76,117,117,117,117,-52,-78,117,117,-93,-94,-95,-96,-97,-98,-99,117,117,-102,-103,117,117,-74,-106,-54,-77,117,117,117,117,117,117,117,]),'GREATER_EQUAL':([25,26,36,37,38,39,40,41,58,60,61,62,63,64,67,68,69,71,72,73,76,79,80,81,82,83,84,85,86,87,90,91,92,96,97,98,99,100,101,106,107,122,123,124,125,129,137,141,142,143,145,149,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,172,179,180,194,204,213,216,221,259,],[-57,-58,-115,-116,-117,-118,-119,-120,118,-81,-82,-83,-84,-85,-90,-91,-92,-121,118,118,118,-56,-59,-60,-61,-62,-63,-64,-65,-66,118,118,118,-53,118,118,118,118,118,-88,-89,-86,-87,118,-76,118,118,118,118,-52,-78,118,118,-93,-94,-95,-96,-97,-98,-99,118,118,-102,-103,118,118,-74,-106,-54,-77,118,118,118,118,118,118,118,]),'AND':([25,26,36,37,38,39,40,41,58,60,61,62,63,64,67,68,69,71,72,73,76,79,80,81,82,83,84,85,86,87,90,91,92,96,97,98,99,100,101,106,107,122,123,124,125,129,137,141,142,143,145,149,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,172,179,180,194,204,213,216,221,259,],[-57,-58,-115,-116,-117,-118,-119,-120,119,-81,-82,-83,-84,-85,-90,-91,-92,-121,119,119,119,-56,-59,-60,-61,-62,-63,-64,-65,-66,119,119,119,-53,119,119,119,119,119,-88,-89,-86,-87,119,-76,119,119,119,119,-52,-78,119,119,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,119,-74,-106,-54,-77,119,119,119,119,119,119,119,]),'OR':([25,26,36,37,38,39,40,41,58,60,61,62,63,64,67,68,69,71,72,73,76,79,80,81,82,83,84,85,86,87,90,91,92,96,97,98,99,100,101,106,107,122,123,124,125,129,137,141,142,143,145,149,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,172,179,180,194,204,213,216,221,259,],[-57,-58,-115,-116,-117,-118,-119,-120,120,-81,-82,-83,-84,-85,-90,-91,-92,-121,120,120,120,-56,-59,-60,-61,-62,-63,-64,-65,-66,120,120,120,-53,120,120,120,120,120,-88,-89,-86,-87,120,-76,120,120,120,120,-52,-78,120,120,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-74,-106,-54,-77,120,120,120,120,120,120,120,]),'RIGHT_PARENTHESIS':([25,26,36,37,38,39,40,41,51,58,60,61,62,63,64,67,68,69,71,72,73,79,80,81,82,83,84,85,86,87,95,96,97,99,100,101,104,106,107,122,123,124,125,128,129,130,132,133,134,135,136,143,145,153,154,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,172,179,180,193,204,205,207,212,213,240,259,],[-57,-58,-115,-116,-117,-118,-119,-120,96,-68,-81,-82,-83,-84,-85,-90,-91,-92,-121,-69,-70,-56,-59,-60,-61,-62,-63,-64,-65,-66,143,-53,-80,146,147,148,152,-88,-89,-86,-87,170,-76,172,-55,-114,-109,-110,-111,-112,-113,-52,-78,190,-47,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-74,-106,-54,-77,-79,214,224,225,-48,-46,-24,-49,262,]),'COMMA':([25,26,36,37,38,39,40,41,58,60,61,62,63,64,67,68,69,71,72,73,79,80,81,82,83,84,85,86,87,95,96,97,106,107,121,122,123,125,129,130,132,133,134,135,136,143,145,153,154,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,172,179,180,193,207,212,213,240,],[-57,-58,-115,-116,-117,-118,-119,-120,-68,-81,-82,-83,-84,-85,-90,-91,-92,-121,-69,-70,-56,-59,-60,-61,-62,-63,-64,-65,-66,144,-53,-80,-88,-89,144,-86,-87,-76,-55,-114,-109,-110,-111,-112,-113,-52,-78,191,-47,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-74,-106,-54,-77,-79,144,-48,-46,-24,-49,]),'RIGHT_SQ_BRACKET':([25,26,36,37,38,39,40,41,58,60,61,62,63,64,67,68,69,71,72,73,79,80,81,82,83,84,85,86,87,96,97,98,106,107,121,122,123,125,129,142,143,145,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,172,176,179,180,196,213,226,],[-57,-58,-115,-116,-117,-118,-119,-120,-68,-81,-82,-83,-84,-85,-90,-91,-92,-121,-69,-70,-56,-59,-60,-61,-62,-63,-64,-65,-66,-53,-80,145,-88,-89,169,-86,-87,-76,-55,179,-52,-78,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-74,-106,-54,197,-77,-79,217,-24,240,]),'COLON':([25,26,36,37,38,39,40,41,46,58,60,61,62,63,64,67,68,69,71,72,73,79,80,81,82,83,84,85,86,87,96,106,107,122,123,125,129,143,145,150,151,152,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,172,179,190,202,213,221,],[-57,-58,-115,-116,-117,-118,-119,-120,88,-68,-81,-82,-83,-84,-85,-90,-91,-92,-121,-69,-70,-56,-59,-60,-61,-62,-63,-64,-65,-66,-53,-88,-89,-86,-87,-76,-55,-52,-78,186,187,189,192,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-74,-106,-54,-77,211,222,-24,236,]),'NOT':([27,28,29,32,47,48,49,51,52,53,54,55,59,65,66,70,79,80,81,82,83,84,85,86,87,89,93,94,102,105,108,109,110,111,112,113,114,115,116,117,118,119,120,128,144,171,173,174,177,184,192,195,201,215,253,],[66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,-59,-60,-61,-62,-63,-64,-65,-66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,-19,-20,66,66,66,66,-18,66,]),'TOSTRING':([44,],[80,]),'TOLOWERCASE':([44,],[81,]),'TOUPPERCASE':([44,],[82,]),'PUSH':([44,],[83,]),'POP':([44,],[84,]),'INDEXOF':([44,],[85,]),'JOIN':([44,],[86,]),'LENGTH':([44,],[87,]),'LOG':([78,],[127,]),'NUMBER':([88,186,187,189,211,],[132,132,132,132,132,]),'FLOAT':([88,186,187,189,211,],[133,133,133,133,133,]),'STRING':([88,186,187,189,211,],[134,134,134,134,134,]),'CHAR':([88,186,187,189,211,],[135,135,135,135,135,]),'BOOLEAN':([88,186,187,189,211,],[136,136,136,136,136,]),'LEFT_CURLY_BRACKET':([130,132,133,134,135,136,146,147,148,152,190,209,224,225,230,233,246,262,],[-114,-109,-110,-111,-112,-113,181,182,183,188,210,228,238,239,243,245,255,264,]),'OF':([150,],[185,]),'ELSE':([218,234,235,247,266,],[233,246,-30,-29,-31,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'start':([0,],[1,]),'block':([0,181,183,188,210,222,228,236,238,239,243,245,255,264,],[2,198,203,208,229,237,241,248,249,250,252,254,261,265,]),'instruction':([0,2,181,183,188,198,203,208,210,222,228,229,236,237,238,239,241,243,245,248,249,250,252,254,255,261,264,265,],[3,42,3,3,3,42,42,42,3,3,3,42,3,42,3,3,42,3,3,42,42,42,42,42,3,42,3,42,]),'declaration':([0,2,56,181,183,188,198,203,208,210,222,228,229,236,237,238,239,241,243,245,248,249,250,252,254,255,261,264,265,],[4,4,102,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'declaration_array':([0,2,181,183,188,198,203,208,210,222,228,229,236,237,238,239,241,243,245,248,249,250,252,254,255,261,264,265,],[5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'assignment':([0,2,181,183,188,198,203,208,210,222,228,229,236,237,238,239,241,243,245,248,249,250,252,254,255,261,264,265,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'if':([0,2,181,183,188,198,203,208,210,222,228,229,236,237,238,239,241,243,245,248,249,250,252,254,255,261,264,265,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'switch':([0,2,181,183,188,198,203,208,210,222,228,229,236,237,238,239,241,243,245,248,249,250,252,254,255,261,264,265,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'while':([0,2,181,183,188,198,203,208,210,222,228,229,236,237,238,239,241,243,245,248,249,250,252,254,255,261,264,265,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'for':([0,2,181,183,188,198,203,208,210,222,228,229,236,237,238,239,241,243,245,248,249,250,252,254,255,261,264,265,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'function':([0,2,181,183,188,198,203,208,210,222,228,229,236,237,238,239,241,243,245,248,249,250,252,254,255,261,264,265,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'methods':([0,2,27,28,29,32,47,48,49,51,52,53,54,55,59,65,66,70,79,89,93,94,102,105,108,109,110,111,112,113,114,115,116,117,118,119,120,128,144,171,173,181,183,184,188,192,195,198,201,203,208,210,222,228,229,236,237,238,239,241,243,245,248,249,250,252,253,254,255,261,264,265,],[12,12,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,12,12,63,12,63,63,12,63,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,63,12,12,12,12,12,]),'call_function':([0,2,27,28,29,32,47,48,49,51,52,53,54,55,59,65,66,70,79,89,93,94,102,105,108,109,110,111,112,113,114,115,116,117,118,119,120,128,144,171,173,181,183,184,188,192,195,198,201,203,208,210,222,228,229,236,237,238,239,241,243,245,248,249,250,252,253,254,255,261,264,265,],[13,13,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,13,13,64,13,64,64,13,64,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,64,13,13,13,13,13,]),'break':([0,2,181,183,188,198,203,208,210,222,228,229,236,237,238,239,241,243,245,248,249,250,252,254,255,261,264,265,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'continue':([0,2,181,183,188,198,203,208,210,222,228,229,236,237,238,239,241,243,245,248,249,250,252,254,255,261,264,265,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'return':([0,2,181,183,188,198,203,208,210,222,228,229,236,237,238,239,241,243,245,248,249,250,252,254,255,261,264,265,],[16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'print':([0,2,181,183,188,198,203,208,210,222,228,229,236,237,238,239,241,243,245,248,249,250,252,254,255,261,264,265,],[17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'data_symbol':([0,2,56,181,183,188,198,203,208,210,222,228,229,236,237,238,239,241,243,245,248,249,250,252,254,255,261,264,265,],[18,18,103,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'access_array':([0,2,27,28,29,32,47,48,49,51,52,53,54,55,59,65,66,70,79,89,93,94,102,105,108,109,110,111,112,113,114,115,116,117,118,119,120,128,144,171,173,181,183,184,188,192,195,198,201,203,208,210,222,228,229,236,237,238,239,241,243,245,248,249,250,252,253,254,255,261,264,265,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'value':([0,2,27,28,29,32,47,48,49,51,52,53,54,55,59,65,66,70,79,89,93,94,102,105,108,109,110,111,112,113,114,115,116,117,118,119,120,128,144,171,173,181,183,184,188,192,195,198,201,203,208,210,222,228,229,236,237,238,239,241,243,245,248,249,250,252,253,254,255,261,264,265,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'indexes_array':([19,71,],[50,125,]),'expression':([27,28,29,32,47,48,49,51,52,53,54,55,59,65,66,70,79,89,93,94,102,105,108,109,110,111,112,113,114,115,116,117,118,119,120,128,144,171,173,184,192,195,201,253,],[58,72,73,76,90,91,92,97,98,99,100,101,97,122,123,124,129,137,141,142,149,155,156,157,158,159,160,161,162,163,164,165,166,167,168,124,180,97,194,204,213,216,221,259,]),'expression_unary':([27,28,29,32,47,48,49,51,52,53,54,55,59,65,66,70,79,89,93,94,102,105,108,109,110,111,112,113,114,115,116,117,118,119,120,128,144,171,173,184,192,195,201,253,],[60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,]),'expression_binary':([27,28,29,32,47,48,49,51,52,53,54,55,59,65,66,70,79,89,93,94,102,105,108,109,110,111,112,113,114,115,116,117,118,119,120,128,144,171,173,184,192,195,201,253,],[61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,]),'expression_group':([27,28,29,32,47,48,49,51,52,53,54,55,59,65,66,70,79,89,93,94,102,105,108,109,110,111,112,113,114,115,116,117,118,119,120,128,144,171,173,184,192,195,201,253,],[62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,]),'arithmetic':([27,28,29,32,47,48,49,51,52,53,54,55,59,65,66,70,79,89,93,94,102,105,108,109,110,111,112,113,114,115,116,117,118,119,120,128,144,171,173,184,192,195,201,253,],[67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,]),'relational':([27,28,29,32,47,48,49,51,52,53,54,55,59,65,66,70,79,89,93,94,102,105,108,109,110,111,112,113,114,115,116,117,118,119,120,128,144,171,173,184,192,195,201,253,],[68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,]),'logical':([27,28,29,32,47,48,49,51,52,53,54,55,59,65,66,70,79,89,93,94,102,105,108,109,110,111,112,113,114,115,116,117,118,119,120,128,144,171,173,184,192,195,201,253,],[69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,]),'name_method':([44,],[79,]),'expression_list':([51,59,171,],[95,121,193,]),'data_type':([88,186,187,189,211,],[131,206,207,209,230,]),'params':([104,],[153,]),'param':([104,191,],[154,212,]),'dimension_array':([131,],[175,]),'cases':([182,],[199,]),'case':([182,199,],[200,220,]),'else_if_list':([218,],[234,]),'else_if':([218,234,],[235,247,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> start","S'",1,None,None,None),
  ('start -> block','start',1,'p_start','grammar.py',256),
  ('block -> block instruction','block',2,'p_block','grammar.py',260),
  ('block -> instruction','block',1,'p_block','grammar.py',261),
  ('instruction -> declaration','instruction',1,'p_instruction','grammar.py',269),
  ('instruction -> declaration_array','instruction',1,'p_instruction','grammar.py',270),
  ('instruction -> assignment','instruction',1,'p_instruction','grammar.py',271),
  ('instruction -> if','instruction',1,'p_instruction','grammar.py',272),
  ('instruction -> switch','instruction',1,'p_instruction','grammar.py',273),
  ('instruction -> while','instruction',1,'p_instruction','grammar.py',274),
  ('instruction -> for','instruction',1,'p_instruction','grammar.py',275),
  ('instruction -> function','instruction',1,'p_instruction','grammar.py',276),
  ('instruction -> methods SEMICOLON','instruction',2,'p_instruction','grammar.py',277),
  ('instruction -> call_function SEMICOLON','instruction',2,'p_instruction','grammar.py',278),
  ('instruction -> break','instruction',1,'p_instruction','grammar.py',279),
  ('instruction -> continue','instruction',1,'p_instruction','grammar.py',280),
  ('instruction -> return','instruction',1,'p_instruction','grammar.py',281),
  ('instruction -> print','instruction',1,'p_instruction','grammar.py',282),
  ('declaration -> data_symbol ID COLON data_type EQUAL expression SEMICOLON','declaration',7,'p_declaration_type_value','grammar.py',286),
  ('declaration -> data_symbol ID COLON data_type SEMICOLON','declaration',5,'p_declaration_type','grammar.py',291),
  ('declaration -> data_symbol ID EQUAL expression SEMICOLON','declaration',5,'p_declaration_value','grammar.py',296),
  ('assignment -> ID EQUAL expression SEMICOLON','assignment',4,'p_assignment','grammar.py',301),
  ('assignment -> ID ADITION expression SEMICOLON','assignment',4,'p_assignment','grammar.py',302),
  ('assignment -> ID SUBTRACTION expression SEMICOLON','assignment',4,'p_assignment','grammar.py',303),
  ('expression -> expression TERNARY expression COLON expression','expression',5,'p_tenary','grammar.py',308),
  ('if -> IF LEFT_PARENTHESIS expression RIGHT_PARENTHESIS LEFT_CURLY_BRACKET block RIGHT_CURLY_BRACKET','if',7,'p_if','grammar.py',313),
  ('if -> IF LEFT_PARENTHESIS expression RIGHT_PARENTHESIS LEFT_CURLY_BRACKET block RIGHT_CURLY_BRACKET ELSE LEFT_CURLY_BRACKET block RIGHT_CURLY_BRACKET','if',11,'p_if','grammar.py',314),
  ('if -> IF LEFT_PARENTHESIS expression RIGHT_PARENTHESIS LEFT_CURLY_BRACKET block RIGHT_CURLY_BRACKET else_if_list','if',8,'p_if','grammar.py',315),
  ('if -> IF LEFT_PARENTHESIS expression RIGHT_PARENTHESIS LEFT_CURLY_BRACKET block RIGHT_CURLY_BRACKET else_if_list ELSE LEFT_CURLY_BRACKET block RIGHT_CURLY_BRACKET','if',12,'p_if','grammar.py',316),
  ('else_if_list -> else_if_list else_if','else_if_list',2,'p_else_if_list','grammar.py',331),
  ('else_if_list -> else_if','else_if_list',1,'p_else_if_list','grammar.py',332),
  ('else_if -> ELSE IF LEFT_PARENTHESIS expression RIGHT_PARENTHESIS LEFT_CURLY_BRACKET block RIGHT_CURLY_BRACKET','else_if',8,'p_else_if','grammar.py',340),
  ('switch -> SWITCH LEFT_PARENTHESIS expression RIGHT_PARENTHESIS LEFT_CURLY_BRACKET cases RIGHT_CURLY_BRACKET','switch',7,'p_switch','grammar.py',345),
  ('cases -> cases case','cases',2,'p_cases','grammar.py',350),
  ('cases -> case','cases',1,'p_cases','grammar.py',351),
  ('case -> CASE expression COLON block','case',4,'p_case','grammar.py',359),
  ('case -> DEFAULT COLON block','case',3,'p_case','grammar.py',360),
  ('while -> WHILE LEFT_PARENTHESIS expression RIGHT_PARENTHESIS LEFT_CURLY_BRACKET block RIGHT_CURLY_BRACKET','while',7,'p_while','grammar.py',368),
  ('for -> FOR LEFT_PARENTHESIS declaration expression SEMICOLON expression RIGHT_PARENTHESIS LEFT_CURLY_BRACKET block RIGHT_CURLY_BRACKET','for',10,'p_for','grammar.py',373),
  ('for -> FOR LEFT_PARENTHESIS data_symbol ID OF ID RIGHT_PARENTHESIS LEFT_CURLY_BRACKET block RIGHT_CURLY_BRACKET','for',10,'p_for_array','grammar.py',378),
  ('break -> BREAK SEMICOLON','break',2,'p_break','grammar.py',383),
  ('continue -> CONTINUE SEMICOLON','continue',2,'p_continue','grammar.py',388),
  ('function -> FUNCTION ID LEFT_PARENTHESIS RIGHT_PARENTHESIS LEFT_CURLY_BRACKET block RIGHT_CURLY_BRACKET','function',7,'p_function','grammar.py',393),
  ('function -> FUNCTION ID LEFT_PARENTHESIS RIGHT_PARENTHESIS COLON data_type LEFT_CURLY_BRACKET block RIGHT_CURLY_BRACKET','function',9,'p_function','grammar.py',394),
  ('function -> FUNCTION ID LEFT_PARENTHESIS params RIGHT_PARENTHESIS LEFT_CURLY_BRACKET block RIGHT_CURLY_BRACKET','function',8,'p_function','grammar.py',395),
  ('function -> FUNCTION ID LEFT_PARENTHESIS params RIGHT_PARENTHESIS COLON data_type LEFT_CURLY_BRACKET block RIGHT_CURLY_BRACKET','function',10,'p_function','grammar.py',396),
  ('params -> params COMMA param','params',3,'p_params','grammar.py',411),
  ('params -> param','params',1,'p_params','grammar.py',412),
  ('param -> ID COLON data_type','param',3,'p_param','grammar.py',421),
  ('param -> ID COLON data_type LEFT_SQ_BRACKET RIGHT_SQ_BRACKET','param',5,'p_param','grammar.py',422),
  ('return -> RETURN expression SEMICOLON','return',3,'p_return','grammar.py',431),
  ('return -> RETURN SEMICOLON','return',2,'p_return','grammar.py',432),
  ('call_function -> ID LEFT_PARENTHESIS expression_list RIGHT_PARENTHESIS','call_function',4,'p_call_function','grammar.py',440),
  ('call_function -> ID LEFT_PARENTHESIS RIGHT_PARENTHESIS','call_function',3,'p_call_function','grammar.py',441),
  ('methods -> methods PERIOD name_method LEFT_PARENTHESIS RIGHT_PARENTHESIS','methods',5,'p_embedded_functions','grammar.py',449),
  ('methods -> methods PERIOD name_method expression','methods',4,'p_embedded_functions','grammar.py',450),
  ('methods -> methods PERIOD name_method','methods',3,'p_embedded_functions','grammar.py',451),
  ('methods -> access_array','methods',1,'p_embedded_functions','grammar.py',452),
  ('methods -> value','methods',1,'p_embedded_functions','grammar.py',453),
  ('name_method -> TOSTRING','name_method',1,'p_name_method','grammar.py',478),
  ('name_method -> TOLOWERCASE','name_method',1,'p_name_method','grammar.py',479),
  ('name_method -> TOUPPERCASE','name_method',1,'p_name_method','grammar.py',480),
  ('name_method -> PUSH','name_method',1,'p_name_method','grammar.py',481),
  ('name_method -> POP','name_method',1,'p_name_method','grammar.py',482),
  ('name_method -> INDEXOF','name_method',1,'p_name_method','grammar.py',483),
  ('name_method -> JOIN','name_method',1,'p_name_method','grammar.py',484),
  ('name_method -> LENGTH','name_method',1,'p_name_method','grammar.py',485),
  ('print -> CONSOLE PERIOD LOG LEFT_PARENTHESIS expression_list RIGHT_PARENTHESIS SEMICOLON','print',7,'p_print','grammar.py',489),
  ('methods -> PARSEINT expression','methods',2,'p_parseint','grammar.py',494),
  ('methods -> PARSEFLOAT expression','methods',2,'p_parsefloat','grammar.py',499),
  ('methods -> TYPEOF expression','methods',2,'p_typeof','grammar.py',504),
  ('declaration_array -> data_symbol ID COLON data_type dimension_array EQUAL expression SEMICOLON','declaration_array',8,'p_declaration_array','grammar.py',509),
  ('dimension_array -> dimension_array LEFT_SQ_BRACKET RIGHT_SQ_BRACKET','dimension_array',3,'p_dimension_array','grammar.py',514),
  ('dimension_array -> LEFT_SQ_BRACKET RIGHT_SQ_BRACKET','dimension_array',2,'p_dimension_array','grammar.py',515),
  ('expression -> LEFT_SQ_BRACKET expression_list RIGHT_SQ_BRACKET','expression',3,'p_expression_array','grammar.py',524),
  ('assignment -> ID indexes_array EQUAL expression SEMICOLON','assignment',5,'p_assignment_array','grammar.py',529),
  ('access_array -> ID indexes_array','access_array',2,'p_access_array','grammar.py',535),
  ('indexes_array -> indexes_array LEFT_SQ_BRACKET expression RIGHT_SQ_BRACKET','indexes_array',4,'p_expression_access_array','grammar.py',541),
  ('indexes_array -> LEFT_SQ_BRACKET expression RIGHT_SQ_BRACKET','indexes_array',3,'p_expression_access_array','grammar.py',542),
  ('expression_list -> expression_list COMMA expression','expression_list',3,'p_expression_list','grammar.py',551),
  ('expression_list -> expression','expression_list',1,'p_expression_list','grammar.py',552),
  ('expression -> expression_unary','expression',1,'p_expression','grammar.py',561),
  ('expression -> expression_binary','expression',1,'p_expression','grammar.py',562),
  ('expression -> expression_group','expression',1,'p_expression','grammar.py',563),
  ('expression -> methods','expression',1,'p_expression','grammar.py',564),
  ('expression -> call_function','expression',1,'p_expression','grammar.py',565),
  ('expression_unary -> MINUS expression','expression_unary',2,'p_expression_unary','grammar.py',569),
  ('expression_unary -> NOT expression','expression_unary',2,'p_expression_unary','grammar.py',570),
  ('expression_unary -> expression INCREASE','expression_unary',2,'p_expression_unary','grammar.py',571),
  ('expression_unary -> expression DECREASE','expression_unary',2,'p_expression_unary','grammar.py',572),
  ('expression_binary -> arithmetic','expression_binary',1,'p_expression_binary','grammar.py',581),
  ('expression_binary -> relational','expression_binary',1,'p_expression_binary','grammar.py',582),
  ('expression_binary -> logical','expression_binary',1,'p_expression_binary','grammar.py',583),
  ('arithmetic -> expression PLUS expression','arithmetic',3,'p_arithmetic','grammar.py',587),
  ('arithmetic -> expression MINUS expression','arithmetic',3,'p_arithmetic','grammar.py',588),
  ('arithmetic -> expression TIMES expression','arithmetic',3,'p_arithmetic','grammar.py',589),
  ('arithmetic -> expression DIVIDE expression','arithmetic',3,'p_arithmetic','grammar.py',590),
  ('arithmetic -> expression MODULUS expression','arithmetic',3,'p_arithmetic','grammar.py',591),
  ('relational -> expression LESS expression','relational',3,'p_relational','grammar.py',596),
  ('relational -> expression GREATER expression','relational',3,'p_relational','grammar.py',597),
  ('relational -> expression EQUAL_TO expression','relational',3,'p_relational','grammar.py',598),
  ('relational -> expression NOT_EQUAL_TO expression','relational',3,'p_relational','grammar.py',599),
  ('relational -> expression LESS_EQUAL expression','relational',3,'p_relational','grammar.py',600),
  ('relational -> expression GREATER_EQUAL expression','relational',3,'p_relational','grammar.py',601),
  ('logical -> expression AND expression','logical',3,'p_logical','grammar.py',606),
  ('logical -> expression OR expression','logical',3,'p_logical','grammar.py',607),
  ('expression_group -> LEFT_PARENTHESIS expression RIGHT_PARENTHESIS','expression_group',3,'p_expression_group','grammar.py',612),
  ('data_symbol -> VAR','data_symbol',1,'p_data_symbol','grammar.py',616),
  ('data_symbol -> CONST','data_symbol',1,'p_data_symbol','grammar.py',617),
  ('data_type -> NUMBER','data_type',1,'p_data_type','grammar.py',621),
  ('data_type -> FLOAT','data_type',1,'p_data_type','grammar.py',622),
  ('data_type -> STRING','data_type',1,'p_data_type','grammar.py',623),
  ('data_type -> CHAR','data_type',1,'p_data_type','grammar.py',624),
  ('data_type -> BOOLEAN','data_type',1,'p_data_type','grammar.py',625),
  ('data_type -> ID','data_type',1,'p_data_type','grammar.py',626),
  ('value -> INTEGER','value',1,'p_value','grammar.py',641),
  ('value -> DECIMAL','value',1,'p_value','grammar.py',642),
  ('value -> TEXT','value',1,'p_value','grammar.py',643),
  ('value -> CHARACTER','value',1,'p_value','grammar.py',644),
  ('value -> BOOL','value',1,'p_value','grammar.py',645),
  ('value -> NULL','value',1,'p_value','grammar.py',646),
  ('value -> ID','value',1,'p_value_id','grammar.py',650),
]
